
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\hdf\H4\releases\4.2.12\Doc\hdf4doc\UsrGuide\src\UG_Vdatas.fm" />
 <meta name="Originator" content="ImportMif" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF User’s Guide - 4.2.12</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="UG_Vdatas.css" type="text/css" />
 <link rel="StyleSheet" href="../../Responsive_HTML5_stylesheet.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHoverSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "4.0_1";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.png" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<div class="logo">
				<a href="../UG_Intro/UG_Intro.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:90px;" border="0" /></a> 
				 
			</div>
			<div class="title">
				<a href="../UG_Intro/UG_Intro.htm" class="homelink"><span>HDF User’s Guide - 4.2.12</span></a> 
				 
			</div>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:42px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:48px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:48px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="86">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:28px" /></a> 
						 
					</div>
				</div>
				<div class="brsNext">
					<a id="browseSeqNext" class="wBSNextButton" href="../UG_Vgroups/UG_Vgroups.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:48px" /></a> 
					 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:48px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:48px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack" class="wBSBackButton" href="../UG_SD/UG_SD.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:56px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<div class="mobile_browseholder">
					<div class="brsBack">
						<a id="browseSeqBack0" class="wBSBackButton" href="../UG_SD/UG_SD.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton" border="0" style="width:100%; max-width:48px" /></a> 
					</div>
					<div class="brsNext">
						<a id="browseSeqNext0" class="wBSNextButton" href="../UG_Vgroups/UG_Vgroups.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton" border="0" style="width:100%; max-width:48px" /></a> 
					</div>
				</div>
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">

 <p class="Body">&nbsp;</p>
 <p class="ChapTitleUnNum"><span class="FM_ChapterNumber">Chapter 4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_41304_Vdatas_VS_API"></a>Vdatas (VS API)</p>
 <p class="Body">&nbsp;</p>
 <p class="Heading1">4.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Chapter Overview</p>
 <p class="Body">This chapter describes the vdata data model, the Vdata interface (also called the VS interface or the VS API), and the vdata programming model.</p>
 <p class="Heading2">4.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The Vdata Model</p>
 <p class="Body"><a name="IX_description_94"></a>The<span class="Definition">&#160;</span>HDF <span class="Definition">Vdata model </span>provides a framework for storing customized tables, or <span class="Definition">vdatas</span>, in HDF files. The term “vdata” is an abbreviation of “vertex data”, alluding to the fact that the object was first implemented in HDF to store the vertex and edge information of polygon sets. The vdata design has since been generalized to apply to a broader variety of applications. </p>
 <p class="Body"><a name="IX_description_95"></a>A vdata is like a table that consists of a collection of <span class="Definition">records</span> whose values are stored in fixed-length <span class="Definition">fields</span>. All records have the same structure and all values in each field have the same data type. <a href="#XREF_18902_FIGURE_4a_Vdata"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">(See Figure 4a)</span></a>&#160;The library does not check for uniqueness in vdata’s name, class, or field names. For example, when two vdatas having the same name, the first vdata will always be returned by VSfind().</p>
 <p class="Figure"><span class="StepNumber">FIGURE 4a<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_18902_FIGURE_4a_Vdata"></a>Vdata Table Structure</p>
 <div align="center"><img alt="UG_Vdatas00001.png" style=" width:100%; margin-left:30pt; max-width:485.928pt;" id="image0" src="UG_Vdatas00001.png" />
 </div>
 <p class="Figure"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="Body"><a name="IX_description_98"></a><a name="IX_description_97"></a><a name="IX_description_96"></a>A <span class="Definition">vdata name</span>&#160;is a label typically assigned to describe the contents of a vdata. It often serves as a search key to locate a vdata in a file. A <span class="Definition">vdata class</span> further distinguishes a particular vdata by iden&#173;tifying the purpose or the use of its data. Finally, <span class="Definition">vdata</span><span class="Definition"> field names</span>&#160;are labels assigned to the fields in the vdata.</p>
 <p class="Heading3">4.2.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Records and Fields</p>
 <p class="Body"><a name="IX_description_100"></a><a name="IX_description_99"></a>Each <span class="Definition">record</span> in a vdata is composed of one or more fixed-length <span class="Definition">fields</span>. Vdata records and fields are identified by an index. The record and field indexes are zero-based and are separately incre&#173;mented by one for each additional record and field in the vdata.</p>
 <p class="Body">Every field in a vdata is assigned a data type when the vdata is created. The data type of a field may be any basic HDF data type: character, 8-bit, 16-bit, and 32-bit signed and unsigned integers, and 32-bit and 64-bit floating point numbers. The maximum length of a vdata record is 65,535 bytes. </p>
 <p class="Body"><a name="IX_description_101"></a>The Vdata model allows multiple entries per field as long as they have the same data type. The number of entries or <span class="Definition">components</span> in a field is called the <span class="Definition">order</span> of the field.</p>
 <p class="Body"><a name="IX_multi_component_field"></a>The organizational structure of a vdata is often determined by the data types of its data set or sets. For example, given a data set describing the location (“X,Y”) and temperature (“Temp”) of points in a plane, there are several ways to organize the data. <a href="#XREF_24580_FIGURE_4b_Three">(See Figure 4b)</a>&#160;If the “X”, “Y” and “Temp” values are of the same data type, they could be stored as three single-component fields, as a two-component “X_Y” field and a single-component “Temp” field, or as a three-component “X_Y_Temp” field. Generally, the “X,Y” data is stored in a single field, but HDF places no restrictions on the organization of field data and there are no significant HDF performance issues involved in choosing one organizational regime over another.</p>
 <p class="Figure"><span class="StepNumber">FIGURE 4b<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_24580_FIGURE_4b_Three"></a>Three Different Vdata Structures for Data of the Same Number Type</p>
 <div align="center"><img alt="UG_Vdatas00002.png" style=" width:100%; margin-left:30pt; max-width:487.008pt;" id="image1" src="UG_Vdatas00002.png" />
 </div>
 <p class="Figure"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="Heading2">4.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>T<a name="XREF_startrange_Vdata_API"></a>he Vdata Interface</p>
 <p class="Body">The Vdata interface consists of routines that are used to store and retrieve information about vda&#173;tas and their contents.</p>
 <p class="Heading3">4.3.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Header Files Used by the Vdata Interface</p>
 <p class="Body">The header file “hdf.h” must be included in programs that invoke Vdata interface routines.</p>
 <p class="Heading3">4.3.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Vdata Library Routines</p>
 <p class="Body">Vdata routines begin with the prefixes “VS”, “VF”, “VSQ”, and “VH” in C, and “vsf”, “vf”, “vsq”, and “vh” in FORTRAN-77. Vdata routines perform most general vdata operations, VF rou&#173;tines query information about vdata fields, and VSQ routines query information about specific vdatas. VH routines are high-level procedures that write to single-field vdatas.</p>
 <p class="Body">Vdata routines let you define, organize and manipulate vdatas. They are categorized as follows and are listed in <a href="#XREF_33493_TABLE_4A_Vdata">Table 4A</a> by their categories:</p>
 <p class="Bullet2"><a name="IX_routine_categories_1"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Access routines</span>&#160;control access to files and vdatas. Data transfer to and from a vdata can only occur after the access to the vdata has been initiated and before it is terminated. Some Vgroup interface routines are included since they are used interchangeably between the Vdata and Vgroup interfaces. Refer to <a href="../UG_Vgroups/UG_Vgroups.htm#XREF_34180_Vgroups_V_API">Chapter 5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Vgroups (V API)&quot;</a>, for a description of the Vgroup interface.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Read and write routines</span>&#160;store and retrieve the contents of and the information about a vdata.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">File inquiry routines </span>provide information about how vdatas are stored in a file. They are useful for locating vdatas in the file.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Vdata inquiry routines</span>&#160;provide specific information about a given vdata, including the vdata’s name, class, number of records, tag and reference number pairs, size, and interlace mode.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Field inquiry routines</span> provide specific information about the fields in a given vdata, includ&#173;ing the field’s size, name, order, and type, and the number of fields in the vdata.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4A<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_33493_TABLE_4A_Vdata"></a>Vdata Interface Routines</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.36pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.839pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Category</p>
</td>
  <td colspan="2" style="width : 133.044pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Names</p>
</td>
  <td rowspan="2" style="width : 192.480pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="4" style="width : 64.839pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Access/Create</p>
</td>
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Vstart</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vfstart</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Initializes the Vdata and the Vgroup interfaces (<a href="#XREF_28998_Vstart_and_VSattach">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.3.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSattach</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfatch</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Establishes access to a specified vdata (<a href="#XREF_28998_Vstart_and_VSattach">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.3.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSdetach</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfdtch</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Terminates access to a specified vdata (<a href="#XREF_36032_VSdetach_and_Vend">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.3.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Vend</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vfend</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Terminates access to the Vdata and the Vgroup interfaces (<a href="#XREF_36032_VSdetach_and_Vend">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.3.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="14" style="width : 64.839pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Read and Write</p>
</td>
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfdefine</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsffdef</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Defines a new vdata field (<a href="#XREF_23004_VSfdefine">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.1.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSread</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfrd/vsfrdc/vsfread</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reads one record from a vdata (<a href="#XREF_32800_VSread">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.6.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSseek</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfseek</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Seeks to a specified record in a vdata (<a href="#XREF_32597_VSseek">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetattr</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsnat/vsfscat</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the attribute of a vdata field or vdata (<a href="#XREF_16111_VSsetattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetclass</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfscls</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Assigns a class to a vdata (<a href="#XREF_19463_VSsetname_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.1.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetfields</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsfld</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Specifies the vdata fields to be read or written (<a href="#XREF_38506_VSsetfields">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.1.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;and <a href="#XREF_33834_VSsetfields">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.6.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetinterlace</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsint</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the interlace mode for a vdata (<a href="#XREF_15638_VSsetinterlace">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.1.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetname</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsnam</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Assigns a name to a vdata (<a href="#XREF_19463_VSsetname_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.1.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VHstoredata</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vhfsd/vhfscd</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Writes data to a vdata with a single-component field (<a href="#XREF_16469_VHstoredata_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VHstoredatam</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vhfsdm/vhfscdm</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Writes data to a vdata with a multi-component field (<a href="#XREF_16469_VHstoredata_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetblockinfo</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfgetblinfo</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the block size and the number of blocks for a linked-block vdata element (see <span style="font-style : italic; ">HDF Reference Manual</span>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetblocksize</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsetblsz</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets linked-block vdata element block size (see <span style="font-style : italic; ">HDF Reference Manual</span>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetnumblocks</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsetnmbl</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the number of blocks for a linked-block vdata element (see <span style="font-style : italic; ">HDF Reference Manual</span>)</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSwrite</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfwrt/vsfwrtc/</p>
  <p class="CellFunction">vsfwrit</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Writes records to a vdata (<a href="#XREF_23656_VSwrite">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.2.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="23" style="width : 64.839pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Vdata</p>
  <p class="FM_TableCategory">Inquiry</p>
  <p class="Body">&nbsp;</p>
</td>
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSattrinfo</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfainf</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves information on a given attribute (<a href="#XREF_26875_4_8_7_Querying">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.7<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSelts</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfelts</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the number of records in the specified vdata (<a href="#XREF_13523_4_9_3_Other_Vdata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfexist</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfex</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Locates a vdata given a list of field names (<a href="#XREF_15313_VSfexist">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.7.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfindex</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsffidx</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the index of a vdata field given the field name (<a href="#XREF_11074_VSfindex">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfnattrs</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsffnas</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the number of attributes of a vdata or vdata field (<a href="#XREF_16050_4_8_5_Querying_the">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfindattr</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsffdat</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the index of an attribute given the attribute name (<a href="#XREF_39833_4_8_6_Retrieving">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetattr</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfgnat/vsfgcat</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the values of a given attribute (<a href="#XREF_34277_VSgetattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetclass</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfgcls</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the class name of the specified vdata (<a href="#XREF_13523_4_9_3_Other_Vdata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetfields</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfgfld</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves all field names within the specified vdata (<a href="#XREF_13523_4_9_3_Other_Vdata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetinterlace</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfgint</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the interlace mode of the specified vdata (<a href="#XREF_13523_4_9_3_Other_Vdata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetname</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfgnam</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the name of the specified vdata (<a href="#XREF_13523_4_9_3_Other_Vdata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSinquire</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfinq</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns information about the specified vdata (<a href="#XREF_35960_VSinquire">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSisattr</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfisat</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Determines whether the given vdata is an attribute (<a href="#XREF_11493_VSisattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.8<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSnattrs</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfnats</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the total number of vdata attributes (<a href="#XREF_41541_4_8_4_Querying_the">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSQuerycount</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsqfnelt</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the number of records in the specified vdata (<a href="#XREF_41557_4_9_2_VSQuery">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSQueryfields</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsqfflds</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the field names of the specified vdata (<a href="#XREF_41557_4_9_2_VSQuery">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSQueryinterlace</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsqfintr</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the interlace mode of the specified vdata (<a href="#XREF_41557_4_9_2_VSQuery">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSQueryname</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsqfname</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the name of the specified vdata (<a href="#XREF_41557_4_9_2_VSQuery">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSQueryref</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsqref</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the reference number of the specified vdata (<a href="#XREF_41557_4_9_2_VSQuery">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSQuerytag</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsqtag</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the tag of the specified vdata (<a href="#XREF_41557_4_9_2_VSQuery">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSQueryvsize</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsqfsiz</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the local size in bytes of the specified vdata record (<a href="#XREF_41557_4_9_2_VSQuery">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetattr</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsnat/vsfscat</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the attribute of a vdata field or vdata (<a href="#XREF_16111_VSsetattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.8.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsizeof</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfsiz</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the size of the specified fields in a vdata (<a href="#XREF_13523_4_9_3_Other_Vdata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="6" style="width : 64.839pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Field</p>
  <p class="FM_TableCategory">Inquiry</p>
</td>
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldesize</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vffesiz</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the field size, as stored in a file, of a specified field (<a href="#XREF_24471_4_9_4_VF_Field">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldisize</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vffisiz</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the field size, as stored in memory, of a specified field (<a href="#XREF_24471_4_9_4_VF_Field">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldname</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vffname</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the name of the specified field in the given vdata (<a href="#XREF_24471_4_9_4_VF_Field">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldorder</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vffordr</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the order of the specified field in the given vdata (<a href="#XREF_24471_4_9_4_VF_Field">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldtype</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vfftype</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the data type for the specified field in the given vdata (<a href="#XREF_24471_4_9_4_VF_Field">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFnfields</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vfnflds</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the total number of fields in the specified vdata (<a href="#XREF_24471_4_9_4_VF_Field">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="3" style="width : 64.839pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">File</p>
  <p class="FM_TableCategory">Inquiry</p>
</td>
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfind</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsffnd</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Searches for a vdata in a file given the vdata’s name (<a href="#XREF_38808_VSfind">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.7.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetid</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsfgid</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the reference number of the next vdata in the file (<a href="#XREF_39951_VSgetid">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.7.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 70.458pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSlone</p>
</td>
  <td style="width : 62.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">vsflone</p>
</td>
  <td style="width : 192.480pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the reference number of vdatas that are not linked with any vgroups (<a href="#XREF_13127_VSlone">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.7.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3">4.3.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_Vdata_identifiers"></a>Identifying Vdatas in the Vdata Interface</p>
 <p class="Body">The Vdata interface identifies vdatas in several ways. Before an existing vdata is accessible, it is uniquely identified by its <span class="Definition">reference number</span>. The reference number of a vdata can be obtained from the name or the class of the vdata, or by sequentially traversing the file. The concept of ref&#173;erence number is discussed in <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_30011_2_2_2_1_Data">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>2.2.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>. </p>
 <p class="Body">When a vdata is attached, it is assigned with an identifier, called <span class="Definition">vdata id</span>, which is used by the Vdata interface routines in accessing the vdata.</p>
 <p class="Heading3">4.3.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>P<a name="XREF_Vdata_API_programming"></a>rogramming Model for the Vdata Interface<span style="font-size: small;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>
 <p class="Body">The programming model for accessing vdatas is as follows:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Open the file.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Create a new vdata or open an existing one using its reference number.</p>
 <p class="Step"><span class="StepNumber">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Perform the desired operations on the vdata.</p>
 <p class="Step"><span class="StepNumber">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the vdata.</p>
 <p class="Step"><span class="StepNumber">6.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">7.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Close the file.</p>
 <p class="Body">To access a vdata, the calling program must contain the following calls, which are individually explained in the following subsections:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = Hopen(filename, file_access_mode, num_dds_block);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vstart(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = VSattach(file_id, vdata_ref, vdata_access_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;Optional operations&gt;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSdetach(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vend(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Hclose(file_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = hopen(filename, file_access_mode, num_dds_block)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfstart(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = vsfatch(file_id, vdata_ref, vdata_access_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;Optional operations&gt;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfdtch(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfend(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = hclose(file_id)</p>
 <p class="Heading3">4.3.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_28998_Vstart_and_VSattach"></a>Accessing Files and Vdatas: Vstart and VSattach</p>
 <p class="Body"><a name="XREF_Hopen_use_of_in_the"></a>An HDF file must be opened by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>&#160;before it can be accessed using the Vdata interface. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>&#160;is described in <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13138_HDF_Fundamentals">Chapter 2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;HDF Fundamentals&quot;</a>.</p>
 <p class="Body"><a name="XREF_Vstart_description"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart</span> must be called for every file to be accessed. This routine initializes the internal vdata struc&#173;tures used by the Vdata interface. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart</span> has only one argument, the file identifier (<span class="VarName">file_id</span>) returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>, and returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Note that the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart</span>&#160;routine is used by both the Vdata and Vgroup interfaces.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">V<a name="XREF_VSattach_description"></a>Sattach</span>&#160;initiates access to a vdata and must be called before any operations on the vdata may occur. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach</span>&#160;takes three arguments: <span class="VarName">file_id</span>, <span class="VarName">vdata_ref</span>, and <span class="VarName">vdata_access_mode</span>, and returns either a vdata identifier or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Body">The argument <span class="VarName">file_id</span>&#160;is the file identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>&#160;and <span class="VarName">vdata_ref</span> is the reference num&#173;ber that identifies the vdata to be accessed. Specifying <span class="VarName">vdata_ref</span>&#160;with a value of <span class="DefName">-1</span>&#160;will create a new vdata; specifying <span class="VarName">vdata_ref</span>&#160;with a nonexistent reference number will return an error code of <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>); and specifying <span class="VarName">vdata_ref</span>&#160;with a valid reference number will initiate access to the corresponding vdata.</p>
 <p class="Body"><a name="IX_when_to_use_in_obtaining_1"></a><a name="IX_when_to_use_in_obtaining"></a>If an existing vdata’s reference number is unknown, it must be obtained prior to the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach</span>&#160;call. (Refer to <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13138_HDF_Fundamentals">Chapter 2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;HDF Fundamentals&quot;</a>, for a description of reference numbers.) The HDF library provides two routines for this purpose, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span>&#160;can be used to obtain the reference number of a vdata when the vdata’s name is known. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;can be used to obtain the reference number when only the location of the vdata within the file is known; this is often discovered by sequentially traversing the file. These routines are discussed in <a href="#XREF_39951_VSgetid">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.7.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;and <a href="#XREF_38808_VSfind">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.7.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body">The argument <span class="VarName">vdata_access_mode</span> specifies the access mode (“<span class="VarName">r</span>” for read-only access or “<span class="VarName">w</span>” for read and write access) for subsequent operations on the specified vdata. Although several HDF user programs may simultaneously read from one vdata, only one write access is allowed at a time. The “<span class="VarName">r</span>” access mode may only be used with existing vdatas; the “<span class="VarName">w</span>” access mode is valid with both new vdatas (<span class="VarName">vdata_ref = -1</span>) <span style="font-style : italic; ">and</span> existing vdatas.</p>
 <p class="Body">Note that, although a vdata can be created without being written with data, either the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetname</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span> must be called in order for the vdata to exist in the file.</p>
 <p class="Body">The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach</span>&#160;are further defined in <a href="#XREF_25929_TABLE_4B_Vstart"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Table 4B on page 144</span></a>.</p>
 <p class="Heading3">4.3.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_36032_VSdetach_and_Vend"></a>Terminating Access to Vdatas and Files: VSdetach and Vend</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; "><a name="XREF_VSdetach_description"></a>VSdetach</span>&#160;terminates access to a vdata by updating pertinent information and freeing all memory associated with the vdata and initialized by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach</span>. Once access to the vdata is terminated, its identifier becomes invalid and any attempt to access it will result in an error condition. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSdetach</span>&#160;takes only one argument, the vdata identifier that is returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach</span>, and returns either <span class="DefName">SUC&#173;CEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">V<a name="XREF_Vend_description"></a>end</span>&#160;releases all internal data structures allocated by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend</span>&#160;must be called once for each call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart</span>&#160;and only after access to all vdatas have been terminated (i.e., all calls to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSdetach</span>&#160;have been made). Attempts to call Vdata interface routines after calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend</span>&#160;will result in an error condition. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend</span>&#160;takes one argument, the file identifier that is returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>, and returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Note that the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend</span>&#160;routine is used by both the Vdata and Vgroup interfaces.</p>
 <p class="Body">In summary, successfully terminating access to a vdata requires one<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; "> VSdetach</span>&#160;call for each call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach</span>&#160;and one <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend</span>&#160;call for each call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart</span>.</p>
 <p class="Body">The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSdetach</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend</span>&#160;are further defined in <a href="#XREF_25929_TABLE_4B_Vstart"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Table 4B</span></a>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hclose</span>&#160;terminates access to a file and should only be called after all <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend</span>&#160;calls have been made to close the Vdata interface. Refer to <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13138_HDF_Fundamentals">Chapter 2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;HDF Fundamentals&quot;</a>, for a description of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hclose</span>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4B<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_25929_TABLE_4B_Vstart"></a>V<a name="XREF_Vstart_parameter_list"></a>start, V<a name="XREF_VSattach_parameter_list"></a>Sattach, <a name="XREF_VSdetach_parameter_list"></a>VSdetach, an<a name="XREF_Vend_parameter_list"></a>d Vend Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:391.42pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 61.172pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 68.500pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 106.748pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 155.002pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 50.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 61.172pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Vstart</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vfstart)</p>
</td>
  <td style="width : 68.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 50.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.002pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 61.172pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSattach</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfatch)</p>
</td>
  <td style="width : 68.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 50.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.002pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 68.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_ref</p>
</td>
  <td style="width : 50.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.002pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reference number of the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 68.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_access_mode</p>
</td>
  <td style="width : 50.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 56.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*1</p>
</td>
  <td style="width : 155.002pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata access mode</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 61.172pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSdetach</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfdtch)</p>
</td>
  <td style="width : 68.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 50.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.002pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 61.172pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Vend</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vfend)</p>
</td>
  <td style="width : 68.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 50.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.374pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.002pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Accessing a Vdata in an HDF File</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen/hopen</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vstart/vfstart</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach/vsfatch</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSdetach/vsfdtch</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vend/vfend</span>, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hclose/hclose</span>&#160;to create and to access different vdatas from different HDF files.</p>
 <p class="Body">The program creates an HDF file, named &quot;General_Vdatas.hdf&quot;, containing a vdata. &#160;The program also creates a second HDF file, named &quot;Two_Vdatas.hdf&quot;, containing two vdatas. &#160;Note that, in this example, the program does not write data to these vdatas. &#160;Also note that before closing the file, the access to its vdatas and its corresponding Vdata interface must be terminated. These examples request information about a specific vdata.</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">#define &#160;FILE1_NAME &#160;&#160;&#160;&#160;&quot;General_Vdatas.hdf&quot; </p>
 <p class="Body">#define &#160;FILE2_NAME &#160;&#160;&#160;&#160;&quot;Two_Vdatas.hdf&quot; </p>
 <p class="Body">#define &#160;VDATA_NAME &#160;&#160;&#160;&#160;&quot;Vdata 1&quot;</p>
 <p class="Body">#define &#160;VDATA_CLASS &#160;&#160;&#160;&quot;Empty Vdatas&quot;</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">main( )</p>
 <p class="Body">{</p>
 <p class="Body"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="Body">&nbsp;</p>
 <p class="Body"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="Body"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file1_id, file2_id,</p>
 <p class="Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_id, vdata1_id, vdata2_id,</p>
 <p class="Body"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_ref = -1; &#160;&#160;&#160;&#160;/* ref number of a vdata, set to -1 to create &#160;*/</p>
 <p class="Body">&nbsp;</p>
 <p class="Body"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Create the first HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;file1_id = Hopen (FILE1_NAME, DFACC_CREATE, 0);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Initialize the VS interface associated with the first HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_n = Vstart (file1_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Create a vdata in the first HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;vdata_id = VSattach (file1_id, vdata_ref, &quot;w&quot;);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body"> &#160;&#160;/*</p>
 <p class="Body"> &#160;&#160;* Assign a name to the vdata.</p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_32 = VSsetname (vdata_id, VDATA_NAME);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body"> &#160;&#160;* Other operations on the vdata identified by vdata_id can be carried</p>
 <p class="Body"> &#160;&#160;* out starting from this point.</p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Create the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;file2_id = Hopen (FILE2_NAME, DFACC_CREATE, 0);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Initialize the VS interface associated with the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_n = Vstart (file2_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Create the first vdata in the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;vdata1_id = VSattach (file2_id, vdata_ref, &quot;w&quot;);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Create the second vdata in the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;vdata2_id = VSattach (file2_id, vdata_ref, &quot;w&quot;);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body"> &#160;&#160;/*</p>
 <p class="Body"> &#160;&#160;* Assign a class name to these vdatas.</p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_32 = VSsetclass (vdata1_id, VDATA_CLASS);</p>
 <p class="Body"> &#160;&#160;status_32 = VSsetclass (vdata2_id, VDATA_CLASS);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Other operations on the vdatas identified by vdata1_id and vdata2_id </p>
 <p class="Body"> &#160;&#160;* can be carried out starting from this point.</p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Terminate access to the first vdata in the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_32 = VSdetach (vdata1_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Terminate access to the second vdata in the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_32 = VSdetach (vdata2_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* From this point on, any operations on the vdatas identified by vdata1_id </p>
 <p class="Body"> &#160;&#160;and vdata2_id are invalid but not on the vdata identified by vdata_id.</p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Terminate access to the VS interface associated with the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_n = Vend (file2_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Close the second HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_n = Hclose (file2_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Terminate access to the vdata in the first HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Terminate access to the VS interface associated with the first HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_n = Vend (file1_id);</p>
 <p class="Body">&nbsp;</p>
 <p class="Body">&#160;&#160;&#160;/* </p>
 <p class="Body">&#160;&#160;&#160;* Close the first HDF file. </p>
 <p class="Body"> &#160;&#160;*/</p>
 <p class="Body"> &#160;&#160;status_n = Hclose (file1_id);</p>
 <p class="Body">}</p>
 <p class="Body">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> program create_vdatas</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 FILE1_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*14 FILE2_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;VDATA_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*12 VDATA_CLASS</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE1_NAME &#160;= ’General_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FILE2_NAME &#160;= ’Two_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA_NAME &#160;= ’Vdata 1’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA_CLASS = ’Empty Vdatas’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_CREATE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_CREATE = 4)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer vfstart, vsfatch, vsfsnam, vsfscls, vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file1_id, file2_id</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer vdata_id, vdata1_id, vdata2_id </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vdata_ref</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the first HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file1_id = hopen(FILE1_NAME, DFACC_CREATE, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface associated with the first HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file1_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create a vdata in the first HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = -1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file1_id, vdata_ref, ’w’)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Assign a name to the vdata.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsnam(vdata_id, VDATA_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Other operations on the vdata identified by vdata_id can be carried out</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;starting from this point.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;file2_id = hopen(FILE2_NAME, DFACC_CREATE, 0) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface associated with the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file2_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the first vdata in the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata1_id = vsfatch(file2_id, vdata_ref, ’w’)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the second vdata in the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata2_id = vsfatch(file2_id, vdata_ref, ’w’)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Assign a class name to these vdatas.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfscls(vdata1_id, VDATA_CLASS)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfscls(vdata2_id, VDATA_CLASS)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Other operations on the vdatas identified by vdata1_id and vdata2_id</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;can be carried out starting from this point.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the first vdata in the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata1_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the second vdata in the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata2_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the VS interface associated with the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file2_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Close the second HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file2_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vdata in the first HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;terminate access to the VS interface associated with the first HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file1_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Close the first HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file1_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading2"><a name="IX_creating_and_writing_to"></a>4.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_16469_VHstoredata_and"></a>Creating and Writing to Single-Field Vdatas: VHstoredata and VHstoredatam</p>
 <p class="Body"><span style="font-weight : bold; font-size  : 12.0pt; "><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></span>There are two methods of writing vdatas that contain one field per record. One requires the use of several VS routines and the other involves the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredata </span>or<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; "> VHstoredatam</span>, two high<a name="XREF_Vdata_creating_and"></a>-level routines that encapsulate several VS routines into one.</p>
 <p class="Body"><a name="XREF_VH_routines_usage"></a>The high-level VH routines are useful when writing one-field vdatas and complete information about each vdata is available. If you cannot provide full information about a vdata, you must use the VS routines described in the next section.</p>
 <p class="Body"><a href="#XREF_12865_FIGURE_4c_Single"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Figure&nbsp;4c</span></a>&#160;shows two examples of single-field vdatas. The fields can be single-component or multi-component fields. With a multi-component field, they may contain one or more values of the same data type.</p>
 <p class="Figure"><span class="StepNumber">FIGURE 4c<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_12865_FIGURE_4c_Single"></a>Single- and Multi-component Vdatas</p>
 <div align="center"><img alt="UG_Vdatas00003.png" style=" width:100%; margin-left:30pt; max-width:485.928pt;" id="image2" src="UG_Vdatas00003.png" />
 </div>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">V<a name="XREF_VHstoredata_description"></a>Hstoredata</span>&#160;creates then writes a vdata with one single-component field. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">V<a name="XREF_VHstoredatam_description"></a>Hstoredatam</span>&#160;creates and writes a vdata with one multi-component field. In both cases the following steps are involved:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Open the file.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Store (create then write to) the vdata.</p>
 <p class="Step"><span class="StepNumber">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the Vdata interface. </p>
 <p class="Step"><span class="StepNumber">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Close the file. </p>
 <p class="Body">These steps correspond to the following sequence of function calls:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = Hopen(filename, file_access_mode, num_dds_block);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vstart(file_id);</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Either VHstoredata or VHstoredatam can be called here. */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = VHstoredata(file_id, fieldname, buf, n_records, data_type, vdata_name, vdata_class);</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = VHstoredatam(file_id, fieldname, buf, n_records, data_type, vdata_name, vdata_class, order);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vend(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Hclose(file_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = hopen(filename, file_access_mode, num_dds_block)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfstart(file_id)</p>
 <p class="FM_syntaxortop">C<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Either vhfsd/vhfscd or vhfsdm/vhfscdm can be called here.</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = vhfsd(file_id, fieldname, buf, n_records, data_type, vdata_name, vdata_class)</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = vhfscd(file_id, fieldname, buf, n_records, data_type, vdata_name, vdata_class)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span></p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = vhfsdm(file_id, fieldname, buf, n_records, data_type, vdata_name, vdata_class, order)</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = vhfscdm(file_id, fieldname, buf, n_records, data_type, vdata_name, vdata_class, order)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfend(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = hclose(file_id)</p>
 <p class="Body">The first seven parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredata </span>and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredatam</span>&#160;are the same. The parameter <span class="VarName">file_id</span>&#160;is the file identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>. The parameter <span class="VarName">fieldname</span>&#160;specifies the name of the vdata field. The parameter <span class="VarName">buf</span>&#160;contains the data to be stored into the vdata. In C, the data type of the parameter <span class="VarName">buf</span>&#160;is <span class="VarName">uint8</span>; in FORTRAN-77, it is the data type of the data to be stored. The parameters <span class="VarName">n_records</span>&#160;and <span class="VarName">data_type</span>&#160;contain the number of records in the vdata and the data type of the vdata data. The parameters <span class="VarName">vdata_name</span>&#160;and <span class="VarName">vdata_class</span>&#160;specify the name and class of the vdata. The parameter <span class="VarName">order</span>&#160;of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredatam</span>&#160;specifies the order of the field. The maximum length of the vdata name is given by the <span class="DefName">VSNAMELENMAX</span>&#160;(or <span class="DefName">64</span>) as defined in the header file “hlim&#173;its.h”.</p>
 <p class="Body">Note that these two routines do not overwrite existing vdatas but only create new ones before stor&#173;ing the data.</p>
 <p class="Body">The FORTRAN-77 version of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredata</span>&#160;has two routines: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vhfsd</span>&#160;for numeric data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vhfscd</span>&#160;for character data; the FORTRAN-77 version of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredatam</span>&#160;has two routines: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vhfsdm</span>&#160;for numeric data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vhfscdm</span> for character data.</p>
 <p class="Body">Both routines return the reference number of the newly-created vdata or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) if the opera&#173;tion is unsuccessful. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredata</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredatam</span>&#160;are further described in <a href="#XREF_11063_TABLE_4C">Table 4C</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4C<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_11063_TABLE_4C"></a>VH<a name="XREF_VHstoredata_parameter"></a>storedata and VH<a name="XREF_VHstoredatam_parameter"></a>storedatam Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.839pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 59.267pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 140.567pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 126.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="7" style="width : 64.839pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VHstoredata</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vhfsd/vhfscd)</p>
</td>
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">String containing the name of the field</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">buf</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uint8 *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing the data to be stored</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_records</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of records to create in the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of the stored data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_name</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_class</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Class name of the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="8" style="width : 64.839pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VHstoredatam</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vhfsdm/</p>
  <p class="CellFunction">vhfscdm)</p>
</td>
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">String containing the name of the field</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">buf</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uint8 *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing the data to be stored</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_records</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of records to create in the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of the stored data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_name</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_class</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Class name of the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.267pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">order</p>
</td>
  <td style="width : 51.336pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.231pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of field components</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Creating and Storing One-field Vdatas Using VHstoredata and VHstoredatam</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredata/vhfscd</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VHstoredatam/vhfsdm</span>&#160;to create single-field vdatas. </p>
 <p class="Body">This example creates and writes two vdatas to the file &quot;General_Vdatas.hdf&quot;. &#160;The first vdata is named &quot;First Vdata&quot;, contains 5 records, and belongs to a class named &quot;5x1 Array&quot;. &#160;The second vdata is named &quot;Second Vdata&quot;, contains 6 records, and belongs to a class named &quot;6x4 Array&quot;. &#160;The field of the first vdata is a single-component field, i.e., order of 1, and named &quot;Single-compo&#173;nent Field&quot;. &#160;The field of the second vdata has an order of 4 and is named &quot;Multi-component Field&quot;.</p>
 <p class="Body">In these examples two vdatas are created. The first vdata has five records with one field of order 1 and is created from a 5 x 1 array in memory. The second vdata has six records with one field of order 4 and is created from a 6 x 4 array in memory.</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot; </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&quot;General_Vdatas.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;CLASS1_NAME &#160;&#160;&#160;&quot;5x1 Array&quot;</p>
 <p class="FM_ExampleCode">#define &#160;CLASS2_NAME &#160;&#160;&#160;&quot;6x4 Array&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VDATA1_NAME &#160;&#160;&#160;&quot;First Vdata&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VDATA2_NAME &#160;&#160;&#160;&quot;Second Vdata&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FIELD1_NAME &#160;&#160;&#160;&quot;Single-component Field&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FIELD2_NAME &#160;&#160;&#160;&quot;Multi-component Field&quot;</p>
 <p class="FM_ExampleCode">#define &#160;N_RECORDS_1 &#160;&#160;&#160;5 &#160;&#160;&#160;/* number of records the first vdata contains &#160;*/</p>
 <p class="FM_ExampleCode">#define &#160;N_RECORDS_2 &#160;&#160;&#160;6 &#160;&#160;&#160;/* number of records the second vdata contains */</p>
 <p class="FM_ExampleCode">#define &#160;ORDER_2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;4 &#160;&#160;&#160;/* order of the field in the second vdata &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* Note that the order of the field in the first vdata is 1 */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( )</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32; &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;int32 file_id, vdata1_ref, vdata2_ref; </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Define an array to buffer the data of the first vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;char8 vdata1_buf [N_RECORDS_1] = {’V’, ’D’, ’A’, ’T’, ’A’};</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Define an array to buffer the data of the second vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 vdata2_buf [N_RECORDS_2][ORDER_2] = {{1, 2, 3, 4}, {2, 4, 6, 8},</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{3, 6, 9, 12}, {4, 8, 12, 16},</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{5, 10, 15, 20}, {6, 12, 18, 24}};</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the HDF file for writing.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_WRITE, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the VS interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create the first vdata and populate it with data from the vdata1_buf </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* array. Note that the buffer vdata1_buf is cast to (uint8 *) for the </p>
 <p class="FM_ExampleCode"> &#160;&#160;* benefit of generic data type.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;vdata1_ref = VHstoredata (file_id, FIELD1_NAME, (uint8 *)vdata1_buf, </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_RECORDS_1, DFNT_CHAR8, VDATA1_NAME, CLASS1_NAME); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create the second vdata and populate it with data from the vdata2_buf </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* array. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;vdata2_ref = VHstoredatam (file_id, FIELD2_NAME, (uint8 *)vdata2_buf, </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_RECORDS_2, DFNT_INT32, VDATA2_NAME, CLASS2_NAME, ORDER_2); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the VS interface and close the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> program create_onefield_vdatas</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*9 &#160;CLASS1_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*9 &#160;CLASS2_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 VDATA1_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*12 VDATA2_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*22 FIELD1_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*21 FIELD2_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;N_RECORDS_1, N_RECORDS_2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;ORDER_2</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;= ’General_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CLASS1_NAME = ’5x1 Array’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CLASS2_NAME = ’6x4 Array’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA1_NAME = ’First Vdata’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA2_NAME = ’Second Vdata’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD1_NAME = ’Single-component Field’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD2_NAME = ’Multi-component Field’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (N_RECORDS_1 = 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_RECORDS_2 = 6,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER_2 &#160;&#160;&#160;&#160;= 4) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_WRITE, DFNT_CHAR8, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_WRITE = 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_CHAR8 &#160;= 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 &#160;= 24)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer vfstart, vhfscd, vhfsdm, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;file_id</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;vdata1_ref, vdata2_ref </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character vdata1_buf(N_RECORDS_1)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;vdata2_buf(ORDER_2, N_RECORDS_2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data vdata1_buf /’V’,’D’,’A’,’T’,’A’/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data vdata2_buf / 1, &#160;2, &#160;3, &#160;4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2, &#160;4, &#160;6, &#160;8,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3, &#160;6, &#160;9, 12,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4, &#160;8, 12, 16,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5, 10, 15, 20,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6, 12, 18, 24/</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for writing.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_WRITE, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the first vdata and populate it with data from vdata1_buf array.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata1_ref = vhfscd(file_id, FIELD1_NAME, vdata1_buf, N_RECORDS_1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_CHAR8, VDATA1_NAME, CLASS1_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the second vdata and populate it with data from vdata2_buf array.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata2_ref = vhfsdm(file_id, FIELD2_NAME, vdata2_buf, N_RECORDS_2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32, VDATA2_NAME, CLASS2_NAME,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER_2)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the VS interface and close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode"><a name="IX_creating_and_writing_to_1"></a><span style="font-weight : bold; font-size  : 14.0pt; ">&nbsp;</span></p>
 <p class="Heading2"><a name="IX_creating_and_writing_to_2"></a>4.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_18489_4_5_Writing_to"></a>Writing to Multi-Field Vdatas </p>
 <p class="Body">There are several steps involved in creating <span class="Definition">general vdatas</span>&#160;with more than one field: define the vdata, define the fields of the vdata, and write the vdata to the file. These steps are usually exe&#173;cuted within a single program, although it is also possible to define an empty vdata in anticipation of writing data to it at a later time.</p>
 <p class="Heading3"><a name="IX_creating"></a>4.5.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_32451_4_5_1_Creating"></a>Creating Vdatas<span style="font-size: small;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>
 <p class="Body">Creating an empty vdata involves the following steps:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Open a file.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Create the new vdata.</p>
 <p class="Step"><span class="StepNumber">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Assign a vdata name. (optional)</p>
 <p class="Step"><span class="StepNumber">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Assign a vdata class. (optional)</p>
 <p class="Step"><span class="StepNumber">6.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Define the fields.</p>
 <p class="Step"><span class="StepNumber">7.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize fields for writing.</p>
 <p class="Step"><span class="StepNumber">8.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Set the interlace mode.</p>
 <p class="Step"><span class="StepNumber">9.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Dispose of the vdata identifier.</p>
 <p class="Step"><span class="StepNumber">10.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">11.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Close the file.</p>
 <p class="Body">Like the high-level VH interface, the Vdata interface does not retain default settings from one operation to the next or from one file to the next. Each time a vdata is created, its definitions must be explicitly reset.</p>
 <p class="Body">To create a multi-field vdata, the calling program must contain the following:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = Hopen(filename, file_access_mode, num_dds_block);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vstart(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = VSattach(file_id, -1, vdata_access_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetname(vdata_id, vdata_name);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetclass(vdata_id, vdata_class);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSfdefine(vdata_id, fieldname1, data_type1, order1);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> . . . . . . . . . .</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSfdefine(vdata_id, fieldnameN, data_typeN, orderN);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetfields(vdata_id, fieldname_list);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetinterlace(vdata_id, interlace_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSdetach(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vend(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Hclose(file_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = hopen(filename, file_access_mode, num_dds_block)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfstart(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = vsfatch(file_id, -1, vdata_access_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfsnam(vdata_id, vdata_name)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfscls(vdata_id, vdata_class)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsffdef(vdata_id, fieldname1, data_type1, order1)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> . . . . . . . . . .</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsffdef(vdata_id, fieldnameN, data_typeN, orderN)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfsfld(vdata_id, fieldname_list)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfsint(vdata_id, interlace_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfdtch(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfend(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = hclose(file_id)</p>
 <p class="Body">In the routines that follow, <span class="VarName">vdata_id</span>&#160;is the vdata identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattach</span>. </p>
 <p class="Heading4"><a name="IX_assigning_to_a_vdata_1"></a><a name="IX_assigning_to_a_vdata"></a>4.5.1.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_19463_VSsetname_and"></a>Assigning a Vdata Name and Class: VSsetname and VSsetclass</p>
 <p class="Body"><a name="IX_description_102"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetname</span>&#160;assigns a name to a vdata. If not explicitly named by a call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetname</span>, the name of the vdata is set by default to <span class="DefName">NULL</span>. A name may be assigned and reassigned at any time after the vdata is created. The parameter <span class="VarName">vdata_name</span> contains the name to be assigned to the vdata.</p>
 <p class="Body"><a name="IX_description_103"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetclass</span>&#160;assigns a class to a vdata. If <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetclass</span>&#160;is not called, the vdata’s class is set by default to <span class="DefName">NULL</span>. As with the vdata name, the class may be assigned and reassigned any time after the vdata is created. The parameter <span class="VarName">vdata_class</span> contains the class name to be assigned to the vdata.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetname</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetclass</span>&#160;return either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for these routines are further defined in <a href="#XREF_38618_TABLE_4E_VSsetname">(See Table&nbsp;4E on page&nbsp;159)</a>.</p>
 <p class="Heading4"><a name="IX_defining"></a>4.5.1.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_23004_VSfdefine"></a>Defining a Field within a Vdata: VSfdefine</p>
 <p class="Body"><a name="IX_description_104"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;defines a field within a newly-created vdata. Each <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;call assigns the name contained in the argument <span class="VarName">fieldname</span>, the data type contained in the argument <span class="VarName">data_type</span>, and the order contained in the argument <span class="VarName">order </span>to one new field. Once data is written to a vdata, the name, data type and order of the field may not be modified or deleted. </p>
 <p class="Body"><a name="IX_description_of_a"></a>The Vdata interface also provides certain <span class="Definition">pre</span><span class="Definition">defined fields.</span>&#160;A predefined field has a specific name, data type, and order, so there is no need to call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;to define a predefined field. Some applications may require the use of predefined fields in vdatas. Available predefined fields are discussed in <a href="#XREF_29742_TABLE_4D">Table 4D</a>.</p>
 <p class="Body">Note that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;does not allocate memory for the field, but simply introduces the field. The field definition must be completed by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>, which is discussed in <a href="#XREF_38506_VSsetfields">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.1.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;are further described in <a href="#XREF_38618_TABLE_4E_VSsetname">(See Table&nbsp;4E on page&nbsp;159)</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4D<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_29742_TABLE_4D"></a>Predefined Data Types and Field Names for Vdata Fields</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:384.77pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 57.172pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Data Type</p>
</td>
  <td colspan="3" style="width : 165.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Coordinate Point Field Names</p>
</td>
  <td colspan="3" style="width : 162.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Normal Component Field Names</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">x-coordinate</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">y-coordi&#173;nate</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">z-coordi&#173;nate</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">x-compo&#173;nent</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">y-compo&#173;nent</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">z-compo&#173;nent</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 57.172pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">float</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">PX</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">PY</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">PZ</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">NX</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">NY</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">NZ</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 57.172pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">integer</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">IX</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">IY</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">IZ</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">None</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">None</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">None</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading4"><a name="IX_initializing_for_write"></a>4.5.1.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_38506_VSsetfields"></a>Initializing the Fields for Write Access: VSsetfields</p>
 <p class="Body"><a name="IX_description_105"></a><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>&#160;initializes read and write access to the fields in a vdata. It must be called prior to read or write operations. Initializing for read access is discussed in <a href="#XREF_33834_VSsetfields">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.6.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>. For writ&#173;ing, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span> specifies the fields to be written and the order in which they are to be placed.</p>
 <p class="Body">The parameter <span class="VarName">fieldname_list</span>&#160;is a comma-separated list of the field names, with no white space included. The fields can be either the predefined fields or the fields that have been previously introduced by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;allows a user to declare a field, along with its data type and order, but <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>&#160;finalizes the definition by allowing the user to select the fields that are to be included in the vdata. Thus, any fields created by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine</span>&#160;that are not in the parameter <span class="VarName">fieldname_list</span>&#160;of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span> will be ignored. This feature was originally intended for interactive-mode users. The combined width of the fields in the parameter <span class="VarName">fieldname_list</span>&#160;is also the length of the record and must be less than <span class="DefName">MAX_FIELD_SIZE</span>&#160;(or <span class="DefName">65535</span>). An attempt to create a larger record will cause <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>&#160;to return <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>&#160;returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span> are fur&#173;ther defined in <a href="#XREF_38618_TABLE_4E_VSsetname">Table 4E on page 159</a>.</p>
 <p class="Heading4"><a name="IX_specifying_the"></a>4.5.1.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_15638_VSsetinterlace"></a>Specifying the Interlace Mode: VSsetinterlace</p>
 <p class="Body"><a name="IX_description_107"></a><a name="IX_description_106"></a>The Vdata interface supports two types of interlacing: <span class="Definition">file interlacing</span>&#160;and <span class="Definition">buffer interlacing</span>. <span class="Definition">File interlacing</span>&#160;determines how data is stored in a file and <span class="Definition">buffer interlacing</span>&#160;determines how data is stored in memory. The Vdata interface can write data from a buffer to a file in an interlaced or non-interlaced manner. It can also read data from a file in an interlaced or non-interlaced manner.</p>
 <p class="Body"><a name="IX_interlace_mode"></a><a name="IX_setting_the_file_1"></a><a name="IX_setting_the_file"></a>The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span> routines set the buffer’s interlace mode.<span style="font-size: x-small;">&nbsp;</span>&#160;The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;routine will be discussed in <a href="#XREF_23656_VSwrite">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.2.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;and the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;routine will be discussed in <a href="#XREF_32800_VSread">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.6.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body"><a name="IX_description_108"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetinterlace</span>&#160;sets the file interlacing mode for a vdata. Setting the parameter <span class="VarName">interlace_mode </span>to <span class="DefName">FULL_INTERLACE</span>&#160;(or <span class="DefName">0</span>) fills the vdata by record, whereas specifying <span class="DefName">NO_INTERLACE</span>&#160;(or <span class="DefName">1</span>) fills the vdata by field. <a href="#XREF_12824_FIGURE_4d">(See Figure 4d)</a>&#160;For multi-component fields, all components are treated as a single field.</p>
 <p class="Body">As with file interlacing, the default buffer interlace mode is <span class="DefName">FULL_INTERLACE</span>&#160;because it is more efficient to write complete records than it is to write fields if the file and buffer interlace modes are the same, although both require the same amount of disk space.</p>
 <p class="Body">In <a href="#XREF_12824_FIGURE_4d">Figure&nbsp;4d</a>, the illustrated vdata has four fields and three records.</p>
 <p class="Figure"><span class="StepNumber">FIGURE 4d<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_12824_FIGURE_4d"></a>Interlaced and Non-Interlaced Vdata Contents</p>
 <div align="center"><img alt="UG_Vdatas00004.png" style=" width:100%; margin-left:30pt; max-width:486.360pt;" id="image3" src="UG_Vdatas00004.png" />
 </div>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetinterlace</span>&#160;can only be used for operations on new vdatas as the interlacing cannot be changed once the data has been written to a vdata. Records in a fully interlaced vdata can be writ&#173;ten record-by-record and, thus, can be appended; however, all records in a non-interlaced vdata must be written at the same time.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetinterlace</span>&#160;returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetinterlace</span>&#160;are further described in <a href="#XREF_38618_TABLE_4E_VSsetname">Table 4E</a>.</p>
 <p class="Heading4">4.5.1.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Specifying External Storage Information: VSsetexternalfile</p>
 <p class="Body"><a name="IX_definition_3"></a><a name="IX_writing_to_a_2"></a>The HDF library allows applications to store vdata tables in an <span class="Definition">external file</span>&#160;that is separate from the <span class="Definition">primary file</span>&#160;containing the metadata for the vdata. &#160;The library keeps track of the beginning of the vdata and adds data at the appropriate position in the external file. When data is written or appended, the HDF library writes data to the external file and updates the appropriate metadata in the primary file.</p>
 <p class="Body"><span style="font-weight : bold; ">VSsetexternalfile</span>&#160;specifies that an external data file is to be used to store the data of the given vdata. &#160;The parameter <span class="VarName">filename</span>&#160;is the name of the external data file and <span class="VarName">offset</span>&#160;is the number of bytes from the beginning of the external file to the location where the first byte of data should be written. &#160;The syntax for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetexternalfile</span> is as followed:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetexternalfile(vdata_id, filename, &amp;offset)</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfsextf(vdata_id, filename, offset)</p>
 <p class="Body">If a file with the name specified by <span class="VarName">filename</span> exists in the current directory search path, the func&#173;tion will access it as the external file. &#160;It is the user's responsibility to make sure that the external data file is kept with the primary HDF file.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetexternalfile</span>&#160;returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetexter&#173;nalfile</span>&#160;are further described in <a href="#XREF_38618_TABLE_4E_VSsetname">(See Table&nbsp;4E on page&nbsp;159)</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_55"></a><a name="IX_parameter_list_54"></a><a name="IX_parameter_list_53"></a><a name="IX_parameter_list_52"></a><a name="IX_parameter_list_51"></a><span class="StepNumber">TABLE 4E<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_38618_TABLE_4E_VSsetname"></a>VSsetname, VSsetclass, VSfdefine, VSsetfields, and VSsetinterlace Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead"> Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77) </p>
</td>
  <td rowspan="2" style="width : 63.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 105.200pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 155.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetname</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfsnam)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_name</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetclass</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfscls)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_class</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfdefine</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsffdef)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the field to be defined</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Type of the field data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">order</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Order of the new field</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetfields</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfsfld)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname_list</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Names of the vdata fields to be accessed</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetinterlace</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfsint)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">interlace_mode</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Interlace mode</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetexternalfile</p>
  <p class="CellFunction">[intn]</p>
  <p class="CellFunction">(vsfsextf)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">filename</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">External file name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset</p>
</td>
  <td style="width : 47.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 155.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Offset of external data</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_writing_to_a_multifield"></a>4.5.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_20173_4_5_2_Writing_Data"></a>Writing Data to Vdatas</p>
 <p class="Body">This section describes the vdata writing operation (<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>), random access to vdata (<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span>), and packing and unpacking mechanisms that allow storing vdata fields of different data types (<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>).</p>
 <p class="Body">Writing to a vdata requires the following steps:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Open a file.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize fields for writing.</p>
 <p class="Step"><span class="StepNumber">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initiate access to the vdata.</p>
 <p class="Step"><span class="StepNumber">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Seek to the target record.</p>
 <p class="Step"><span class="StepNumber">6.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Write the data.</p>
 <p class="Step"><span class="StepNumber">7.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Dispose of the vdata identifier.</p>
 <p class="Step"><span class="StepNumber">8.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">9.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Close the file.</p>
 <p class="Body">These steps correspond to the following sequence of function calls:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = Hopen(filename, file_access_mode, num_dds_block);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vstart(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = VSattach(file_id, vdata_ref, vdata_access_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetfields(vdata_id, fieldname_list);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>record_pos = VSseek(vdata_id, record_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_recs = VSwrite(vdata_id, databuf, n_records, interlace_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSdetach(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vend(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Hclose(file_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = hopen(filename, file_access_mode, num_dds_block)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfstart(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = vsfatch(file_id, vdata_ref, vdata_access_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfsfld(vdata_id, fieldname_list);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>record_pos = vsfseek(vdata_id, record_index);</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_recs = vsfwrt(vdata_id, databuf, n_records, interlace_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_recs = vsfwrtc(vdata_id, databuf, n_records, interlace_mode)</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_recs = vsfwrit(vdata_id, databuf, n_records, interlace_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfdtch(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfend(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = hclose(file_id)</p>
 <p class="Heading4"><a name="IX_resetting_the_current"></a>4.5.2.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_32597_VSseek"></a>Resetting the Current Position within Vdatas: VSseek</p>
 <p class="Body"><a name="IX_parameter_list_56"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span>&#160;provides a mechanism for random access to fully-interlaced vdatas. Random-access for non-interlaced vdatas is not available. The parameter <span class="VarName">record_index</span>&#160;is the position of the record to be written. The position of the first record in a vdata is specified by <span class="VarName">record_index</span>&#160;= <span class="DefName">0</span>. Any vdata operation will be performed on this record by default; vdata operations on other records require that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span> be called first to specify the target record.</p>
 <p class="Body"><a name="IX_misused_to_append_data"></a>Note that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span>&#160;has been designed for the purpose of <span style="font-style : italic; ">overwriting</span>&#160;data, not <span style="font-style : italic; ">appending</span>&#160;data. That means <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span> puts the current record pointer at the beginning of the sought record and the subse&#173;quent write will overwrite the record. To append data to a vdata, the current record pointer must be put at the end of the last record. Thus, you must seek to the last record then read this record so that the current record pointer will be put at the end of the record. A write operation will now start at the end of the last record in the vdata. <a href="#XREF_13085_FIGURE_4e_Setting">Figure&nbsp;4e</a>&#160;illustrates a situation where <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span> can be mis&#173;used while attempting to append data to the vdata and how <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;is called to correctly place the record pointer at the end of the vdata for appending.</p>
 <p class="Body">Note that, because the record location numbering starts at 0, the record location and the value of the parameter <span class="VarName">record_index</span>&#160;are off by 1. For example, reading the fourth record in the buffer requires <span class="VarName">record_index</span>&#160;to be set to 3. </p>
 <p class="Body">See the notes regarding the potential performance impact of appendable data sets in <a href="../UG_Perform/UG_Perform.htm#XREF_97527_14_4_3_Unlimited">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>14.4.3 , &quot;Unlimited Dimension Data Sets (SDSs and Vdatas) and Performance&quot;</a></p>
 <p class="Figure"><a name="IX_resetting_the_current_1"></a><span class="StepNumber">FIGURE 4e<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_13085_FIGURE_4e_Setting"></a>Setting the Record Pointer to the End of a Vdata</p>
 <div align="center"><img alt="UG_Vdatas00005.png" style=" width:100%; margin-left:30pt; max-width:486.936pt;" id="image4" src="UG_Vdatas00005.png" />
 </div>
 <p class="Body">In this illustration, the vdata to which we plan to append data contains 4 records. Using <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span>&#160;to seek to the end of the fourth record by setting the parameter <span class="VarName">record_index</span>&#160;to 4 results in an error condition. Setting the parameter <span class="VarName">record_index</span> to 3 places the current record pointer at the begin&#173;ning of the fourth record. We then use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;to read the contents of the fourth record into a buffer; this moves the current record pointer to the end of the fourth record. The contents of the buffer can then be discarded and a write operation can be called to append data to the end of the vdata.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span>&#160;returns the sought record location or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further defined in <a href="#XREF_36265_TABLE_4F_VSseek">Table 4F</a>.</p>
 <p class="Heading4"><a name="IX_writing_to_a_3"></a>4.5.2.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_23656_VSwrite"></a>Writing to a Vdata: VSwrite</p>
 <p class="Body"><a name="IX_description_109"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;writes buffered data to a specified vdata. The parameter <span class="VarName">databuf</span>&#160;is a buffer containing the records to be stored in the vdata. The parameter <span class="VarName">n_records</span>&#160;specifies the number of records to be stored.</p>
 <p class="Body">Recall that the <span style="font-style : italic; ">file interlacing</span>&#160;is set by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetinterlace</span>&#160;when the vdata is created, and the <span style="font-style : italic; ">buffer interlacing</span>&#160;is specified by the parameter <span class="VarName">interlace_mode</span>&#160;in the call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span> when data is writ&#173;ten to the file. The array <span class="VarName">databuf</span>&#160;is assumed to be organized in memory as specified by <span class="VarName">interlace_mode</span>. Setting <span class="VarName">interlace_mode</span>&#160;to <span class="DefName">FULL_INTERLACE</span>&#160;(or <span class="DefName">0</span>) indicates that the array in memory is organized by record, whereas to <span class="DefName">NO_INTERLACE</span>&#160;(or <span class="DefName">1</span>) indicates that the array is orga&#173;nized by field. <a href="#XREF_29332_FIGURE_4f_Writing">(See Figure 4f)</a>&#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;will write interlaced or non-interlaced data to a vdata in a file: interlaced data in the buffer can be written to the vdata in the file as non-interlaced data and vice versa. If the data is to be stored with an interlace mode different from that of the buffer, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetinterlace</span>&#160;(described in <a href="#XREF_15638_VSsetinterlace">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.1.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>) must be called prior to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>. Mul&#173;tiple write operations can only be used on fully-interlaced vdatas in the file.</p>
 <p class="Figure"><a name="IX_writing_buffers_into"></a><span class="StepNumber">FIGURE 4f<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_29332_FIGURE_4f_Writing"></a>Writing Interlaced or Non-interlaced Buffers into Interlaced or Non-interlaced Vdatas</p>
 <div align="center"><img alt="UG_Vdatas00006.png" style=" width:100%; margin-left:30pt; max-width:487.008pt;" id="image5" src="UG_Vdatas00006.png" />
 </div>
 <p class="Body">The data in the array <span class="VarName">databuf</span>&#160;is assumed to contain the exact amount of data in the order needed to fill the fields defined in the last call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>. Because <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;writes the contents of <span class="VarName">databuf</span>&#160;contiguously to the vdata, any “padding” due to record alignment must be removed before attempting to write from <span class="VarName">databuf</span>&#160;to the vdata. For more information on alignment padding see <a href="#XREF_14057_VSfpack">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.2.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body">It should be remembered that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span> writes whole records, not individual fields. If a modifica&#173;tion to one field within a previously-written record is needed, the contents of the record must first be preserved by reading it to a buffer with <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>, which will be described in <a href="#XREF_32800_VSread">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.6.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>; the record must then be updated in the buffer and written back to the file with <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>.</p>
 <p class="Body">To store a vdata to the file after being created, either <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetname</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>, or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;must be called before <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSdetach</span>&#160;for the vdata. If <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span> is not called, the vdata created will be empty.</p>
 <p class="Body">The FORTRAN-77 version of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;has three routines: <span style="font-weight : bold; ">vsfwrt</span>&#160;is for buffered numeric data, <span style="font-weight : bold; ">vsfwrtc</span>&#160;is for buffered character data and <span style="font-weight : bold; ">vsfwrit</span> is for generic packed data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;returns the total number of records written or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further defined in <a href="#XREF_36265_TABLE_4F_VSseek">Table 4F</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_58"></a><a name="IX_parameter_list_57"></a><span class="StepNumber">TABLE 4F<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_36265_TABLE_4F_VSseek"></a>VSseek and VSwrite Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:391.30pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 58.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 145.625pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 125.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 100.625pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 62.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSseek</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfseek)</p>
</td>
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 100.625pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">record_index</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 100.625pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Index of the record to seek to</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 62.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSwrite</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfwrt/vsfwrtc/</p>
  <p class="CellFunction">vsfwrit)</p>
</td>
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 100.625pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">databuf</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uint8*</p>
</td>
  <td style="width : 100.625pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*) / character*(*) / integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing data to be written</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_records</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 100.625pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of records to be written</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">interlace_mode</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 100.625pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Interlace mode of the buffered data</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Writing a Vdata of Homogeneous Type</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfdefine/vsffdef</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetname/vsfsnam</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetclass/vsfscls</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields/vsfsfld</span>, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite/vsfwrt</span>&#160;to create and write a three-field vdata to the file &quot;General_Vdatas.hdf&quot;. Although the fields have data of the same type, they have different orders. </p>
 <p class="Body">To clarify the illustration, let us assume that the vdata is used to contain the data of some particles collected from an experiment. Each record of the data includes the position of a particle, its weight, and the minimum and maximum temperature the particle can endure. &#160;The vdata is named &quot;Solid Particle&quot;, contains 10 records, and belongs to a class, named &quot;Particle Data&quot;. &#160;The fields of the vdata include &quot;Position&quot;, &quot;Mass&quot;, and &quot;Temperature&quot;. &#160;The field &quot;Position&quot; has an order of 3 for the x, y, and z values representing the position of a particle. The field &quot;Mass&quot; has an order of 1. &#160;The field &quot;Temperature&quot; has an order of 2 for the minimum and maximum temperature. &#160;The pro&#173;gram creates the vdata, sets its name and class name, defines its fields, and then writes the data to it.</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;General_Vdatas.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;N_RECORDS &#160;&#160;&#160;&#160;&#160;&#160;&#160;10 &#160;&#160;&#160;&#160;&#160;&#160;&#160;/* number of records the vdata contains */</p>
 <p class="FM_ExampleCode">#define &#160;ORDER_1 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* order of first field */</p>
 <p class="FM_ExampleCode">#define &#160;ORDER_2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* order of second field */</p>
 <p class="FM_ExampleCode">#define &#160;ORDER_3 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* order of third field */</p>
 <p class="FM_ExampleCode">#define &#160;CLASS_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Particle Data&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Solid Particle&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FIELD1_NAME &#160;&#160;&#160;&#160;&#160;&quot;Position&quot; &#160;&#160;&#160;&#160;&#160;/* contains x, y, z values */</p>
 <p class="FM_ExampleCode">#define &#160;FIELD2_NAME &#160;&#160;&#160;&#160;&#160;&quot;Mass&quot; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* contains weight values */</p>
 <p class="FM_ExampleCode">#define &#160;FIELD3_NAME &#160;&#160;&#160;&#160;&#160;&quot;Temperature&quot; &#160;&#160;/* contains min and max values */</p>
 <p class="FM_ExampleCode">#define &#160;FIELDNAME_LIST &#160;&#160;&quot;Position,Mass,Temperature&quot; /* No spaces b/w names */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">/* number of values per record */</p>
 <p class="FM_ExampleCode">#define &#160;N_VALS_PER_REC &#160;&#160;(ORDER_1 + ORDER_2 + ORDER_3)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;status_n; &#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;status_32, &#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, vdata_id,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_ref = -1, &#160;&#160;&#160;/* ref number of a vdata, set to -1 to create &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num_of_records; &#160;&#160;&#160;/* number of records actually written to vdata */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;rec_num; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* current record number */</p>
 <p class="FM_ExampleCode"> &#160;&#160;float32 &#160;data_buf[N_RECORDS][N_VALS_PER_REC]; /* buffer for vdata values */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the HDF file for writing.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_WRITE, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the VS interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create a new vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_id = VSattach (file_id, vdata_ref, &quot;w&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set name and class name of the vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSsetname (vdata_id, VDATA_NAME);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSsetclass (vdata_id, CLASS_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Introduce each field’s name, data type, and order. &#160;This is the first</p>
 <p class="FM_ExampleCode"> &#160;&#160;* part in defining a field.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSfdefine (vdata_id, FIELD1_NAME, DFNT_FLOAT32, ORDER_1 );</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSfdefine (vdata_id, FIELD2_NAME, DFNT_FLOAT32, ORDER_2 );</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSfdefine (vdata_id, FIELD3_NAME, DFNT_FLOAT32, ORDER_3 );</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Finalize the definition of the fields.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSsetfields (vdata_id, FIELDNAME_LIST);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Buffer the data by the record for fully interlaced mode. &#160;Note that the</p>
 <p class="FM_ExampleCode"> &#160;&#160;* first three elements contain the three values of the first field, the</p>
 <p class="FM_ExampleCode"> &#160;&#160;* fourth element contains the value of the second field, and the last two</p>
 <p class="FM_ExampleCode"> &#160;&#160;* elements contain the two values of the third field.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (rec_num = 0; rec_num &lt; N_RECORDS; rec_num++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data_buf[rec_num][0] = 1.0 * rec_num;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data_buf[rec_num][1] = 2.0 * rec_num;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data_buf[rec_num][2] = 3.0 * rec_num;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data_buf[rec_num][3] = 0.1 + rec_num;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data_buf[rec_num][4] = 0.0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data_buf[rec_num][5] = 65.0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Write the data from data_buf to the vdata with full interlacing mode.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;num_of_records = VSwrite (vdata_id, (uint8 *)data_buf, N_RECORDS, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the vdata and to the VS interface, then close </p>
 <p class="FM_ExampleCode"> &#160;&#160;* the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n &#160;= Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;program write_to_vdata </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*13 CLASS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*14 VDATA_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*8 &#160;FIELD1_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*4 &#160;FIELD2_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 FIELD3_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*27 FIELDNAME_LIST</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;N_RECORDS</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;ORDER_1, ORDER_2, ORDER_3</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;N_VALS_PER_REC</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;= ’General_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CLASS_NAME &#160;&#160;&#160;&#160;&#160;= ’Particle Data’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;= ’Solid Particle’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD1_NAME &#160;&#160;&#160;&#160;= ’Position’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD2_NAME &#160;&#160;&#160;&#160;= ’Mass’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD3_NAME &#160;&#160;&#160;&#160;= ’Temperature’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELDNAME_LIST = ’Position,Mass,Temperature’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (N_RECORDS = 10,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER_1 &#160;&#160;= 3,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER_2 &#160;&#160;= 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER_3 &#160;&#160;= 2,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_VALS_PER_REC = ORDER_1 + ORDER_2 + ORDER_3) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_WRITE, DFNT_FLOAT32, FULL_INTERLACE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_WRITE &#160;&#160;&#160;= 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_FLOAT32 &#160;&#160;= 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE = 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vfstart, vsfatch, vsfsnam, vsfscls, vsffdef, vsfsfld,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;vsfwrt, vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file_id, vdata_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vdata_ref, rec_num, num_of_records</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real &#160;&#160;&#160;data_buf(N_VALS_PER_REC, N_RECORDS)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for writing.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_WRITE, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create a new vdata.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = -1</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file_id, vdata_ref, ’w’) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set name and class name of the vdata.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsnam(vdata_id, VDATA_NAME)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfscls(vdata_id, CLASS_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Introduce each field’s name, data type, and order. This is the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;first part in defining a field.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffdef(vdata_id, FIELD1_NAME, DFNT_FLOAT32, ORDER_1)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffdef(vdata_id, FIELD2_NAME, DFNT_FLOAT32, ORDER_2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffdef(vdata_id, FIELD3_NAME, DFNT_FLOAT32, ORDER_3)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Finalize the definition of the fields.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsfld(vdata_id, FIELDNAME_LIST)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Buffer the data by the record for fully interlaced mode. Note that the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;first three elements contain the three values of the first field,</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;the forth element contains the value of the second field, and the last two</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;elements contain the two values of the third field.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 rec_num = 1, N_RECORDS</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_buf(1, rec_num) = 1.0 * rec_num</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_buf(2, rec_num) = 2.0 * rec_num</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_buf(3, rec_num) = 3.0 * rec_num</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_buf(4, rec_num) = 0.1 + rec_num</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_buf(5, rec_num) = 0.0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_buf(6, rec_num) = 65.0</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the data from data_buf to the vdata with the full interlacing mode.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;num_of_records = vsfwrt(vdata_id, data_buf, N_RECORDS,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vdata and to the VS interface, and</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading4">4.5.2.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Setting Up Linked Block Vdatas: VSsetblocksize and VSsetnumblocks</p>
 <p class="Body">Unless otherwise specified, Vdata data sets stored in linked blocks employ a default size and num&#173;ber of linked blocks, as set in <span class="DefName">HDF_APPENDABLE_BLOCK_LEN</span>&#160;and <span class="DefName">HDF_APPENDABLE_BLOCK_NUM</span>, respectively. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetblocksize </span>and<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">&#160;VSsetnumblocks </span>provide a mechanism for managing these val&#173;ues when the defaults are not appropriate. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetblocksize </span>and<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">&#160;VSsetnumblocks </span>can be called to change the default linked block settings. The parameter <span class="VarName">vdata_id</span>&#160;identifies the vdata. The size of blocks is specified in bytes in <span class="VarName">block_size</span>&#160;and number of blocks in <span class="VarName">num_blocks</span>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetblocksize </span>and<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">&#160;VSsetnumblocks </span>must be called before any data is written to a vdata; once a linked block element has been created, neither the block size nor the number blocks can be changed. Further note that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetblocksize </span>sets the block size only for blocks following the first block.</p>
 <p class="Body">See the notes regarding the potential performance impact of block size in <a href="../UG_Perform/UG_Perform.htm#XREF_99984_14_4_2_Tuning">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>14.4.2 , &quot;Tuning Linked Block Size to Enhance Performance&quot;</a></p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetblocksize </span>and<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">&#160;VSsetnumblocks </span>both return <span class="DefName">SUCCESS</span>&#160;(or <span class="DefName">0</span>) upon successful completion or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Their parameters are further defined in <a href="#XREF_68053_TABLE_4G">Table 4G</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4G<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_68053_TABLE_4G"></a>VSsetblocksize and VSsetnumblocks Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:362.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 58.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 117.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 125.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 44.788pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 72.212pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 62.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetblocksize</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfsetblsz)</p>
</td>
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 44.788pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 72.212pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">block_size</p>
</td>
  <td style="width : 44.788pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 72.212pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size of each block, in bytes</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 62.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetnumblocks</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfsetnmbl)</p>
</td>
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 44.788pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 72.212pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">num_blocks</p>
</td>
  <td style="width : 44.788pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 72.212pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 125.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of blocks to be used for the linked-block element</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading4"><a name="IX_Packing_or_unpacking_1"></a><a name="IX_packing_or_unpacking"></a>4.5.2.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_14057_VSfpack"></a>Packing or Unpacking Field Data: VSfpack</p>
 <p class="Body"><a name="IX_description_110"></a>Storing fields of mixed data types is an efficient use of disk space and is useful in applications that use structures. However, while data structures in memory containing fields of variable lengths can contain alignment bytes, field data stored in a vdata cannot include them. This is true for both fully-interlaced and non-interlaced data. Because of this storing limitation, when variable-length field types are used, it is generally not possible to write data directly from a structure in memory into a vdata in a file with a <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>&#160;call or to read data directly into a buffer from the vdata with a call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>. Thus, when writing, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;is used to pack field data into a temporary buffer by removing the padding, or alignment bytes, and when reading, to unpack field data into vdata fields by adding necessary alignment bytes. The syntax for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSfpack(vdata_id, action, fields_in_buf, buf, buf_size, n_records, fieldname_list, bufptrs);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfcpak(vdata_id, action, fields_in_buf, buf, buf_size, n_records, fieldname_list, bufptrs)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfnpak(vdata_id, action, fields_in_buf, buf, buf_size, n_records, fieldname_list, bufptrs)</p>
 <p class="Body">The process of removing the alignment bytes is called “packing the array.” An illustration of this process is provided in <a href="#XREF_31615_FIGURE_4g_Removing"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Figure&nbsp;4g</span></a>. The data provided by the user is stored in the structure in mem&#173;ory. &#160;The field values are aligned with padded bytes. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;packs the data into the array in memory after removing the padded bytes. &#160;The packed data is then written to the vdata in the file by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite</span>.</p>
 <p class="Figure"><a name="IX_removing_alignment_bytes"></a><span class="StepNumber">FIGURE 4g<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_31615_FIGURE_4g_Removing"></a>Removing Alignment Bytes When Writing Data From a C Structure to a Vdata</p>
 <div align="center"><img alt="UG_Vdatas00007.png" style=" width:100%; margin-left:30pt; max-width:486.360pt;" id="image6" src="UG_Vdatas00007.png" />
 </div>
 <p class="Body">The process illustrated in <a href="#XREF_31615_FIGURE_4g_Removing">Figure&nbsp;4g</a>&#160;can be read in the reverse direction for &quot;unpacking the array,&quot; that is when using <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span> to fill a structure in memory with vdata field data. In this case, align&#173;ment bytes are added to the field data to make the data conform to the specific alignment require&#173;ments of the platform.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;performs both tasks, packing and unpacking, and the parameter <span class="VarName">action</span>&#160;specifies the appropriate action for the routine. Valid values for the parameter <span class="VarName">action</span>&#160;are <span class="DefName">_HDF_VSPACK</span>&#160;(or <span class="DefName">0</span>) for packing and <span class="DefName">_HDF_VSUNPACK</span>&#160;(or <span class="DefName">1</span>) for unpacking.</p>
 <p class="Body">The calling program must allocate sufficient space for the buffer <span class="VarName">buf</span>&#160;to hold all packed or unpacked fields. The parameter <span class="VarName">buf_size</span>&#160;specifies the size of the buffer <span class="VarName">buf</span>&#160;and should be at least <span class="VarName">n_records</span>&#160;*( the total size of all fields specified in <span class="VarName">fields_in_buf</span>)<span style="font-style : italic; ">. </span></p>
 <p class="Body">When <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;is called to pack field values into <span class="VarName">buf</span>, the parameter <span class="VarName">fields_in_buf</span>&#160;must specify all fields of the vdata. This can be accomplished either by listing all of the field names in <span class="VarName">fields_in_buf</span>&#160;or by setting <span class="VarName">fields_in_buf</span>&#160;to <span class="DefName">NULL</span> in C or to one blank character in FORTRAN-77.</p>
 <p class="Body">When <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;is called to unpack field values, the parameter <span class="VarName">fields_in_buf</span>&#160;may specify a subset of the vdata fields. The parameter <span class="VarName">fields_in_buf</span>&#160;can be set to <span class="DefName">NULL</span>&#160;in C or to one space character in FORTRAN-77 to specify all fields in the vdata.</p>
 <p class="Body">The parameter <span class="VarName">fieldname_list</span>&#160;specifies the field(s) to be packed or unpacked. The parameter <span class="VarName">bufp&#173;trs</span>&#160;provides pointers to the buffers for each field to be packed or unpacked. The calling program is responsible for allocating sufficient space for each field buffer. Significant differences between the C and FORTRAN-77 functionality are described in the following paragraphs.</p>
 <p class="Body">In C, <span class="VarName">fieldname_list</span>&#160;can list either all of the fields specified by <span class="VarName">fields_in_buf</span>&#160;or a subset of those fields. Only if <span class="VarName">fields_in_buf</span>&#160;specifies all of the vdata fields, then <span class="VarName">fields_in_buf</span>&#160;can be set to <span class="DefName">NULL</span>&#160;to specify all vdata fields. The parameter <span class="VarName">bufptrs</span>&#160;contains an array of pointers to the buffers where field data will be packed or unpacked.</p>
 <p class="Body">The FORTRAN-77 routines can pack or unpack only one field at a time, so the parameter <span class="VarName">fieldname_list</span>&#160;contains only the name of that field. The parameter <span class="VarName">bufptrs</span>&#160;is the buffer for that field.</p>
 <p class="Body">The FORTRAN-77 version of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;has two routines: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfcpak</span>&#160;packs or unpacks character data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfnpak</span>&#160;packs or unpacks numeric data. &#160;Refer to the FORTRAN-77 version in <a href="#XREF_20266_EXAMPLE_4_Writing">Example 4</a> for a more specific illustration.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;are described in <a href="#XREF_20337_TABLE_4G_VSfpack">Table 4H</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_59"></a><span class="StepNumber">TABLE 4H<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_20337_TABLE_4G_VSfpack"></a>VSfpack Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 75.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 138.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 126.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="8" style="width : 75.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfpack</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfcpak/vsfnpak)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">action</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Action to be performed</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fields_in_buf</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Fields in the buffer <span style="font-family : Courier New; font-size  : 8.0pt; letter-spacing : -0.05em; ">buf</span>&#160;to write or read from the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">buf</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the vdata values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">buf_size</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer size in bytes</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_records</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of records to pack or unpack</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname_list</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Names of the fields to be packed or unpacked</p>
</td>
</tr>
  <tr style=" height : 31.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">bufptrs</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array of pointers to the field buffers in C and field buffer in FORTRAN-77</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure">&#160;</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_20266_EXAMPLE_4_Writing"></a>Writing a Multi-field and Mixed-type Vdata with Packing</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack/vsfnpak/vsfcpak</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSwrite/vsfwrit</span>&#160;to write a vdata with data of different types. Note that the approach used in Example 3 makes it difficult for the vdata to have mixed-type data. </p>
 <p class="Body">In this example, the program creates an HDF file, named &quot;Packed_Vdata.hdf&quot;, then defines a vdata which is named &quot;Mixed Data Vdata&quot; and belongs to class &quot;General Data Class&quot;. &#160;The vdata contains four order-1 fields, &quot;Temp&quot;, &quot;Height&quot;, &quot;Speed&quot;, and &quot;Ident&quot; of type float32, int16, float32, and char8, respectively. &#160;The program then packs the data in fully interlaced mode into a databuf and writes the packed data to the vdata. &#160;Note that, in the C example, a VSfpack call packs all N_RECORDS and a VSwrite call writes out all N_RECORDS records. In the Fortran example, N_RECORDS of each field are packed using separate calls to vsfnpak and vsfcpak; vsfwrit writes packed data to the vdata. &#160;</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;Packed_Vdata.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Mixed Data Vdata&quot;</p>
 <p class="FM_ExampleCode">#define &#160;CLASS_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;General Data Class&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FIELD1_NAME &#160;&#160;&#160;&#160;&#160;&quot;Temp&quot; </p>
 <p class="FM_ExampleCode">#define &#160;FIELD2_NAME &#160;&#160;&#160;&#160;&#160;&quot;Height&quot; </p>
 <p class="FM_ExampleCode">#define &#160;FIELD3_NAME &#160;&#160;&#160;&#160;&#160;&quot;Speed&quot; </p>
 <p class="FM_ExampleCode">#define &#160;FIELD4_NAME &#160;&#160;&#160;&#160;&#160;&quot;Ident&quot;</p>
 <p class="FM_ExampleCode">#define &#160;ORDER &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1 &#160;&#160;&#160;&#160;&#160;&#160;&#160;/* number of values in the field &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">#define &#160;N_RECORDS &#160;&#160;&#160;&#160;&#160;&#160;&#160;20 &#160;&#160;&#160;&#160;&#160;&#160;/* number of records the vdata contains &#160;*/</p>
 <p class="FM_ExampleCode">#define &#160;N_FIELDS &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4 &#160;&#160;&#160;&#160;&#160;&#160;&#160;/* number of fields in the vdata &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">#define &#160;FIELDNAME_LIST &#160;&#160;&quot;Temp,Height,Speed,Ident&quot; &#160;/* No spaces b/w names */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">/* number of bytes of the data to be written, i.e., the size of all the</p>
 <p class="FM_ExampleCode"> &#160;&#160;field values combined times the number of records */</p>
 <p class="FM_ExampleCode">#define BUF_SIZE (2*sizeof(float32) + sizeof(int16) + sizeof(char)) * N_RECORDS</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, vdata_id,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_ref = -1, &#160;&#160;/* vdata’s reference number, set to -1 to create */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num_of_records; /* number of records actually written to the vdata */</p>
 <p class="FM_ExampleCode"> &#160;&#160;float32 temp[N_RECORDS]; &#160;&#160;&#160;&#160;&#160;&#160;/* buffer to hold values of first field &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;height[N_RECORDS]; &#160;&#160;&#160;&#160;/* buffer to hold values of second field &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;float32 speed[N_RECORDS]; &#160;&#160;&#160;&#160;&#160;/* buffer to hold values of third field &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;char8 &#160;&#160;ident[N_RECORDS]; &#160;&#160;&#160;&#160;&#160;/* buffer to hold values of fourth field &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;VOIDP &#160;&#160;fldbufptrs[N_FIELDS];/*pointers to be pointing to the field buff&#173;ers*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;uint16 &#160;databuf[BUF_SIZE]; /* buffer to hold the data after being packed*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;&#160;&#160;i;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create an HDF file. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_CREATE, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Initialize the VS interface. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create a new vdata. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_id = VSattach (file_id, vdata_ref, &quot;w&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Set name and class name of the vdata. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSsetname (vdata_id, VDATA_NAME);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSsetclass (vdata_id, CLASS_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Introduce each field’s name, data type, and order. &#160;This is the first</p>
 <p class="FM_ExampleCode"> &#160;&#160;* part in defining a vdata field.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_n = VSfdefine (vdata_id, FIELD1_NAME, DFNT_FLOAT32, ORDER); </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_n = VSfdefine (vdata_id, FIELD2_NAME, DFNT_INT16, ORDER); </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_n = VSfdefine (vdata_id, FIELD3_NAME, DFNT_FLOAT32, ORDER); </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_n = VSfdefine (vdata_id, FIELD4_NAME, DFNT_CHAR8, ORDER); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Finalize the definition of the fields of the vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSsetfields (vdata_id, FIELDNAME_LIST);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Enter data values into the field buffers by the records.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (i = 0; i &lt; N_RECORDS; i++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;temp[i] = 1.11 * (i+1);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;height[i] = i;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;speed[i] = 1.11 * (i+1);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ident[i] = ’A’ + i;</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Build an array of pointers each of which points to a field buffer that</p>
 <p class="FM_ExampleCode"> &#160;&#160;* holds all values of the field.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;fldbufptrs[0] = &amp;temp[0];</p>
 <p class="FM_ExampleCode"> &#160;&#160;fldbufptrs[1] = &amp;height[0];</p>
 <p class="FM_ExampleCode"> &#160;&#160;fldbufptrs[2] = &amp;speed[0];</p>
 <p class="FM_ExampleCode"> &#160;&#160;fldbufptrs[3] = &amp;ident[0];</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Pack all data in the field buffers that are pointed to by the set of</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* pointers fldbufptrs, and store the packed data into the buffer </p>
 <p class="FM_ExampleCode"> &#160;&#160;* databuf. &#160;Note that the second parameter is _HDF_VSPACK for packing.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSfpack (vdata_id,_HDF_VSPACK, NULL, (VOIDP)databuf,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BUF_SIZE, N_RECORDS, NULL, (VOIDP)fldbufptrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Write all records of the packed data to the vdata. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;num_of_records = VSwrite (vdata_id, (uint8 *)databuf, N_RECORDS, </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the vdata and the VS interface, then close </p>
 <p class="FM_ExampleCode"> &#160;&#160;* the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;program write_mixed_vdata </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 CLASS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 VDATA_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*4 &#160;FIELD1_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*6 &#160;FIELD2_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*5 &#160;FIELD3_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*5 &#160;FIELD4_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*23 FIELDNAME_LIST</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;N_RECORDS, N_FIELDS, ORDER</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;BUF_SIZE </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;= ’Packed_Vdata.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CLASS_NAME &#160;&#160;&#160;&#160;&#160;= ’General Data Class’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;= ’Mixed Data Vdata’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD1_NAME &#160;&#160;&#160;&#160;= ’Temp’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD2_NAME &#160;&#160;&#160;&#160;= ’Height’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD3_NAME &#160;&#160;&#160;&#160;= ’Speed’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD4_NAME &#160;&#160;&#160;&#160;= ’Ident’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELDNAME_LIST = ’Temp,Height,Speed,Ident’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (N_RECORDS = 20,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_FIELDS &#160;= 4, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER &#160;&#160;&#160;&#160;= 1,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BUF_SIZE = (4 + 2 + 4 + 1)*N_RECORDS) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_WRITE, DFNT_FLOAT32, DFNT_INT16, DFNT_CHAR8,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE, HDF_VSPACK &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_WRITE &#160;&#160;&#160;= 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_FLOAT32 &#160;&#160;= 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT16 &#160;&#160;&#160;&#160;= 22,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_CHAR8 &#160;&#160;&#160;&#160;= 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE = 0,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HDF_VSPACK &#160;&#160;&#160;&#160;= 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vfstart, vsfatch, vsfsnam, vsfscls, vsffdef, vsfsfld,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;vsfnpak, vsfcpak, vsfwrit, vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;file_id, vdata_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;vdata_ref, num_of_records</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real &#160;&#160;&#160;&#160;&#160;temp(N_RECORDS)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer*2 height(N_RECORDS)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real &#160;&#160;&#160;&#160;&#160;speed(N_RECORDS)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;character ident(N_RECORDS) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;i</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Buffer for packed data should be big enough to hold N_RECORDS.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;databuf(BUF_SIZE/4 + 1)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for writing.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_WRITE, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create a new vdata.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = -1</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file_id, vdata_ref, ’w’) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set name and class name of the vdata.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsnam(vdata_id, VDATA_NAME)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfscls(vdata_id, CLASS_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Introduce each field’s name, data type, and order. This is the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;first part in defining a field.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffdef(vdata_id, FIELD1_NAME, DFNT_FLOAT32, ORDER)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffdef(vdata_id, FIELD2_NAME, DFNT_INT16, ORDER)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffdef(vdata_id, FIELD3_NAME, DFNT_FLOAT32, ORDER)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffdef(vdata_id, FIELD4_NAME, DFNT_CHAR8, ORDER)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Finalize the definition of the fields.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsfld(vdata_id, FIELDNAME_LIST)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Enter data values into the field databufs by the records.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 i = 1, N_RECORDS</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;temp(i) &#160;&#160;= 1.11 * i</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;height(i) = i - 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;speed(i) &#160;= 1.11 * i</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ident(i) &#160;= char(64+i)</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Pack N_RECORDS of data into databuf. In Fortran, each field is packed </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;using separate calls to vsfnpak or vsfcpak.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfnpak(vdata_id, HDF_VSPACK, ’ ’, databuf, BUF_SIZE,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_RECORDS, FIELD1_NAME, temp) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfnpak(vdata_id, HDF_VSPACK, ’ ’, databuf, BUF_SIZE,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_RECORDS, FIELD2_NAME, height) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfnpak(vdata_id, HDF_VSPACK, ’ ’, databuf, BUF_SIZE,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_RECORDS, FIELD3_NAME, speed) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfcpak(vdata_id, HDF_VSPACK, ’ ’, databuf, BUF_SIZE,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_RECORDS, FIELD4_NAME, ident) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write all the records of the packed data to the vdata.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;num_of_records = vsfwrit(vdata_id, databuf, N_RECORDS,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vdata and to the VS interface, and</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode"><a name="IX_creating_and_writing_to_3"></a><span style="font-weight : bold; font-size  : 14.0pt; ">&nbsp;</span></p>
 <p class="Heading2"><a name="IX_reading_from_a_2"></a>4.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Reading from Vdatas</p>
 <p class="Body">Reading from vdatas is more complicated than writing to vdatas, as it usually involves searching for a particular vdata, then searching <span style="font-style : italic; ">within</span>&#160;that vdata, before actually reading data. The process of reading from vdatas can be summarized as follows: </p>
 <p class="Step"><span class="StepNumber">10.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Identify the appropriate vdata in the file.</p>
 <p class="Step"><span class="StepNumber">11.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Obtain information about the vdata. </p>
 <p class="Step"><span class="StepNumber">12.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Read in the desired data.</p>
 <p class="Body">Only Step 3 will be covered in this section assuming that the vdata of interest and its data informa&#173;tion is known. Step 1 is covered in <a href="#XREF_18002_4_7_Searching_for">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.7<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;and Step 2 is covered in <a href="#XREF_10689_4_9_Obtaining">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.9<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body">Step 3 can be expanded into the following:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Open the file.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initiate access to the vdata.</p>
 <p class="Step"><span class="StepNumber">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Optionally seek to the appropriate record.</p>
 <p class="Step"><span class="StepNumber">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Initialize the fields to be read.</p>
 <p class="Step"><span class="StepNumber">6.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Read the data.</p>
 <p class="Step"><span class="StepNumber">7.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>If the fields have different data types, unpack the field data.</p>
 <p class="Step"><span class="StepNumber">8.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the vdata.</p>
 <p class="Step"><span class="StepNumber">9.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the Vdata interface.</p>
 <p class="Step"><span class="StepNumber">10.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Close the file.</p>
 <p class="Body">The following sequence of function calls corresponds to the above steps:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = Hopen(filename, file_access_mode, num_dds_block);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vstart(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = VSattach(file_id, vdata_ref, vdata_access_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>record_pos = VSseek(vdata_id, record_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetfields(vdata_id, fieldname_list);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>records_read = VSread(vdata_id, databuf, n_records, interlace_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSfpack(vdata_id, action, fields_in_buf, buf, buf_size, n_records, fieldname_list, bufptrs);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSdetach(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vend(file_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Hclose(file_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>file_id = hopen(filename, file_access_mode, num_dds_block)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfstart(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = vsfatch(file_id, vdata_ref, vdata_access_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>record_pos = vsfseek(vdata_id, record_index)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfsfld(vdata_id, fieldname_list)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>records_read = vsfrd(vdata_id, databuf, n_records, interlace_mode)</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>records_read = vsfrdc(vdata_id, databuf, n_records, interlace_mode)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfcpak(vdata_id, action, fields_in_buf, buf, buf_size, n_records, fieldname_list, bufptrs)</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfnpak(vdata_id, action, fields_in_buf, buf, buf_size, n_records, fieldname_list, bufptrs)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfdtch(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vfend(file_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = hclose(file_id)</p>
 <p class="Heading3"><a name="IX_selecting_the_set_of_to"></a>4.6.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_33834_VSsetfields"></a>Initializing the Fields for Read Access: VSsetfields</p>
 <p class="Body"><a name="IX_description_111"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>&#160;is used to establish access to the fields to be read by the next read operation. The argument <span class="VarName">fieldname_list</span>&#160;is a comma-separated string of the field names with no white space. The order the field names occur in <span class="VarName">fieldname_list</span>&#160;is the order in which the fields will be read. For example, assume that a vdata contains fields named A, B, C, D, E, F in that order. The following declarations demonstrate how to use <span class="VarName">fieldname_list</span>&#160;to read a single field, a collection of random fields, and all the fields in reverse order:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Single field: <span class="VarName"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>fieldname_list </span>= “<span class="DefName">B</span>”</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Collection of fields:<span class="VarName">&#160;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>fieldname_list </span>= “<span class="DefName">A,E</span>”</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Reverse order: <span class="VarName"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>fieldname_list </span>= “<span class="DefName">F,E,D,C,B,A</span>”</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>&#160;returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span> are fur&#173;ther defined in <a href="#XREF_38618_TABLE_4E_VSsetname">Table 4E on page 159</a>.</p>
 <p class="Heading3">4.6.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_32800_VSread"></a>Reading from the Current Vdata: VSread</p>
 <p class="Body"><a name="IX_description_112"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;sequentially retrieves data from the records in a vdata. The parameter <span class="VarName">databuf</span>&#160;is the buffer to store the retrieved data, <span class="VarName">n_records</span>&#160;specifies the number of records to retrieve, and <span class="VarName">interlace_mode</span>&#160;specifies the interlace mode, <span class="DefName">FULL_INTERLACE</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">NO_INTERLACE </span>(or <span class="DefName">1</span>), to be used in the contents of <span class="VarName">databuf</span>.</p>
 <p class="Body"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Prior to the first <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;call, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span> must be called.</p>
 <p class="Body">If a <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;call is successful, the data returned in <span class="VarName">databuf</span>&#160;is formatted according to the interlace mode specified by the parameter <span class="VarName">interlace_mode</span>&#160;and the data fields appear in the order specified in the last call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span> for that vdata.</p>
 <p class="Body"><a name="IX_description_113"></a>By default, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;reads from the first vdata record. To retrieve an arbitrary record from a vdata, use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span>&#160;to specify the record position before calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span>&#160;is described in <a href="#XREF_32597_VSseek">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>4.5.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body">The FORTRAN-77 version of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;has three routines: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfrd</span>&#160;reads buffered numeric data, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfrdc</span>&#160;reads buffered character data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfread</span> reads generic packed data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;returns the total number of records read if successful and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;are further defined in <a href="#XREF_41225_TABLE_4H_VSread">Table 4I</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_60"></a><span class="StepNumber">TABLE 4I<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_41225_TABLE_4H_VSread"></a>VSread Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.05pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 58.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 146.250pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 123.125pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 101.250pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 62.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSread</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfrd/vsfrdc/vsfread)</p>
</td>
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 101.250pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 123.125pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">databuf</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uint8*</p>
</td>
  <td style="width : 101.250pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*) /</p>
  <p class="CellParameter">character*(*) / integer</p>
</td>
  <td style="width : 123.125pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the retrieved data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_records</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 101.250pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 123.125pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of records to be retrieved</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 58.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">interlace_mode</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 101.250pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 123.125pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Interlace mode of the buffered data</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure">&#160;</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfields</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;may be called several times to read from the same vdata. However, note that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;operations are sequential. Thus, in the following code segment, the first call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;returns ten “A” data values from the first ten elements in the vdata, while the second call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;returns ten “B” data values from the second ten elements (elements 10 to 19) in the vdata.</p>
 <p class="FM_1syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetfields(vdata_id, &quot;A&quot;);</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>records_read = VSread(vdata_id, bufferA, 10, interlace_mode);</p>
 <p class="FM_1syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetfields(vdata_id, &quot;B&quot;);</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>records_read = VSread(vdata_id, bufferB, 10, interlace_mode);</p>
 <p class="Body">To read the first ten “B” data values, the access routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek</span> must be called to explicitly posi&#173;tion the read pointer back to the position of the first record. The following code segment reads the first ten “A” and “B” values into two separate float arrays <span class="VarName">bufferA</span>&#160;and <span class="VarName">bufferB</span>.</p>
 <p class="FM_1syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetfields(vdata_id, &quot;A&quot;);</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>records_read = VSread(vdata_id, bufferA, 10, interlace_mode);</p>
 <p class="FM_1syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>record_pos = VSseek(vdata_id, 0)<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>; /* seeks to first record */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetfields(vdata_id, &quot;B&quot;);</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>records_read = VSread(vdata_id, bufferB, 10, interlace_mode);</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Reading a Vdata of Homogeneous Type </p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind/vsffnd</span>&#160;to locate a vdata given its name, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek/vsf&#173;seek</span>&#160;to move the current position to a desired record, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread/vsfrd</span>&#160;to read the data of several records. &#160;The function <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span> will be discussed in Section 4.7.3. &#160;The approach used in this exam&#173;ple can only read data written by a program such as that in Example 3, i.e., without packing. &#160;Reading mixed data vdatas must use the approach illustrated in Example 6. </p>
 <p class="Body">The program reads 5 records starting from the fourth record of the two fields &quot;Position&quot; and &quot;Tem&#173;perature&quot; in the vdata &quot;Solid Particle&quot; from the file &quot;General_Vdatas.hdf&quot;. &#160;After the program uses VSfind/vsffnd to obtain the reference number of the vdata, it uses <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSseek/vsfseek</span>&#160;to place the current position at the fourth record, then starts reading 5 records, and displays the data. &#160;&#160;</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;General_Vdatas.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;&quot;Solid Particle&quot;</p>
 <p class="FM_ExampleCode">#define &#160;N_RECORDS &#160;&#160;&#160;&#160;&#160;&#160;5 &#160;&#160;&#160;/* number of records the vdata contains */</p>
 <p class="FM_ExampleCode">#define &#160;RECORD_INDEX &#160;&#160;&#160;3 &#160;&#160;&#160;/* position where reading starts - 4th record */</p>
 <p class="FM_ExampleCode">#define &#160;ORDER_1 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 &#160;&#160;&#160;/* order of first field to be read */</p>
 <p class="FM_ExampleCode">#define &#160;ORDER_2 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2 &#160;&#160;&#160;/* order of second field to be read */</p>
 <p class="FM_ExampleCode">#define &#160;FIELDNAME_LIST &#160;&quot;Position,Temperature&quot; /* only two fields are read */</p>
 <p class="FM_ExampleCode">#define &#160;N_VALS_PER_REC &#160;(ORDER_1 + ORDER_2) &#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* number of values per record */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, vdata_id, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_ref, &#160;&#160;&#160;&#160;/* vdata’s reference number */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num_of_records, /* number of records actually written to the vdata */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;record_pos; &#160;&#160;&#160;/* position of the current record */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 i, rec_num; &#160;&#160;&#160;/* current record number in the vdata */</p>
 <p class="FM_ExampleCode"> &#160;&#160;float32 databuf[N_RECORDS][N_VALS_PER_REC]; &#160;&#160;/* buffer for vdata values */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the HDF file for reading.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_READ, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the VS interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Get the reference number of the vdata, whose name is specified in </p>
 <p class="FM_ExampleCode"> &#160;&#160;* VDATA_NAME, using VSfind, which will be discussed in Section 4.7.3.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_ref = VSfind (file_id, VDATA_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Attach to the vdata for reading if it is found, otherwise </p>
 <p class="FM_ExampleCode"> &#160;&#160;* exit the program.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;if (vdata_ref == 0) exit;</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_id = VSattach (file_id, vdata_ref, &quot;r&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Specify the fields that will be read.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSsetfields (vdata_id, FIELDNAME_LIST);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Place the current point to the position specified in RECORD_INDEX.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;record_pos = VSseek (vdata_id, RECORD_INDEX);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Read the next N_RECORDS records from the vdata and store the data </p>
 <p class="FM_ExampleCode"> &#160;&#160;* in the buffer databuf with fully interlaced mode.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;num_of_records = VSread (vdata_id, (uint8 *)databuf, N_RECORDS, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Display the read data as many records as the number of records </p>
 <p class="FM_ExampleCode"> &#160;&#160;* returned by VSread.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">   printf (&quot;\n       Particle Position        Temperature Range\n\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (rec_num = 0; rec_num &lt; num_of_records; rec_num++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode">      printf (&quot;   %6.2f, %6.2f, %6.2f        %6.2f, %6.2f\n&quot;, </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;databuf[rec_num][0], databuf[rec_num][1], databuf[rec_num][2], </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;databuf[rec_num][3], databuf[rec_num][4]);</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the vdata and to the VS interface, then close </p>
 <p class="FM_ExampleCode"> &#160;&#160;* the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;program read_from_vdata </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*14 VDATA_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*20 FIELDNAME_LIST</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;N_RECORDS, RECORD_INDEX</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;ORDER_1, ORDER_2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;N_VALS_PER_REC</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;= ’General_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;= ’Solid Particle’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELDNAME_LIST = ’Position,Temperature’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (N_RECORDS &#160;= 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RECORD_INDEX = 3,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER_1 &#160;&#160;&#160;= 3,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ORDER_2 &#160;&#160;&#160;= 2,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_VALS_PER_REC = ORDER_1 + ORDER_2 ) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_READ, FULL_INTERLACE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_READ &#160;&#160;&#160;&#160;= 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE = 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vfstart, vsffnd, vsfatch, vsfsfld, vsfrd, vsfseek,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file_id, vdata_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vdata_ref, rec_num, num_of_records, rec_pos</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real &#160;&#160;&#160;databuf(N_VALS_PER_REC, N_RECORDS)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer i</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for reading.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_READ, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the reference number of the vdata, whose name is specified in</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;VDATA_NAME, using vsffnd, which will be discussed in Section 4.7.3. </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = vsffnd(file_id, VDATA_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Attach to the vdata for reading if it is found, </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;otherwise exit the program.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (vdata_ref .eq. 0) stop</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file_id, vdata_ref, ’r’) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Specify the fields that will be read. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsfld(vdata_id, FIELDNAME_LIST)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Place the current point to the position specified in RECORD_INDEX.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;rec_pos = vsfseek(vdata_id, RECORD_INDEX) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the next N_RECORDS from the vdata and store the data in the buffer </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;databuf with fully interlace mode. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;num_of_records = vsfrd(vdata_id, databuf, N_RECORDS,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Display the read data as many records as the number of records returned</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;by vsfrd.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’ &#160;Particle Position &#160;&#160;&#160;&#160;Temperature Range’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 rec_num = 1, num_of_records</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,1000) (databuf(i, rec_num), i = 1, N_VALS_PER_REC)</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue </p>
 <p class="FM_ExampleCode">1000 &#160;format(1x,3(f6.2), 8x,2(f6.2))</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vdata and to the VS interface, and</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 6.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Reading a Multi-field and Mixed-type Vdata with Packing </p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread/vsfread</span>&#160;to read part of a mixed data vdata and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSf&#173;pack/vsfnpak/vsfcpak</span>&#160;to unpack the data read. </p>
 <p class="Body">The program reads the vdata &quot;Mixed Data Vdata&quot; that was written to the file &quot;Packed_Vdata.hdf&quot; by the program in Example 4. &#160;In Example 6, all values of the fields &quot;Temp&quot; and &quot;Ident&quot; are read. &#160;The program unpacks and displays all the values after reading is complete. &#160;Again, note that in C only one call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSread</span>&#160;and one call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfpack</span>&#160;are made to read and unpack all <span class="DefName">N_RECORDS</span>&#160;records. In Fortran, data is read with one call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfread</span>, but each field is unpacked using separate calls to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfnpak</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfcpak</span></p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;N_RECORDS &#160;&#160;&#160;&#160;&#160;&#160;20 &#160;&#160;&#160;&#160;&#160;/* number of records to be read */</p>
 <p class="FM_ExampleCode">#define &#160;N_FIELDS &#160;&#160;&#160;&#160;&#160;&#160;&#160;2 &#160;&#160;&#160;&#160;&#160;&#160;/* number of fields to be read */</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Packed_Vdata.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;&quot;Mixed Data Vdata&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FIELDNAME_LIST &#160;&quot;Temp,Ident&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">/* number of bytes of the data to be read */</p>
 <p class="FM_ExampleCode">#define &#160;BUFFER_SIZE &#160;&#160;&#160;&#160;( sizeof(float32) + sizeof(char)) * N_RECORDS </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main ()</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, vdata_id, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;num_of_records, &#160;&#160;&#160;&#160;&#160;&#160;&#160;/* number of records actually read */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_ref, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* reference number of the vdata to be read */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;buffer_size; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* number of bytes the vdata can hold &#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;float32 itemp[N_RECORDS]; &#160;&#160;&#160;/* buffer to hold values of first field &#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;idents[N_RECORDS]; &#160;&#160;&#160;&#160;/* buffer to hold values of fourth field &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;uint8 databuf[BUFFER_SIZE]; &#160;/* buffer to hold read data, still packed &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;VOIDP fldbufptrs[N_FIELDS];/*pointers to be pointing to the field buffers*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Open the HDF file for reading. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_READ, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Initialize the VS interface. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the reference number of the vdata, whose name is specified in</p>
 <p class="FM_ExampleCode"> &#160;&#160;* VDATA_NAME, using VSfind, which will be discussed in Section 4.7.3.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_ref = VSfind (file_id, VDATA_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Attach to the vdata for reading. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_id = VSattach (file_id, vdata_ref, &quot;r&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Specify the fields that will be read. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSsetfields(vdata_id, FIELDNAME_LIST);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Read N_RECORDS records of the vdata and store the values into the </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* buffer databuf. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;num_of_records = VSread (vdata_id, (uint8 *)databuf, N_RECORDS, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Build an array of pointers each of which points to an array that</p>
 <p class="FM_ExampleCode"> &#160;&#160;* will hold all values of a field after being unpacked.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;fldbufptrs[0] = &amp;itemp[0];</p>
 <p class="FM_ExampleCode"> &#160;&#160;fldbufptrs[1] = &amp;idents[0];</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Unpack the data from the buffer databuf and store the values into the </p>
 <p class="FM_ExampleCode"> &#160;&#160;* appropriate field buffers pointed to by the set of pointers fldbufptrs.</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Note that the second parameter is _HDF_VSUNPACK for unpacking and the</p>
 <p class="FM_ExampleCode"> &#160;&#160;* number of records is the one returned by VSread.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSfpack (vdata_id, _HDF_VSUNPACK, FIELDNAME_LIST, (VOIDP)databuf,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BUFFER_SIZE, num_of_records, NULL, (VOIDP)fldbufptrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Display the read data being stored in the field buffers.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">   printf (&quot;\n     Temp      Ident\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (i=0; i &lt; num_of_records; i++)</p>
 <p class="FM_ExampleCode">       printf (&quot;   %6.2f        %c\n&quot;, itemp[i], idents[i]);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the vdata and the VS interface, then close </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* the HDF file. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Body">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;program read_mixed_vdata </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 VDATA_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*4 &#160;FIELD1_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*5 &#160;FIELD2_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*10 FIELDNAME_LIST</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;N_RECORDS, N_FIELDS</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;BUFFER_SIZE </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;= ’Packed_Vdata.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;= ’Mixed Data Vdata’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD1_NAME &#160;&#160;&#160;&#160;= ’Temp’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD2_NAME &#160;&#160;&#160;&#160;= ’Ident’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELDNAME_LIST = ’Temp,Ident’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (N_RECORDS &#160;&#160;= 20,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;N_FIELDS &#160;&#160;&#160;= 2, </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BUFFER_SIZE = (4 + 1)*N_RECORDS) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_READ, DFNT_FLOAT32, DFNT_CHAR8,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE, HDF_VSUNPACK &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_READ &#160;&#160;&#160;&#160;&#160;&#160;= 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_FLOAT32 &#160;&#160;&#160;&#160;= 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_CHAR8 &#160;&#160;&#160;&#160;&#160;&#160;= 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE &#160;&#160;= 0,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HDF_VSUNPACK &#160;&#160;&#160;&#160;= 1)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vfstart, vsfatch, vsffnd, vsfsfld,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;vsfnpak, vsfcpak, vsfread, vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;file_id, vdata_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;vdata_ref, num_of_records</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real &#160;&#160;&#160;&#160;&#160;temp(N_RECORDS)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;character ident(N_RECORDS) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;i</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Buffer for read packed data should be big enough to hold N_RECORDS.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;databuf(BUFFER_SIZE/4 + 1)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for reading.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_READ, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the reference number of the vdata, whose name is specified in</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;VDATA_NAME, using vsffnd, which will be discussed in Section 4.7.3. </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = vsffnd(file_id, VDATA_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Attach to the vdata for reading if it is found, </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;otherwise exit the program.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (vdata_ref .eq. 0) stop</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file_id, vdata_ref, ’r’) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Specify the fields that will be read. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsfld(vdata_id, FIELDNAME_LIST)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read N_RECORDS records of the vdata and store the values into the databuf.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;num_of_records = vsfread(vdata_id, databuf, N_RECORDS,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Unpack N_RECORDS from databuf into temp and ident arrays.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;In Fortran, each field is unpacked using separate calls to </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;vsfnpak or vsfcpak.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfnpak(vdata_id, HDF_VSUNPACK, FIELDNAME_LIST, databuf,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BUFFER_SIZE, num_of_records, FIELD1_NAME, temp) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfcpak(vdata_id, HDF_VSUNPACK, FIELDNAME_LIST, databuf,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BUFFER_SIZE, num_of_records, FIELD2_NAME, ident) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Display the read data being stored in the field databufs.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write (*,*) ’ &#160;&#160;&#160;Temp &#160;Ident’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 i = 1, num_of_records</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,1000) temp(i), ident(i)</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue </p>
 <p class="FM_ExampleCode">1000 &#160;format (3x,F6.2, 4x, a)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vdata and to the VS interface, and</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode"><a name="IX_reading_from_a_3"></a>&nbsp;</p>
 <p class="Heading2"><a name="IX_searching_for"></a>4.7<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_18002_4_7_Searching_for"></a>Searching for Vdatas in a File</p>
 <p class="Body">There are several HDF library routines that perform searches for a specific vdata in a file. In this section, we introduce these routines; methods for obtaining information about the members of a given vdata are described in the following section.</p>
 <p class="Heading3"><a name="IX_searching_for_lone"></a>4.7.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_13127_VSlone"></a>Finding All Vdatas that are Not Members of a Vgroup: VSlone </p>
 <p class="Body"><a name="IX_description_114"></a>A <span class="Definition">lone vdata</span>&#160;is one that is not a member of a vgroup. <span class="Definition">Vgroups</span>&#160;are HDF objects that contain sets of HDF objects, including vgroups. Vgroups are described in <a href="../UG_Vgroups/UG_Vgroups.htm#XREF_34180_Vgroups_V_API">Chapter 5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Vgroups (V API)&quot;</a>.</p>
 <p class="Body"><a name="IX_description_115"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSlone</span>&#160;searches an HDF file and retrieves the reference numbers of lone vdatas in the file. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSlone</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_lone_vdatas = VSlone(file_id, ref_array, maxsize);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_lone_vdatas = vsflone(file_id, ref_array, maxsize)</p>
 <p class="Body">The parameter <span class="VarName">ref_array</span> is an array allocated to hold the retrieved reference numbers of lone vda&#173;tas and the argument <span class="VarName">maxsize</span>&#160;specifies the maximum size of <span class="VarName">ref_array</span>. At most, <span class="VarName">maxsize</span>&#160;reference numbers will be returned in <span class="VarName">ref_array</span>.</p>
 <p class="Body">The space that should be allocated for <span class="VarName">ref_array</span>&#160;is dependent upon on how many lone vdatas are expected in the file. A size of <span class="DefName">MAX_FIELD_SIZE</span>&#160;(or <span class="DefName">65535</span>) integers is adequate to handle any case. To use dynamic memory instead of allocating such a large array, first call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSlone</span>&#160;with <span class="VarName">maxsize</span>&#160;set to a small value like 0 or 1, then use the returned value to allocate memory for <span class="VarName">ref_array</span>&#160;to be passed to a subsequent call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSlone</span>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSlone</span>&#160;returns the number of lone vdatas or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSlone</span>&#160;are listed in <a href="#XREF_16134_TABLE_4I_VSlone">Table 4J on page 184</a>.</p>
 <p class="Heading3"><a name="IX_searching_for_the"></a>4.7.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_39951_VSgetid"></a>Sequentially Searching for a Vdata: VSgetid</p>
 <p class="Body"><a name="IX_description_116"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;sequentially searches through an HDF file to obtain the vdata immediately following the vdata specified by the reference number in the parameter <span class="VarName">vdata_ref</span>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ref_num = VSgetid(file_id, vdata_ref);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ref_num = vsfgid(file_id, vdata_ref)</p>
 <p class="Body">To obtain the reference number of the first vdata in the file, the user must set the parameter <span class="VarName">vdata_ref</span>&#160;to -1. Thus, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;can be repeatedly called, with the initial value of <span class="VarName">vdata_ref</span> set to -1 so that the routine will sequentially return the reference number of each vdata in the file, starting from the first vdata. After the last vdata is reached, subsequent calls to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;will return <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;returns a vdata reference number or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;are listed in <a href="#XREF_16134_TABLE_4I_VSlone">Table 4J on page 184</a>.</p>
 <p class="Heading3"><a name="IX_determining_the"></a>4.7.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_38808_VSfind"></a>Determining a Reference Number from a Vdata Name: VSfind</p>
 <p class="Body"><a name="IX_description_117"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span>&#160;searches an HDF file for a vdata with the specified name and returns the vdata reference number. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ref_num = VSfind(file_id, vdata_name);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ref_num = vsffnd(file_id, vdata_name)</p>
 <p class="Body">The parameter <span class="VarName">vdata_name</span>&#160;is the search key. Although there may be several identically named vdatas in the file, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span>&#160;will only return the reference number of the first vdata in the file with the specified name.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span>&#160;returns either the vdata reference number if the named vdata is found or <span class="DefName">0</span>&#160;otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfind</span>&#160;are listed in <a href="#XREF_16134_TABLE_4I_VSlone">Table 4J</a>.</p>
 <p class="Heading3"><a name="IX_searching_for_a_by_field"></a>4.7.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_15313_VSfexist"></a>Searching for a Vdata by Field Name: VSfexist</p>
 <p class="Body"><a name="IX_description_118"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfexist</span>&#160;queries a vdata for a set of specified field names and is often useful for locating vdatas containing particular field names. The syntax of the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfexist</span> function is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSfexist(vdata_id, fieldname_list);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfex(vdata_id, fieldname_list)</p>
 <p class="Body">The parameter <span class="VarName">fieldname_list</span>&#160;is a string of comma-separated field names containing no white space, for example, “<span class="DefName">PX,PY,PZ</span>”.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfexist</span>&#160;returns <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) if all of the fields specified in the parameter <span class="VarName">fieldname_list</span>&#160;are found and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfexist</span>&#160;are listed in <a href="#XREF_16134_TABLE_4I_VSlone">Table 4J</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_64"></a><a name="IX_parameter_list_63"></a><a name="IX_parameter_list_62"></a><a name="IX_parameter_list_61"></a><span class="StepNumber">TABLE 4J<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_16134_TABLE_4I_VSlone"></a>VSlone, VSgetid, VSfind, and VSfexist Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.47pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name </p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 52.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 110.450pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 165.571pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSlone</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsflone)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">ref_array</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 []</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer (*)</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for a list of lone vdata reference numbers</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">maxsize</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Maximum number of reference numbers to be buffered</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetid</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfgid)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_ref</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reference number of the vdata preceding the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfind</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsffnd)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">file_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_name</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the vdata to find</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfexist</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfex)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname_list</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Names of the fields to be queried</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 7.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Locating a Vdata Containing Specified Field Names</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid/vsfgid</span>&#160;to obtain the reference number of each vdata in an HDF file and the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfexist/vsfex</span>&#160;to determine whether a vdata contains specific fields. </p>
 <p class="Body">In this example, the program searches the HDF file &quot;General_Vdatas.hdf&quot; to locate the first vdata containing the fields &quot;Position&quot; and &quot;Temperature&quot;. &#160;The HDF file is an output of the program in Example 3.</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;General_Vdatas.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;SEARCHED_FIELDS &#160;&#160;&quot;Position,Temperature&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( )</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, vdata_id, vdata_ref,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;index = 0; &#160;&#160;&#160;&#160;/* index of the vdata in the file - manually kept &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int8 &#160;found_fields; &#160;/* TRUE if the specified fields exist in the vdata &#160;*/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the HDF file for reading.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_READ, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the VS interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Set the reference number to -1 to start the search from </p>
 <p class="FM_ExampleCode"> &#160;&#160;* the beginning of file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_ref = -1;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Assume that the specified fields are not found in the current vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;found_fields = FALSE;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Use VSgetid to obtain each vdata by its reference number then</p>
 <p class="FM_ExampleCode"> &#160;&#160;* attach to the vdata and search for the fields. &#160;The loop</p>
 <p class="FM_ExampleCode"> &#160;&#160;* terminates when the last vdata is reached or when a vdata which</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* contains the fields listed in SEARCHED_FIELDS is found. &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;while ((vdata_ref = VSgetid (file_id, vdata_ref)) != FAIL)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_id = VSattach (file_id, vdata_ref, &quot;r&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if ((status_n = VSfexist (vdata_id, SEARCHED_FIELDS)) != FAIL)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;found_fields = TRUE;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Detach from the current vdata before continuing searching.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;index++;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* advance the index by 1 for the next vdata */</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Print the index of the vdata containing the fields or a &quot;not found&quot; </p>
 <p class="FM_ExampleCode"> &#160;&#160;* message if no such vdata is found. &#160;Also detach from the vdata found.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;if (!found_fields) </p>
 <p class="FM_ExampleCode">      printf (&quot;Fields Position and Temperature were not found.\n&quot;);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;else </p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;printf</p>
 <p class="FM_ExampleCode">     (&quot;Fields Position and Temperature found in the vdata at position %d\n&quot;, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;index);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the VS interface and close the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;program locate_vdata </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 FILE_NAME</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;character*20 SEARCHED_FIELDS </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;= ’General_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SEARCHED_FIELDS = ’Position,Temperature’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_READ</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_READ = 1)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer vfstart, vsfatch, vsfgid, vsfex, vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file_id, vdata_id, vdata_ref</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer index </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;logical found_fields </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for reading.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_READ, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;index = 0</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set the reference number to -1 to start the search from the beginning</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;of the file. </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = -1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Assume that the specified fields are not found in the current vdata.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;found_fields = .FALSE.</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Use vsfgid to obtain each vdata by its reference number then</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;attach to the vdata and search for the fields. The loop terminates</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;when the last vdata is reached or when a vdata which contains the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;fields listed in SEARCHED_FIELDS is found.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = vsfgid(file_id, vdata_ref)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (vdata_ref .eq. -1) goto 100</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file_id, vdata_ref, ’r’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfex(vdata_id, SEARCHED_FIELDS)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (status .ne. -1) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;found_fields = .TRUE.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;goto 100</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;index = index + 1 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;goto 10</p>
 <p class="FM_ExampleCode">100 &#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print the index of the vdata containing the fields or a ’not found’</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;message if no such vdata is found. Also detach from the vdata found.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if(.NOT.found_fields) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Fields Positions and Temperature were not found’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;else</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;’Fields Positions and Temperature were found in the vdata’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;’ at position ’, index</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;Terminate access to the vdata</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;endif &#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the VS interface and close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode"><a name="IX_searching_for_1"></a>&nbsp;</p>
 <p class="Heading3">4.7.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Retrieving Vdatas in a File or in a Vgroup: VSgetvdatas</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span>&#160;retrieves a list containing reference numbers of vdatas in a file or in a vgroup, which is identified by the parameter <span class="VarName">id</span>. &#160;The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSgetvdatas(id, start_vd, vd_count, refarray);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfgvdatas(id, start_vd, vd_count, refarray)</p>
 <p class="Body">The library commonly use vgroups or vdatas to store HDF objects. &#160;For example, a vgroup is used to represent an SDS and a vdata for an attribute. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span>&#160;retrieves only the vdatas that were previously created by user applications, not those that were created by the library internally. &#160;They are referred to as user-created vdatas, for brevity.</p>
 <p class="Body">When <span class="VarName">id</span> is a vgroup identifier, only the immediate sub-vdatas will be retrieved; that is, the sub-vgroups will not be traversed.</p>
 <p class="Body">The parameter <span class="VarName">vd_count</span>&#160;specifies the number of values that the <span class="VarName">refarray</span>&#160;list can hold and can be any positive number smaller than <span class="DefName">MAX_REF</span> (<span class="DefName">65535</span>). &#160;If <span class="VarName">vd_count</span>&#160;is larger than the actual number of user-created vdatas, then only the actual number of user-created vdatas will be retrieved.</p>
 <p class="Body">The retrieval starts at the vdatas number <span class="VarName">start_vd</span>&#160;going forward in the order which the vdatas were created. &#160;For example, if there are 100 vdatas that can be retrieved, specifying <span class="VarName">start_vd</span>&#160;as 90 and <span class="VarName">vd_count</span>&#160;as 10 will retrieve the last ten vdatas. &#160;The value for <span class="VarName">start_vd</span>&#160;must be non-negative and smaller than the number of user-created vdatas, which can be obtained by invoking <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetv&#173;datas</span>&#160;passing in <span class="DefName">NULL</span>&#160;for the array <span class="VarName">refarray</span>. &#160;This number of user-created vdatas will also allow applications to sufficiently allocate space for <span class="VarName">refarray</span>.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>When <span class="VarName">start_vd</span>&#160;is 0, the retrieval will start at the beginning of the file or the first sub-vdata of the specified vgroup.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>When <span class="VarName">start_vd</span>&#160;is smaller than the number of user-created vdatas in the file or the specified vgroup, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span>&#160;will start retrieving vdatas from the vdata number <span class="VarName">start_vd</span>.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>When <span class="VarName">start_vd</span>&#160;equals or is greater than the number of user-created vdatas in the file or the vgroup, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span>&#160;will return <span class="DefName">FAIL </span>(or <span class="DefName">-1</span>).</p>
 <p class="Body">Following are some examples of using <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span>&#160;to get the reference numbers of vdatas in a file, assuming that the file has been opened for reading successfully:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Call VSgetvdatas the first time to get the number of vdatas in </p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;the file to allocate ref_array */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_vds = VSgetvdatas(file_id, 0, 0, NULL);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Allocate space to retrieve reference numbers of n_vds vdatas */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ref_array = (uint16 *)HDmalloc(sizeof(uint16)*n_vds);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* To get all the vdatas in the file: */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_vds = VSgetvdatas(file_id, 0, n_vds, ref_array);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Assuming n_vds=100, to get the first 10 vdatas in the file: */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_vds = VSgetvdatas(file_id, 0, 10, ref_array);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Assuming n_vds=100, to get the last 10 vdatas in the file: */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_vds = VSgetvdatas(file_id, 90, 10, ref_array);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="Body">Following are some examples of using <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span>&#160;to get the reference numbers of vdatas in a parent vgroup:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_id = Vattach(file_id, vdata_ref, &quot;r&quot;);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Call VSgetvdatas the first time to get the number of vdatas in the</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> &#160;&#160;parent vgroup to allocate ref_array */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_vds = VSgetvdatas(vgroup_id, 0, 0, NULL);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Allocate space to retrieve reference numbers of n_vds vdatas */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ref_array = (uint16 *)HDmalloc(sizeof(uint16)*n_vds);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Get all the vdatas in the parent vgroup */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_vds = VSgetvdatas(vgroup_id, 0, n_vds, ref_array);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/* Close the vgroup */</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = Vdetach(vgroup_id);</p>
 <p class="Body">Note that, in the FORTRAN-77 version, if <span class="VarName">vd_count</span>&#160;is <span class="DefName">-1</span>&#160;then the function will return the number of user-created vdatas and disregard <span class="VarName">refarray</span>; equivalent to passing <span class="DefName">NULL</span>&#160;for <span class="VarName">refarray</span> in the C ver&#173;sion.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetvdatas</span>&#160;returns the number of user-created vdatas retrieved, if successful, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>), otherwise. &#160;The parameters of this routine are further defined in <a href="#XREF_82642_TABLE_4L">(See Table&nbsp;4K on page&nbsp;190)</a>.</p>
 <p class="Heading3">4.7.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Determining Internal Vdata: VSisinternal</p>
 <p class="Body">The HDF library commonly uses vgroups and vdatas to store metadata or data for the library's own use. &#160;For examples, vgroups are used to represent SDS or raster images, and vdatas are used to store attributes or dimensions. &#160;Typically, a user is only interested in vgroups/vdatas that were created by user applications, not by the library internally. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisinternal</span>&#160;allows an application to find out if a vdata is internally created.</p>
 <p class="Body">The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisinternal</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>is_internal = VSisinternal(vdata_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Currently unavailable</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisinternal</span>&#160;checks the class name of the given vdata against the list <span class="DefName">HDF_INTERNAL_VDS</span> to deter&#173;mine whether the vdata was previously created by the library instead of by a user application. &#160;The names in <span class="DefName">HDF_INTERNAL_VDS</span> are included:</p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">DIM_VALS (&quot;DimVal0.0&quot;)</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">DIM_VALS01 (&quot;DimVal0.1&quot;)</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">_HDF_ATTRIBUTE (&quot;Attr0.0&quot;)</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">HDF_SDSVAR (&quot;SDSVar&quot;)</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">HDF_CRDVAR (&quot;CoordVar&quot;)</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">_HDF_CHK_TBL_CLASS (&quot;_HDF_CHK_TBL_&quot;)</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">RIGATTRCLASS(&quot;RIATTR0.0C&quot;)</span></p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisinternal</span>&#160;returns <span class="DefName">TRUE</span> (<span class="DefName">1</span>) if the inquired vdata is one that was internally created by the library, <span class="DefName">FALSE</span> (<span class="DefName">0</span>) otherwise, and <span class="DefName">FAIL</span> (<span class="DefName">-1</span>) if failure occurs. &#160;The parameters of this routine are further defined in <a href="#XREF_82642_TABLE_4L">(See Table&nbsp;4K on page&nbsp;190)</a>.</p>
 <p class="Heading3">4.7.7<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Retrieving Vdatas in a File or in a Vgroup: VSofclass</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSofclass</span>&#160;retrieves reference numbers of vdatas of the specified class in a file or in a vgroup. &#160;The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSofclass</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSofclass(id, vd_class, start_vd, vd_count, refarray);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Unavailable</p>
 <p class="Body">When <span class="VarName">id</span> is a vgroup identifier, only the immediate sub-vdatas will be checked; that is, the sub-vgroups will not be traversed. &#160;The parameter <span class="VarName">vd_count</span>&#160;specifies the number of values that the <span class="VarName">refarray</span>&#160;list can hold and can be any positive number smaller than <span class="DefName">MAX_REF</span> (<span class="DefName">65535</span>). If <span class="VarName">vd_count</span>&#160;is larger than the actual number of vdatas that has the specified class, then only the actual number of such vdatas will be retrieved.</p>
 <p class="Body">The parameter <span class="VarName">start_vd</span>&#160;is the index of the vdatas having the specified class, <span class="VarName">vd_class</span>. &#160;The retrieval starts at the vdata number <span class="VarName">start_vd</span> going forward in the order which the vdatas were cre&#173;ated. &#160;The combination of <span class="VarName">start_vd</span>&#160;and <span class="VarName">vd_count</span>&#160;provide flexibility in the retrieval. &#160;For example, if there are 100 vdatas that can be retrieved, specifying <span class="VarName">start_vd</span>&#160;as 90 and <span class="VarName">vd_count</span>&#160;as 10 will retrieve the last ten such vdatas. &#160;The value for <span class="VarName">start_vd</span>&#160;must be non-negative and smaller than the number of vdatas having the specified class. &#160;This number can be obtained by invoking <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSofclass</span>&#160;passing in <span class="DefName">NULL</span>&#160;for the array <span class="VarName">refarray</span>&#160;and will also allow applications to sufficiently allocate space for <span class="VarName">refarray</span>.</p>
 <p class="Body">When <span class="VarName">start_vd</span>&#160;is 0, the retrieval will start at the beginning of the file or the first sub-vdata of the specified vgroup.</p>
 <p class="Body">When <span class="VarName">start_vd</span>&#160;is smaller than the number of vdatas having the specified class name, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSofclass</span>&#160;will start retrieving from the vdata number <span class="VarName">start_vd</span>.</p>
 <p class="Body">When <span class="VarName">start_vd</span>&#160;equals or is greater than the number of vdatas having the specified class name, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSofclass</span>&#160;will return <span class="DefName">FAIL </span>(or <span class="DefName">-1</span>).</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSofclass</span>&#160;returns the number of vdatas retrieved, if successful, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>), otherwise. &#160;The parameters of this routine are further defined in <a href="#XREF_82642_TABLE_4L">Table 4K</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4K<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_82642_TABLE_4L"></a>VSgetvdatas, VSisinternal, and VSofclass Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.33pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.646pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 54.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 113.227pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 160.457pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 62.646pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_ReturnType" style="font-weight : bold;">VSgetvdatas</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfgvdatas)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">id</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File or vgroup identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">start_vd</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uintn</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata index to start retrieving at</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vd_count</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uintn</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of vdatas to be retrieved</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">refarray</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uint16 *</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer (*)</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array to hold reference numbers of retrieved vdatas</p>
</td>
</tr>
  <tr style=" height : 29.00pt;">
  <td rowspan="4" style="width : 62.646pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_ReturnType" style="font-weight : bold;">VSisinternal</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(unavailable)</p>
</td>
  <td rowspan="4" style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td rowspan="4" style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td rowspan="4" style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td rowspan="4" style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 62.646pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_ReturnType" style="font-weight : bold;">VSofclass</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(unavailable)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">id</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">File or vgroup identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vd_class</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">const char *</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Class name of vdatas to be retrieved</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">start_vd</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uintn</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata index to start retrieving at</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vd_count</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uintn</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of vdatas to be retrieved</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">*refarray</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uint16</p>
</td>
  <td style="width : 56.614pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 160.457pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array to hold reference numbers of retrieved vdatas</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading2"><a name="IX_attributes_of_a"></a>4.8<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Vdata Attributes</p>
 <p class="Body">HDF version 4.1r1 and later include the ability to assign attributes to a vdata and/or a vdata field. The concept of attributes is fully explained in <a href="../UG_SD/UG_SD.htm#XREF_13938_Scientific_Data">Chapter 3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Scientific Data Sets (SD API)&quot;</a>. To review briefly: an attribute has a name, a data type, a number of attribute values, and the attribute values themselves. All attribute values must be of the same data type. For example, an integer cannot be added to an attribute value consisting of ten characters, or a character value cannot be included in an attribute value consisting of 2 32-bit integers.</p>
 <p class="Body">Any number of attributes can be assigned to either a vdata or any single field in a vdata. However, each attribute name should be unique within its scope. In other words, the name of a field’s attribute must be unique among all attributes that belong to that same field, and the name of a vdata’s attribute must be unique among all attributes assigned to the same vdata.</p>
 <p class="Body">The following subsections describe routines that retrieve various information about vdata and vdata field attributes. Those routines that access field attributes require the field index as a param&#173;eter (<span class="VarName">field_index</span>.)</p>
 <p class="Heading3"><a name="IX_querying_the_index_of_a"></a>4.8.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_11074_VSfindex"></a>Querying the Index of a Vdata Field Given the Field Name: VSfindex</p>
 <p class="Body"><a name="IX_description_119"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindex</span>&#160;retrieves the index of a field given its name, <span class="VarName">field_name</span>, and stores the value in the parameter <span class="VarName">field_index</span>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindex</span>&#160;is as follows: </p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSfindex(vdata_id, field_name, &amp;field_index);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsffidx(vdata_id, field_name, field_index)</p>
 <p class="Body">The parameter <span class="VarName">field_index</span>&#160;is the index number that uniquely identifies the location of the field within the vdata. Field index numbers are assigned in increasing order and are zero-based: for example, a <span class="VarName">field_index</span> value of 4 would refer to the fifth field in the vdata.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindex</span>&#160;returns <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) if successful and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindex</span>&#160;are further defined in <a href="#XREF_20394_TABLE_4J_VSfindex">Table 4L</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_65"></a><span class="StepNumber">TABLE 4L<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_20394_TABLE_4J_VSfindex"></a>VSfindex Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.47pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 52.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 110.450pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 165.571pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfindex</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsffidx)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_name</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the vdata field</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Index of the vdata field</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_setting_the_attribute_of_1"></a><a name="IX_setting_the_attribute_of"></a>4.8.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_16111_VSsetattr"></a>Setting the Attribute of a Vdata or Vdata Field: VSsetattr</p>
 <p class="Body"><a name="IX_description_120"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr</span>&#160;attaches an attribute to a vdata or a vdata field. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr</span>&#160;is as follows: </p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSsetattr(vdata_id, field_index, attr_name, data_type, n_values, values);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfsnat(vdata_id, field_index, attr_name, data_type, n_values, values)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfscat(vdata_id, field_index, attr_name, data_type, n_values, values)</p>
 <p class="Body">If the attribute has already been attached, the new attribute values will replace the current values, provided the data type and the number of attribute values (<span class="VarName">n_values</span>) have not been changed. If either of these have been changed, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr</span>&#160;will return <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Body">Set the parameter <span class="VarName">field_index</span>&#160;to <span class="DefName">_HDF_VDATA</span>&#160;(or <span class="DefName">-1</span>) to set an attribute for a vdata or to a valid field index to set attribute for a vdata field. A valid field index is a zero-based integer value represent&#173;ing the ordinal location of a field within the vdata.</p>
 <p class="Body">The parameter <span style="font-family : Courier New; font-size  : 9.0pt; letter-spacing : -0.05em; ">attr_name</span>&#160;specifies the name of the attribute to be set and can contain <span class="DefName">VSNAMELEN&#173;MAX</span>&#160;(or <span class="DefName">64</span>) characters. The parameter <span class="VarName">data_type</span>&#160;specifies the data type of the attribute values. Data types supported by HDF are listed in <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13047_TABLE_2E_Standard">Table 2F on page 14</a>. The parameter <span class="VarName">values</span>&#160;contains attribute values to be written.</p>
 <p class="Body">The FORTRAN-77 version of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr</span>&#160;has two routines: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfsnat</span>&#160;sets numeric attribute data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfscat</span> sets character attribute data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr</span>&#160;returns <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) if successful and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr</span>&#160;are described in <a href="#XREF_37692_TABLE_4K_VSsetattr">Table 4M</a>.</p>
 <p class="Heading3"><a name="IX_querying_the_values_of_a"></a>4.8.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_34277_VSgetattr"></a>Querying the Values of a Vdata or Vdata Field Attribute: VSgetattr</p>
 <p class="Body"><a name="IX_description_121"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetattr</span>&#160;returns all of the values of the specified attribute of the specified vdata field or vdata. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetattr</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSgetattr(vdata_id, field_index, attr_index, values);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfgnat(vdata_id, field_index, attr_index, values)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfgcat(vdata_id, field_index, attr_index, values)</p>
 <p class="Body">Set the parameter <span class="VarName">field_index</span>&#160;to <span class="DefName">_HDF_VDATA</span>&#160;(or <span class="DefName">-1</span>) to retrieve the values of the attribute attached to the vdata identified by the parameter <span class="VarName">vdata_id</span>. Set <span class="VarName">field_index</span>&#160;to a zero-based integer value to retrieve the values of an attribute attached to a vdata field; the value of <span class="VarName">field_index</span>&#160;will be used as the index of the vdata field. &#160;In both cases, the values returned will be those of the attribute located at the position specified by the parameter <span class="VarName">attr_index</span>, the zero-based index of the target attribute. </p>
 <p class="Body">The parameter <span class="VarName">values</span>&#160;must be sufficiently allocated to hold the retrieved attribute values. Use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattrinfo</span> to obtain information about the attribute values for appropriate memory allocation.</p>
 <p class="Body">The FORTRAN-77 versions of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetattr</span>&#160;has two routines: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfgnat</span>&#160;gets numeric attribute data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">vsfgcat</span> gets character attribute data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetattr</span>&#160;returns <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) if successful and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetattr</span>&#160;are described in <a href="#XREF_37692_TABLE_4K_VSsetattr">Table 4M</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_67"></a><a name="IX_parameter_list_66"></a><span class="StepNumber">TABLE 4M<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_37692_TABLE_4K_VSsetattr"></a>VSsetattr and VSgetattr Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.47pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name </p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 52.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 139.700pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 136.321pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsetattr</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfsnat/vsfscat)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription"><span class="FM_DefName7" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 7.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.08em; ">_HDF_VDATA</span> or index of the field</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_name</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_values</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of values the attribute contains</p>
</td>
</tr>
  <tr style=" height : 31.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">values</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing the attribute values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetattr</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfgnat/vsfgcat)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription"><span class="FM_DefName7" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 7.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.08em; ">_HDF_VDATA</span> or index of the field</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_index</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Index of the attribute</p>
</td>
</tr>
  <tr style=" height : 31.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">values</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 89.475pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 136.321pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing attribute values</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_querying_the_total"></a>4.8.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_41541_4_8_4_Querying_the"></a>Querying the Total Number of Vdata and Vdata Field Attributes: VSnattrs</p>
 <p class="Body"><a name="IX_description_122"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSnattrs</span>&#160;returns the total number of attributes of the specified vdata <span style="font-style : italic; ">and </span>the fields contained in the vdata. This is different from the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfnattrs</span>&#160;routine, which returns the number of attributes of the specified vdata <span style="font-style : italic; ">or</span>&#160;a specified field contained in the specified vdata. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSnattrs</span>&#160;is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_attrs = VSnattrs(vdata_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_attrs = vsfnats(vdata_id)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSnattrs</span> returns the total number of attributes assigned to the vdata and its fields when success&#173;ful, and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSnattrs</span>&#160;are described in <a href="#XREF_18705_TABLE_4L_VSnattrs">Table 4N</a>.</p>
 <p class="Heading3"><a name="IX_querying_the_number_of_1"></a><a name="IX_querying_the_number_of"></a>4.8.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_16050_4_8_5_Querying_the"></a>Querying the Number of Attributes of a Vdata or a Vdata Field: VSfnattrs</p>
 <p class="Body"><a name="IX_description_123"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfnattrs</span>&#160;returns the number of attributes attached to the vdata field specified by the parameter <span class="VarName">field_index</span>&#160;<span style="font-style : italic; ">or </span>the number of attributes attached to the vdata identified by <span class="VarName">vdata_id</span>. This is differ&#173;ent from the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSnattrs</span>, which returns the total number of attributes of the specified vdata <span style="font-style : italic; ">and </span>the fields contained in it. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfnattrs</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_attrs = VSfnattrs(vdata_id, field_index);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_attrs = vsffnas(vdata_id, field_index)</p>
 <p class="Body">If <span class="VarName">field_index</span>&#160;is set to a zero-based integer value, it will be used as the index of the vdata field, and the number of attributes attached to that field will be returned. If <span class="VarName">field_index</span>&#160;is set to <span class="DefName">_HDF_VDATA</span>&#160;(or <span class="DefName">-1</span>), the number of attributes attached to the vdata specified by <span class="VarName">vdata_id </span>will be returned.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfnattrs</span>&#160;returns the number of attributes assigned to the specified vdata or to the specified vdata field when successful, and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfnattrs</span>&#160;are described in <a href="#XREF_18705_TABLE_4L_VSnattrs">Table 4N</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_69"></a><a name="IX_parameter_list_68"></a><span class="StepNumber">TABLE 4N<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_18705_TABLE_4L_VSnattrs"></a>VSnattrs and VSfnattrs Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.47pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 52.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 110.450pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 165.571pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSnattrs</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfnats)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfnattrs</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsffnas)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 50.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 60.225pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 165.571pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription"><span class="FM_DefName7" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 7.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.08em; ">_HDF_VDATA</span> or index of the field</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_retrieving_the_index_of"></a>4.8.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_39833_4_8_6_Retrieving"></a>Retrieving the Index of a Vdata or Vdata Field Attribute Given the Attribute Name: VSfindattr</p>
 <p class="Body"><a name="IX_description_124"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindattr</span>&#160;returns the index of an attribute with the specified name. The attribute must be attached to either a vdata or one of its fields. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindattrs</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>attr_index = VSfindattr(vdata_id, field_index, attr_name);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>attr_index = vsffdat(vdata_id, field_index, attr_name)</p>
 <p class="Body">If <span class="VarName">field_index</span>&#160;is set to <span class="DefName">_HDF_VDATA</span>&#160;(or <span class="DefName">-1</span>), the index of the attribute identified by the parameter <span class="VarName">attr_name</span>&#160;and attached to the vdata specified by <span class="VarName">vdata_id </span>will be returned.</p>
 <p class="Body">If the parameter <span class="VarName">field_index</span>&#160;is set to a zero-based integer value, the value will be used as the index of the vdata field. Then, the index of the attribute named by the parameter <span class="VarName">attr_name</span>&#160;and attached to the field specified by the parameter <span class="VarName">field_index</span> will be returned.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindattr</span>&#160;returns an attribute index if successful, and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfindattr</span>&#160;are described in <a href="#XREF_25831_TABLE_4M">Table 4O on page 194</a>.</p>
 <p class="Heading3"><a name="IX_querying_information_on"></a>4.8.7<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_26875_4_8_7_Querying"></a>Querying Information on a Vdata or Vdata Field Attribute: VSattrinfo</p>
 <p class="Body"><a name="IX_description_125"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattrinfo</span> returns the name, data type, number of values, and the size of the values of the speci&#173;fied attribute of the specified vdata field or vdata. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattrinfo</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSattrinfo(vdata_id, field_index, attr_index, attr_name, &amp;data_type, &amp;n_values, &amp;size);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfainf(vdata_id, field_index, attr_index, attr_name, data_type, n_values, size)</p>
 <p class="Body">In C, the parameters <span class="VarName">attr_name</span>, <span class="VarName">data_type</span>, <span class="VarName">n_values</span>, and <span class="VarName">size</span>&#160;can be set to <span class="DefName">NULL</span>, if the informa&#173;tion returned by these parameters are not needed.</p>
 <p class="Body">The parameter <span class="VarName">field_index</span>&#160;is the same as the parameter <span class="VarName">field_index</span>&#160;in <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr</span>; it can be set either to a nonnegative integer to specify the field or to <span class="DefName">_HDF_VDATA</span>&#160;(or <span class="DefName">-1</span>) to specify the vdata referred to by <span class="VarName">vdata_id</span>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattrinfo</span>&#160;returns <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) if successful and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattrinfo</span>&#160;are described in <a href="#XREF_25831_TABLE_4M">Table 4O</a>.</p>
 <p class="Heading3"><a name="IX_determining_if_the_given"></a>4.8.8<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_11493_VSisattr"></a>Determining whether a Vdata Is an Attribute: VSisattr</p>
 <p class="Body"><a name="IX_description_126"></a>The HDF library stores vdata attributes and vdata field attributes as vdatas. HDF therefore pro&#173;vides the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisattr</span>&#160;to determine whether a particular vdata contains attribute data. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisattr</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSisattr(vdata_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfisat(vdata_id)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisattr</span>&#160;returns <span class="DefName">TRUE</span>&#160;(or <span class="DefName">1</span>) if the vdata contains an attribute data and <span class="DefName">FALSE</span>&#160;(or <span class="DefName">0</span>) otherwise. The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSisattr</span>&#160;are described in <a href="#XREF_25831_TABLE_4M">Table 4O</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_72"></a><a name="IX_parameter_list_71"></a><a name="IX_parameter_list_70"></a><span class="StepNumber">TABLE 4O<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_25831_TABLE_4M"></a>VSfindattr, VSattrinfo, and VSisattr Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 62.047pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 52.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 123.225pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 153.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSfindattr</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsffdat)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription"><span class="FM_DefName7" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 7.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.08em; ">_HDF_VDATA</span> or index of the field</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_name</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="7" style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSattrinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfainf)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Index of the field</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_index</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Index of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_name</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returned name of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returned data type of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_values</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of values of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">size</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size, in bytes, of the values of the attribute</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 62.047pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSisattr</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfisat)</p>
</td>
  <td style="width : 52.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 56.034pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 67.191pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 8.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Operations on Field and Vdata Attributes</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetattr/vsfscat/vsfsnat</span>&#160;to attach an attribute to a vdata and to a field in a vdata, the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSattrinfo/vsfainf</span>&#160;to get information about a field attribute and a vdata attribute, and the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetattr/vsfgcat/vsfgnat</span>&#160;to get the values of an attribute of a vdata and the values of an attribute of a field in a vdata. &#160;The example also shows the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSfnattrs/vsffnas</span>&#160;to obtain the number of attributes attached to a field of a vdata and the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSnattrs/vsfnats</span>&#160;to obtain the total number of attributes attached to both a vdata and its fields. </p>
 <p class="Body">In this example, the program finds the vdata, named &quot;Solid Particle&quot;, in the HDF file &quot;General_Vdatas.hdf&quot; produced by Example 3. &#160;It then obtains the index of the field, named &quot;Mass&quot;, in the vdata. &#160;An attribute named &quot;Site Ident&quot; is attached to the vdata to contain the iden&#173;tification of the experiment sites. &#160;Another attribute named &quot;Scales&quot; is attached to the field for its scale values. &#160;The vdata attribute has 3 character values and the field attribute has 4 integer values.</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;General_Vdatas.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VDATA_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Solid Particle&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FIELD_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Mass&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VATTR_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Site Ident&quot; &#160;&#160;&#160;&#160;&#160;/* name of the vdata attribute &#160;*/</p>
 <p class="FM_ExampleCode">#define &#160;FATTR_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;Scales&quot; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* name of the field attribute &#160;*/</p>
 <p class="FM_ExampleCode">#define &#160;VATTR_N_VALUES &#160;&#160;3 &#160;&#160;&#160;&#160;&#160;/* number of values in the vdata attribute */</p>
 <p class="FM_ExampleCode">#define &#160;FATTR_N_VALUES &#160;&#160;4 &#160;&#160;&#160;&#160;&#160;/* number of values in the field attribute */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( )</p>
 <p class="FM_ExampleCode">{ &#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, vdata_ref, vdata_id,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;field_index, &#160;&#160;/* index of a field within the vdata */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_vdattrs, &#160;&#160;&#160;&#160;/* number of vdata attributes */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_fldattrs, &#160;&#160;&#160;/* number of field attributes */</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_type, &#160;&#160;&#160;/* to hold the type of vdata’s attribute */ </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_n_values,/* to hold the number of vdata’s attribute values &#160;&#160;*/ </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_size, &#160;&#160;&#160;/* to hold the size of vdata’s attribute values &#160;&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;field_type, &#160;&#160;&#160;/* to hold the type of field’s attribute &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;field_n_values,/* to hold the number of field’s attribute values &#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;field_size; &#160;&#160;&#160;/* to hold the size of field’s attribute values &#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;vd_attr[VATTR_N_VALUES] = {’A’, ’B’, ’C’};/* vdata attribute values*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 fld_attr[FATTR_N_VALUES] = {2, 4, 6, 8}; &#160;/* field attribute values*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;vattr_buf[VATTR_N_VALUES]; &#160;&#160;&#160;&#160;/* to hold vdata attribute’s values */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 fattr_buf[FATTR_N_VALUES]; &#160;&#160;&#160;&#160;/* to hold field attribute’s values */</p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;vattr_name[30], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* name of vdata attribute */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fattr_name[30]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* name of field attribute */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the HDF file for writing.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_WRITE, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Initialize the VS interface. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the reference number of the vdata named VDATA_NAME.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_ref = VSfind (file_id, VDATA_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Attach to the vdata for writing. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_id = VSattach (file_id, vdata_ref, &quot;w&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Attach an attribute to the vdata, i.e., indicated by the second parameter.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSsetattr (vdata_id, _HDF_VDATA, VATTR_NAME, DFNT_CHAR,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VATTR_N_VALUES, vd_attr);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the index of the field FIELD_NAME within the vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSfindex (vdata_id, FIELD_NAME, &amp;field_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Attach an attribute to the field field_index.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_n = VSsetattr (vdata_id, field_index, FATTR_NAME, DFNT_INT32, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FATTR_N_VALUES, fld_attr);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Get the number of attributes attached to the vdata’s first </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* field - should be 0. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;n_fldattrs = VSfnattrs (vdata_id, 0);</p>
 <p class="FM_ExampleCode">   printf ( &quot;Number of attributes of the first field of the vdata: %d\n&quot;, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_fldattrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Get the number of attributes attached to the field specified by </p>
 <p class="FM_ExampleCode"> &#160;&#160;* field_index - should be 1.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;n_fldattrs = VSfnattrs (vdata_id, field_index);</p>
 <p class="FM_ExampleCode">   printf ( &quot;Number of attributes of field %s: %d\n&quot;, FIELD_NAME, n_fldattrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Get the total number of the field’s and vdata’s attributes - should be 2. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;n_vdattrs = VSnattrs (vdata_id);</p>
 <p class="FM_ExampleCode">   printf ( &quot;Number of attributes of the vdata and its fields: %d\n&quot;, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_vdattrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get information about the vdata’s first attribute, indicated</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* by the third parameter which is the index of the attribute. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_n = VSattrinfo (vdata_id, _HDF_VDATA, 0, vattr_name, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;vdata_type, &amp;vdata_n_values, &amp;vdata_size);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Get information about the first attribute of the field specified by </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* field_index. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_n = VSattrinfo (vdata_id, field_index, 0, fattr_name, &amp;field_type, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;field_n_values, &amp;field_size);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Get the vdata’s first attribute. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSgetattr (vdata_id, _HDF_VDATA, 0, vattr_buf);</p>
 <p class="FM_ExampleCode">   printf(&quot;Values of the vdata attribute = %c %c %c\n&quot;, vattr_buf[0],</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vattr_buf[1], vattr_buf[2]);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the first attribute of the field specified by field_index.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = VSgetattr (vdata_id, field_index, 0, fattr_buf);</p>
 <p class="FM_ExampleCode">   printf(&quot;Values of the field attribute = %d %d %d %d\n&quot;, fattr_buf[0], </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fattr_buf[1], fattr_buf[2], fattr_buf[3]);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the vdata and to the VS interface, then close </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* the HDF file. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n &#160;= Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;program vdata_attributes </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*14 VDATA_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*4 &#160;FIELD_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*10 VATTR_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*6 &#160;FATTR_NAME</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;VATTR_N_VALUES, FATTR_N_VALUES </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;= ’General_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VDATA_NAME &#160;&#160;= ’Solid Particle’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD_NAME &#160;&#160;= ’Mass’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VATTR_NAME &#160;&#160;= ’Site Ident’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FATTR_NAME &#160;&#160;= ’Scales’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (VATTR_N_VALUES = 3,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FATTR_N_VALUES = 4)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_WRITE, FULL_INTERLACE, HDF_VDATA</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFNT_INT32, DFNT_CHAR8</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_WRITE &#160;&#160;&#160;= &#160;2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE = &#160;0,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;HDF_VDATA &#160;&#160;&#160;&#160;&#160;= -1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 &#160;&#160;&#160;&#160;= 24,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_CHAR8 &#160;&#160;&#160;&#160;= &#160;4)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer vfstart, vsffnd, vsfatch, vsfscat, vsfsnat, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;vsffnas, vsffidx, vsfnats, vsfainf, vsfgcat, vsfgnat,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;file_id, vdata_id, vdata_ref</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;field_index, n_vdattrs, n_fldattrs</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;vdata_type, vdata_n_values, vdata_size</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;field_type, field_n_values, field_size </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character vd_attr(VATTR_N_VALUES)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;fld_attr(FATTR_N_VALUES)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character vattr_buf(VATTR_N_VALUES)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;fattr_buf(FATTR_N_VALUES)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character vattr_name_out(30), fattr_name_out(30)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data vd_attr /’A’, ’B’, ’C’/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data fld_attr /2, 4, 6, 8/</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for writing.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_WRITE, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the reference number of the vdata named VDATA_NAME.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = vsffnd(file_id, VDATA_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Attach to the vdata for writing. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file_id, vdata_ref, ’w’) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Attach an attribute to the vdata, as it is indicated by second parameter.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfscat(vdata_id, HDF_VDATA, VATTR_NAME, DFNT_CHAR8,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VATTR_N_VALUES, vd_attr)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the index of the field FIELD_NAME within the vdata.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsffidx(vdata_id, FIELD_NAME, field_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Attach an attribute to the field with the index field_index.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfsnat(vdata_id, field_index, FATTR_NAME, DFNT_INT32,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FATTR_N_VALUES, fld_attr)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the number of attributes attached to the vdata’s first</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;field - should be 0.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_fldattrs = vsffnas(vdata_id, 0)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Number of attributes of the first field’ </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’ of the vdata: ’, n_fldattrs</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the number of the attributes attached to the field specified by</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;index field_index - should be 1.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_fldattrs = vsffnas(vdata_id, field_index)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Number of attributes of field ’, FIELD_NAME,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_fldattrs</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the total number of the field’s and vdata’s attributes - should be 2.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_vdattrs = vsfnats(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Number of attributes of the vdata and its fields: ’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_vdattrs</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get information about the vdata’s first attribute, indicated by </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;the third parameter, which is the index of the attribute.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfainf(vdata_id, HDF_VDATA, 0, vattr_name_out,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_type, vdata_n_values, vdata_size)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get information about the first attribute of the field specified by</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;field_index.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vsfainf(vdata_id, field_index, 0, fattr_name_out, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;field_type, field_n_values, field_size)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the vdata’s first attribute.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfgcat(vdata_id, HDF_VDATA, 0, vattr_buf)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Values of vdata attribute &#160;’, vattr_buf</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the first attribute of the field specified by field_index.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfgnat(vdata_id, field_index, 0, fattr_buf)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) &#160;’Values of the field attribute = ’, fattr_buf</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vdata and to the VS interface, and</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading2"><a name="IX_obtaining_information_7"></a>4.9<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_10689_4_9_Obtaining"></a>Obtaining Information about a Specific Vdata</p>
 <p class="Body">Once a vdata has been located, its contents must be obtained. In this section four categories of routines that obtain vdata information are described:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>A general inquiry routine named <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire</span>.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>A set of <span class="Definition">vdata query</span> routines with names prefaced by “VSQuery”.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>A set of <span class="Definition">vdata inquiry</span><span style="font-weight : bold; ">&#160;</span>routines prefaced by “VS”. Some of these routines retrieve specific vdata information which can also be retrieved by the general inquiry routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire</span>.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>A set of <span class="Definition">field query</span> routines with names prefaced by “VF”.</p>
 <p class="Heading3">4.9.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_35960_VSinquire"></a>Obtaining Vdata Information: VSinquire</p>
 <p class="Body"><a name="IX_description_127"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire</span>&#160;retrieves information about the vdata identified by the parameter <span class="VarName">vdata_id</span>. The routine has the following syntax:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSinquire(vdata_id, &amp;n_records, &amp;interlace_mode, fieldname_list, &amp;vdata_size, vdata_name);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfinq(vdata_id, n_records, interlace_mode, fieldname_list, vdata_size, vdata_name)</p>
 <p class="Body">The parameter <span class="VarName">n_records</span>&#160;contains the returned number of records in the vdata, the parameter <span class="VarName">interlace_mode</span>&#160;contains the returned interlace mode of the vdata contents, the parameter <span class="VarName">fieldname_list</span>&#160;is a comma-separated list of the returned names of all the fields in the vdata, the parameter <span class="VarName">vdata_size</span>&#160;is the returned size, in bytes, of the vdata record, and the parameter <span class="VarName">vdata_name</span> contains the returned name of the vdata.</p>
 <p class="Body">If any of the parameters are set to <span class="DefName">NULL</span>&#160;in C, the corresponding data will not be returned. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSin&#173;quire</span>&#160;will return <span class="DefName">FAIL</span>&#160;if it is called before <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSdefine</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsetfield</span> on the same vdata.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire</span>&#160;returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire</span>&#160;are further defined in <a href="#XREF_27523_TABLE_4N_VSinquire">Table 4P</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_73"></a><span class="StepNumber">TABLE 4P<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_27523_TABLE_4N_VSinquire"></a>VSinquire Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 63.172pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 57.500pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 124.200pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 145.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 63.172pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSinquire</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfinq)</p>
</td>
  <td style="width : 57.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 145.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 57.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_records</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 145.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of records in the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 57.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">interlace_mode</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 145.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Interlace mode</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 57.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname_list</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 145.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the list of field names</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 57.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_size</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 145.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size in bytes of the vdata record</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 57.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_name</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 62.100pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 145.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the vdata</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 9.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Obtaining Vdata Information</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid/vsfgid</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire/vsfinq</span>&#160;to obtain information about all vdatas in an HDF file. </p>
 <p class="Body">In this example, the program uses <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetid</span>&#160;to locate all vdatas in the HDF file &quot;General_Vdatas.hdf&quot;, which is the output of Example 3. &#160;For each vdata found, if it is not the storage of an attribute, the program uses <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire/vsfinq</span>&#160;to obtain information about the vdata and displays its information. &#160;Recall that an attribute is also stored as a vdata; the function <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSi&#173;sattr/vsfisat</span>&#160;checks whether a vdata is a storage of an attribute. </p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&quot;General_Vdatas.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FIELD_SIZE &#160;&#160;&#160;&#160;80 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* maximum length of all the field names */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( )</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_records, &#160;&#160;&#160;&#160;/* to retrieve the number of records in the vdata &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;interlace_mode,/* to retrieve the interlace mode of the vdata &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_size, &#160;&#160;&#160;/* to retrieve the size of all specified fields &#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, vdata_ref, vdata_id;</p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;fieldname_list[FIELD_SIZE], /* buffer to retrieve the vdata data &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vdata_name[VSNAMELENMAX]; &#160;&#160;/* buffer to retrieve the vdata name &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Open the HDF file for reading. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_READ, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Initialize the VS interface. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set vdata_ref to -1 to start the search from the beginning of file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vdata_ref = -1;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Use VSgetid to obtain each vdata by its reference number then attach </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* to the vdata and get its information. &#160;The loop terminates when </p>
 <p class="FM_ExampleCode"> &#160;&#160;* the last vdata is reached.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;while ((vdata_ref = VSgetid (file_id, vdata_ref)) != FAIL)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Attach to the current vdata for reading.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_id = VSattach (file_id, vdata_ref, &quot;r&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Test whether the current vdata is not a storage of an attribute, then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* obtain and display its information.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if( VSisattr (vdata_id) != TRUE )</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status_n = VSinquire (vdata_id, &amp;n_records, &amp;interlace_mode, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fieldname_list, &amp;vdata_size, vdata_name);</p>
 <p class="FM_ExampleCode">         printf (&quot;Vdata %s: - contains %d records\n\tInterlace mode: %s \</p>
 <p class="FM_ExampleCode">                 \n\tFields: %s - %d bytes\n\t\n&quot;, vdata_name, n_records,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;interlace_mode == FULL_INTERLACE ? &quot;FULL&quot; : &quot;NONE&quot;, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fieldname_list, vdata_size );</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Detach from the current vdata.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status_32 = VSdetach (vdata_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;} /* while */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the VS interface and close the HDF file. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vend (file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;program vdata_info </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*18 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_READ, FULL_INTERLACE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;FIELD_SIZE</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;= ’General_Vdatas.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFACC_READ &#160;&#160;&#160;&#160;= 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FULL_INTERLACE = 0,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FIELD_SIZE &#160;&#160;&#160;&#160;= 80)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vfstart, vsfatch, vsfgid, vsfinq,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;vsfisat, vsfdtch, vfend </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;file_id, vdata_id, vdata_ref</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;n_records, interlace_mode, vdata_size</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*64 vdata_name</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;character*80 fieldname_list </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for reading.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_READ, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the VS interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = vfstart(file_id) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set the reference number to -1 to start the search from the beginning</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;of the file. </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = -1</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Use vsfgid to obtain each vdata by its reference number then</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;attach to the vdata and get information. The loop terminates</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;when the last vdata is reached.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_ref = vsfgid(file_id, vdata_ref)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (vdata_ref .eq. -1) goto 100</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Attach to the current vdata for reading.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vdata_id = vsfatch(file_id, vdata_ref, ’r’)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Test whether the current vdata is not a storage for an attribute,</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;then obtain and display its information.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (vsfisat(vdata_id) .ne. 1) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = vsfinq(vdata_id, n_records, interlace_mode,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fieldname_list, vdata_size, vdata_name)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Vdata: ’, vdata_name</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’contains ’, n_records, ’ records’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (interlace_mode .eq. 0) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Interlace mode: FULL’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Interlace mode: NONE’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Fields: ’, fieldname_list(1:30)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Vdata record size in bytes :’, vdata_size</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Detach from the current vdata.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;goto 10 </p>
 <p class="FM_ExampleCode">100 &#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vdata and to the VS interface, and</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vsfdtch(vdata_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode"><a name="IX_obtaining_information_8"></a>&nbsp;</p>
 <p class="Heading3">4.9.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Obtaining Linked Block Information: VSgetblockinfo</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetblockinfo</span>&#160;retrieves the block size and number of blocks employed in a linked block vdata data element. The parameter <span class="VarName">vdata_id</span>&#160;identifies the vdata. The size of blocks, in bytes, is returned in <span class="VarName">block_size</span>&#160;and the number of blocks in <span class="VarName">num_blocks</span>.</p>
 <p class="Body">If either the block size or the number of blocks used in a particular vdata is likely to differ from the default setting, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetblockinfo </span>must be called before any data is read from a vdata.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetblockinfo </span>returns <span class="DefName">SUCCESS</span>&#160;(or <span class="DefName">0</span>) upon successful completion or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further defined in <a href="#XREF_57772_TABLE_4P">Table 4Q</a>.</p>
 <p class="Heading3">4.9.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Obtaining Linked Block Information: VSgetblockinfo</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;retrieves external file and data information of a vdata, when the vdata has external element. &#160;The information includes the external file’s name, the position, where the data had been written in the external file, and the length of that external data. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;will return <span class="DefName">0</span> if the vdata does not have external element.</p>
 <p class="Body">The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSgetexternalinfo(vdata_id, buf_size, filename, &amp;offset, &amp;length);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Currently unavailable</p>
 <p class="Body"><a name="IX_description_128"></a>The application must provide sufficient buffer for the external file name. &#160;When the external file name is available and <span class="VarName">buf_size</span>&#160;is 0, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;simply returns the length of the external file name. &#160;Thus, application can call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;passing in 0 for <span class="VarName">buf_size</span> first, then allo&#173;cate the buffer sufficiently before calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;again passing in the proper length for <span class="VarName">buf_size</span>&#160;and appropriately allocated buffer <span class="VarName">filename</span>. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;stores the external file name in <span class="VarName">filename</span>&#160;up to the name’s length or the value in <span class="VarName">buf_size</span>, whichever smaller.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;stores in the parameter <span class="VarName">offset</span>&#160;the number of bytes from the beginning of the external file to the location where the first byte of data had been written and in the parameter <span class="VarName">length</span> the length of the data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span><span style="font-weight : bold; ">&#160;</span>returns one of the following values:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>the actual length of the external file name or the length of the retrieved file name, if there is external element</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="DefName">0</span>, if there is no external element</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>), if failure occurs</p>
 <p class="Body">The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetexternalinfo</span>&#160;are described in <a href="#XREF_57772_TABLE_4P">Table 4Q</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4Q<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_57772_TABLE_4P"></a>VSgetblockinfo Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 75.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 138.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 126.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 75.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetblockinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsfgetblinfo)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">block_size</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size of each block, in bytes</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">num_blocks</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of linked blocks</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 75.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetexternalinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(unavailable)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">buf_size</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size of external file name’s buffer</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">filename</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">External file name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Offset of external data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">length</p>
</td>
  <td style="width : 48.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Length of external data</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure">&#160;</p>
 <p class="Heading3"><a name="IX_VSQuery_vdata"></a>4.9.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_41557_4_9_2_VSQuery"></a>VSQuery Vdata Information Retrieval Routines</p>
 <p class="Body">The syntax of the VSQuery routines are as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSQueryname(vdata_id, vdata_name);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSQueryfields(vdata_id, fields);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSQueryinterlace(vdata_id, &amp;interlace_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSQuerycount(vdata_id, &amp;n_records);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_tag = VSQuerytag(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = VSQueryref(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSQueryvsize(vdata_id, &amp;vdata_vsize);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsqfname(vdata_id, vdata_name)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsqfflds(vdata_id, fields)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsqfintr(vdata_id, interlace_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsqfnelt(vdata_id, n_records)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_tag = vsqtag(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>vdata_ref = vsqref(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsqfvsiz(vdata_id, vdata_vsize)</p>
 <p class="Body">All VSQuery routines except <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQuerytag</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQueryref</span> have two arguments. The first argu&#173;ment identifies the vdata to be queried. The second argument is the type of vdata information being requested.</p>
 <p class="Bullet2"><a name="IX_description_129"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQueryname</span> retrieves the name of the specified vdata.</p>
 <p class="Bullet2"><a name="IX_description_130"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQueryfields</span> retrieves the names of the fields in the specified vdata.</p>
 <p class="Bullet2"><a name="IX_description_131"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQueryinterlace</span> retrieves the interlace mode of the specified vdata.</p>
 <p class="Bullet2"><a name="IX_description_132"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQuerycount</span> retrieves the number of records in the specified vdata.</p>
 <p class="Bullet2"><a name="IX_description_133"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQuerytag</span> returns the tag of the specified vdata.</p>
 <p class="Bullet2"><a name="IX_description_134"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQueryref</span> returns the reference number of the specified vdata.</p>
 <p class="Bullet2"><a name="IX_description_135"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQueryvsize</span> retrieves the size, in bytes, of a record in the specified vdata.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQuerytag</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSQueryref</span>&#160;return the tag and reference number, respectively, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). All other routines return <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for these routines are listed in <a href="#XREF_39289_TABLE_4O_VSQuery"><span class="FM_Synopsis3" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Table 4R</span></a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4R<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_39289_TABLE_4O_VSQuery"></a>VSQuery Routines Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 63.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 117.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 144.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction"><a name="IX_parameter_list_74"></a>VSQueryname</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsqfname)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_name</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction"><a name="IX_parameter_list_75"></a>VSQueryfields</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsqfflds)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fields</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Comma-separated list of the field names in the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction"><a name="IX_parameter_list_76"></a>VSQueryinterlace</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsqfintr)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">interlace_mode</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Interlace mode</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction"><a name="IX_parameter_list_77"></a>VSQuerycount</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsqfnelt)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_records</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of records in the vdata</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction"><a name="IX_parameter_list_78"></a>VSQueryvsize</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(vsqfvsiz)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_size</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size in bytes of the vdata record</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction"><a name="IX_parameter_list_79"></a>VSQuerytag</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsqtag)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction"><a name="IX_parameter_list_80"></a>VSQueryref</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsqref)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 53.570pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.430pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_VS_vdata_information"></a>4.9.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_13523_4_9_3_Other_Vdata"></a>Other Vdata Information Retrieval Routines</p>
 <p class="Body">The routines described in this section, with names prefaced by “VS”, are used to obtain specific types of vdata information. The syntax of these routines are as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_records = VSelts(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_fields = VSgetfields(vdata_id, fieldname_list);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>interlace_mode = VSgetinterlace(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>size_of_fields = VSsizeof(vdata_id, fieldname_list);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSgetname(vdata_id, vdata_name);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = VSgetclass(vdata_id, vdata_class);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_records = vsfelts(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_fields = vsfgfld(vdata_id, fieldname_list)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>interlace_mode = vsfgint(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>size_of_fields = vsfsiz(vdata_id, fieldname_list)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfgnam(vdata_id, vdata_name)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = vsfcls(vdata_id, vdata_class)</p>
 <p class="Body">With the exception of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetclass</span>, the information obtained through these routines can also be obtained through <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSinquire</span> provides a way to query commonly used vdata informa&#173;tion with one routine call. The VS routines in this section are useful in situations where the HDF programmer wishes to obtain only specific information. </p>
 <p class="Bullet2"><a name="IX_description_136"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSelts</span>&#160;returns the number of records in the specified vdata or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Bullet2"><a name="IX_description_137"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetfields</span> retrieves the names of all the fields in the specified vdata and returns the num&#173;ber of retrieved fields or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Bullet2"><a name="IX_description_138"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetinterlace</span>&#160;returns the interlace mode of the specified vdata or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Bullet2"><a name="IX_description_139"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSsizeof</span>&#160;returns the size, in bytes, of the specified fields or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Bullet2"><a name="IX_description_140"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetname</span>&#160;retrieves the name of the specified vdata and returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Bullet2"><a name="IX_description_141"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VSgetclass</span>&#160;retrieves the class of the specified vdata and returns either <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Body">The parameters for these routines are described in <a href="#XREF_30864_TABLE_4P_VSelts">Table 4S</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_86"></a><a name="IX_parameter_list_85"></a><a name="IX_parameter_list_84"></a><a name="IX_parameter_list_83"></a><a name="IX_parameter_list_82"></a><a name="IX_parameter_list_81"></a><span class="StepNumber">TABLE 4S<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_30864_TABLE_4P_VSelts"></a>VSelts, VSgetfields, VSgetinterlace, VSsizeof,&#160;VSgetname, and VSgetclass Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 63.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 117.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 144.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN -77</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSelts</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfelts)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetfields</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfgfld)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname_list</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">List of field names to be queried</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetinterlace</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfgint)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSsizeof</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfsiz)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fieldname_list</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">List of field names to be queried</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetname</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfgnam)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_name</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VSgetclass</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vsfcls)</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_class</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Class name of the vdata to be queried</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_VF_field_information"></a>4.9.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_24471_4_9_4_VF_Field"></a>VF Field Information Retrieval Routines</p>
 <p class="Body">Routines whose names are prefaced by “VF” are used for obtaining information about specific fields in a vdata. The syntax of these routines are as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_name = VFfieldname(vdata_id, field_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_file_size = VFfieldesize(vdata_id, field_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_mem_size = VFfieldisize(vdata_id, field_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_fields = VFnfields(vdata_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_order = VFfieldorder(vdata_id, field_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_type = VFfieldtype(vdata_id, field_index);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_name = vffname(vdata_id, field_index, field_name)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_file_size = vffesiz(vdata_id, field_index)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_mem_size = vffisiz(vdata_id, field_index)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_of_fields = vfnflds(vdata_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_order = vffordr(vdata_id, field_index)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>field_type = vfftype(vdata_id, field_index)</p>
 <p class="Body">The functionality of each of the VF routines is as follows: </p>
 <p class="Bullet2"><a name="IX_description_142"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VFfieldname</span> returns the name of the specified field.</p>
 <p class="Bullet2"><a name="IX_description_143"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VFfieldesize</span>&#160;returns the size of the specified field as stored in the HDF file. This is the size of the field as tracked by the HDF library.</p>
 <p class="Bullet2"><a name="IX_description_144"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VFfieldisize</span>&#160;returns the size of the specified field as stored in memory. This is the native machine size of the field.</p>
 <p class="Bullet2"><a name="IX_description_145"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VFnfields</span> returns the number of fields in the specified vdata.</p>
 <p class="Bullet2"><a name="IX_description_146"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VFfieldorder</span> returns the order of the specified field.</p>
 <p class="Bullet2"><a name="IX_description_147"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">VFfieldtype</span> returns the data type of the specified field.</p>
 <p class="Body"><a name="IX_Vdata"></a>If the operations are unsuccessful, these routines return <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for all of these routines are described in <a href="#XREF_18897_TABLE_4Q_VF">Table 4T</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 4T<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_18897_TABLE_4Q_VF"></a>VF Routines Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 72.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 111.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 141.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldname</p>
  <p class="CellFunction">[char *]</p>
  <p class="CellFunction">(vffname)</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Field index</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_name</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&nbsp;</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Field name (FORTRAN-77 only)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldesize</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vffesiz)</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Field index</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldisize</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vffisiz)</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Field index</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFnfields</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vfnflds)</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldorder</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vffordr)</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Field index</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">VFfieldtype</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(vfftype)</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">vdata_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Vdata identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">field_index</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 141.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Field index</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body">&nbsp;</p>
</div>
				
				<div class="content_top_link">
					<a>&#160;</a> 
				</div>
				<div class="mobile_browseholder">
					<div class="brsBack">
						<a id="browseSeqBack1" class="wBSBackButton" href="../UG_SD/UG_SD.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButtonMobile" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonMobileHover" border="0" style="width:100%; max-width:56px" /></a> 
						 
					</div>
					<div class="brsNext">
						<a id="browseSeqNext1" class="wBSNextButton" href="../UG_Vgroups/UG_Vgroups.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButtonMobile" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonMobileHover" border="0" style="width:100%; max-width:48px" /></a> 
						 
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="buttonbar">
		<div class="buttonbarholder topic_page_holder">
			<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" 
				 title="Table of Contents">
				<a href="../../table_of_contents.htm">&#160;</a> 
			</div>
			<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" 
				 title="Index">
				<a href="../../index1.htm">&#160;</a> 
			</div>
			<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
				 title="Glossary">
				<a href="../../glossary.htm">&#160;</a> 
			</div>
			<div class="bar_search topic_page">
				<a href="../../searchresults.htm" title="Search">&#160;</a> 
			</div>
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
