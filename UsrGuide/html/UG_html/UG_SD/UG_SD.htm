
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\hdf\H4\releases\4.2.12\Doc\hdf4doc\UsrGuide\src\UG_SD.fm" />
 <meta name="Originator" content="ImportMif" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF User’s Guide - 4.2.12</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="UG_SD.css" type="text/css" />
 <link rel="StyleSheet" href="../../Responsive_HTML5_stylesheet.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHoverSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "3.0_1";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.png" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<div class="logo">
				<a href="../UG_Intro/UG_Intro.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:90px;" border="0" /></a> 
				 
			</div>
			<div class="title">
				<a href="../UG_Intro/UG_Intro.htm" class="homelink"><span>HDF User’s Guide - 4.2.12</span></a> 
				 
			</div>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:42px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:48px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:48px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="60">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:28px" /></a> 
						 
					</div>
				</div>
				<div class="brsNext">
					<a id="browseSeqNext" class="wBSNextButton" href="../UG_Vdatas/UG_Vdatas.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:48px" /></a> 
					 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:48px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:48px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack" class="wBSBackButton" href="../UG_Fundmtls/UG_Fundmtls.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:56px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<div class="mobile_browseholder">
					<div class="brsBack">
						<a id="browseSeqBack0" class="wBSBackButton" href="../UG_Fundmtls/UG_Fundmtls.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton" border="0" style="width:100%; max-width:48px" /></a> 
					</div>
					<div class="brsNext">
						<a id="browseSeqNext0" class="wBSNextButton" href="../UG_Vdatas/UG_Vdatas.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton" border="0" style="width:100%; max-width:48px" /></a> 
					</div>
				</div>
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">

 <p class="Body">&nbsp;</p>
 <p class="ChapTitleUnNum"><a name="IX_SD_scientific_data_set"></a><span class="FM_ChapterNumber">Chapter 3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_13938_Scientific_Data"></a>Scientific Data Sets (SD API)</p>
 <p class="Body">&nbsp;</p>
 <p class="Heading1">3.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Chapter Overview</p>
 <p class="Body">This chapter describes the scientific data model and the interface routines provided by HDF for creating and accessing the data structures included in the model. &#160;This interface is known as the SD interface or the SD API.</p>
 <p class="Heading2">3.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_33327_3_2_The_SD"></a>The Scientific Data Set Data Model</p>
 <p class="Body">The scientific data set, or SDS, is a group of data structures used to store and describe multidi&#173;mensional arrays of scientific data. Refer to <a href="#XREF_16676_FIGURE_3a_The">Figure 3a</a>&#160;for a graphical overview of the SD data set. Note that in this chapter the terms <span class="Definition">SDS</span>, <span class="Definition">SD data set</span>, and <span class="Definition">data set</span>&#160;are used interchangeably; the terms <span class="Definition">SDS array</span>&#160;and <span class="Definition">array</span> are also used interchangeably.</p>
 <p class="Body">A scientific data set consists of required and optional components, which will be discussed in the following subsections.</p>
 <p class="Figure"><a name="IX_contents_of_a"></a><span class="StepNumber">FIGURE 3a<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_16676_FIGURE_3a_The"></a>The Contents of a Scientific Data Set</p>
 <div align="center"><img alt="UG_SD00001.png" style=" width:100%; margin-left:30pt; max-width:486.072pt;" id="image0" src="UG_SD00001.png" />
 </div>
 <p class="Heading3">3.2.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_10424_3_2_1_Required_SDS"></a>Required SDS Components</p>
 <p class="Body"><a name="IX_required_objects"></a>Every SDS must contain the following components: an <span class="Definition">SDS array</span>, a <span class="Definition">name</span>, a <span class="Definition">data type</span>, and the <span class="Definition">dimensions</span> of the SDS, which are actually the dimensions of the SDS array.</p>
 <p class="FM_BodyBold">SDS Array</p>
 <p class="Body"><a name="IX_description_13"></a>An <span class="Definition">SDS array</span>&#160;is a multidimensional data structure that serves as the core structure of an SDS. This is the primary data component of the SDS model and can be compressed (refer to <a href="#XREF_22986_SDsetcompress">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for a description of SDS compression) and/or stored in external files (refer the <a href="#XREF_17173_SDsetexternalfile">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.3.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for a description of external SDS storage). Users of netCDF should note that SDS arrays are conceptually equivalent to <span class="Definition">variables</span> in the netCDF data model<a name="FNB_0"></a><a href="#FNH_0"><sup>1</sup></a>. </p>
 <p class="Body">An SDS has an index and a reference number associated with it. The <span class="Definition">index</span> is a non-negative inte&#173;ger that describes the relative position of the data set in the file. A valid index ranges from 0 to the total number of data sets in the file minus 1. The <span class="Definition">reference number</span>&#160;is a unique positive integer assigned to the data set by the SD interface when the data set is created. Various SD interface rou&#173;tines can be used to obtain an SDS index or reference number depending on the available informa&#173;tion about the SDS. The index can also be determined if the sequence in which the data sets are created in the file is known.</p>
 <p class="Body"><a name="IX_see_SD_scientific_data"></a>In the SD interface, an <span class="Definition">SDS identifier</span>&#160;uniquely identifies a data set within the file. The identifier is created by the SD interface access routines when a new SDS is created or an existing one is selected. The identifier is then used by other SD interface routines to access the SDS until the access to this SDS is terminated. For an existing data set, the index of the data set can be used to obtain the identifier. Refer to <a href="#XREF_13485_SDstart_SDcreate">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for a description of the SD interface routine that creates SDSs and assigns identifiers to them.</p>
 <p class="FM_BodyBold">SDS Name</p>
 <p class="Body"><a name="IX_description_14"></a>The <span class="Definition">name</span>&#160;of an SDS can be provided by the calling program, or is set to &quot;DataSet&quot; by the HDF library at the creation of the SDS. The name consists of case-sensitive alphanumeric characters, is assigned only when the data set is created, and cannot be changed. SDS names do not have to be unique within a file, but their uniqueness makes it easy to semantically distinguish among data sets in the file.</p>
 <p class="FM_BodyBold">Data Type</p>
 <p class="Body"><a name="IX_data_type"></a>The data contained in an SDS array has a <span class="Definition">data type</span>&#160;associated with it. The standard data types supported by the SD interface include 32- and 64-bit floating-point numbers, 8-, 16- and 32-bit signed integers, 8-, 16- and 32-bit unsigned integers, and 8-bit characters. The SD interface also allows the creation of SD data sets consisting of data elements of non-standard lengths (1 to 32 bits). See <a href="#XREF_36561_3_7_6_Creating_SDS">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.11<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a> for more information.</p>
 <p class="FM_BodyBold"><a name="XREF_28978_Dimensions"></a>Dimensions</p>
 <p class="Body"><a name="IX_Array_rank"></a><a name="IX_description_15"></a>SDS <span class="Definition">dimensions</span> specify the shape and size of an SDS array.&#160;The number of dimensions of an array is referred to as the <span class="Definition">rank</span>&#160;of the array. Each dimension has an index and an identifier assigned to it. A dimension also has a size and may have a name associated with it.</p>
 <p class="Body">A dimension <span class="Definition">identifier</span>&#160;is a positive number uniquely assigned to the dimension by the library. This dimension identifier can be retrieved via an SD interface routine. Refer to <a href="#XREF_32761_SDgetdimid">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a> for a description of how to obtain dimension identifiers.</p>
 <p class="Body"><a name="IX_description_16"></a>A dimension <span class="Definition">index</span>&#160;is a non-negative number that describes the ordinal location of a dimension among others in a data set. In other words, when an SDS dimension is created, an index number is associated with it and is one greater than the index associated with the last created dimension that belongs to the same data set. The dimension index is convenient in a sequential search or when the position of the dimension among other dimensions in the SDS is known.</p>
 <p class="Body"><a name="IX_Unlimited_dimension"></a>The <span class="Definition">size</span>&#160;of a dimension is a positive integer. Also, one dimension of an SDS array can be assigned the predefined size <span class="DefName">SD_UNLIMITED</span>&#160;(or <span class="DefName">0</span>). This dimension is referred to as an <span class="Definition">unlimited dimension</span>, which, as the name suggests, can grow to any length. Refer to <a href="#XREF_32191_3_5_1_3_Appending">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for more information on unlimited dimensions.</p>
 <p class="Body"><a name="IX_description_17"></a><span class="Definition">Names</span>&#160;can optionally be assigned to dimensions, however, dimension names are not treated in the same way as SDS array names. For example, if a name assigned to a dimension was previously assigned to another dimension the SD interface treats both dimensions as the same data compo&#173;nent and any changes made to one will be reflected in the other.</p>
 <p class="Body" style="font-weight : bold;"><span class="FM_Strong" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Important <a name="XREF_Same_name"></a>Note:</span></p>
 <p class="Body">HDF4 allows a dimension and a one-dimensional SDS to be given the same name. &#160;The library also stores a dimension and a data set the same way internally. Prior to HDF 4.2.2, however, the library did not adequately distinguish these two types of objects. &#160;Thus, when a dimension and a one-dimensional SDS shared a name, writing to the SDS or the dimension could cause data cor&#173;ruption to the other. The corrupted data was unrecoverable.</p>
 <p class="Body">This problem was fixed in Release 4.2.2 and such data corruption will not occur in files created with a 4.2.2 or later library. Note, however, that the fix is effective only in new files; a dimension and a one-dimensional SDS of the same name that were created with a pre-4.2.2 HDF4 Library remain vulnerable to data corruption<span style="color   : #ff0000; ">&#160;</span>if an application is unaware of the potential conflict. To safely handle pre-4.2.2 files, the library now provides two functions, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnumvars_byname</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnumvars_byname</span>&#160;can be used to determine whether a name is unique. If the function reports one ('1') variable by that name, the name is unique and no further precaution needs to be taken. If the name is not unique, i.e., the number of variables by that name is greater than one, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;must then be used to retrieve the index and the type of each variable with that name. The desired variable can then be safely selected via its index. These func&#173;tions are described in detail in this User's Guide and the HDF4 Reference Manual.</p>
 <p class="Body">A similar problem is possible when a multi-dimensional SDS and a dimension are created with the same name by a pre-4.2.2 library. The HDF Group has not seen such a failure, however, and it is thought to be very unlikely. Note that the fix introduced in Release 4.2.2 also prevents data cor&#173;ruption from happening for this situation even though the data was created with libraries prior to 4.2.2, assuming no corruption had yet occurred.</p>
 <p class="Heading3">3.2.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_17668_3_2_2_Optional_SDS"></a>Optional SDS Components</p>
 <p class="Body"><a name="IX_optional_objects"></a>There are three types of optional SDS components: <span class="Definition">user-defined attributes</span>, <span class="Definition">predefined</span><span style="font-style : italic; font-weight : bold; "> attributes</span>, and <span class="Definition">dimension scales</span>. These optional components are only created when specifically requested by the calling program. </p>
 <p class="Body"><a name="IX_description_18"></a><span class="Definition">Attributes</span>&#160;describe the nature and/or the intended usage of the file, data set, or dimension they are attached to. Attributes have a name and value which contains one or more data entries of the same data type. Thus, in addition to name and value, the data type and number of values are specified when the attribute is created.</p>
 <p class="FM_BodyBold">User-Defined Attributes</p>
 <p class="Body"><a name="IX_description_19"></a><span class="Definition">User-defined attributes</span>&#160;are defined by the calling program and contain auxiliary information about a file, SDS array, or dimension. They are more fully described in <a href="#XREF_14370_3_9_User_defined">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="FM_BodyBold">Predefined Attributes</p>
 <p class="Body"><a name="IX_description_20"></a><span class="Definition">Predefined attributes</span> have reserved names and, in some cases, predefined data types and/or num&#173;ber of data entries. Predefined attributes are useful because they establish conventions that appli&#173;cations can depend on. They are further described in <a href="#XREF_15566_3_10_Pre_defined">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="FM_BodyBold">Dimension Scales</p>
 <p class="Body"><a name="IX_description_21"></a>A dimension scale is a sequence of numbers placed along a dimension to demarcate intervals along it. Dimension scales are described in <a href="#XREF_17621_3_8_4_Dimension">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Heading3">3.2.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_32739_3_2_3_Annotations"></a>Annotations and the SD Data Model</p>
 <p class="Body"><a name="IX_annotations_and_the"></a>In the past, annotations were supported in the SD interface to allow the HDF user to attach descriptive information (called <span class="Definition">metadata</span>) to a data set. With the expansion of the SD interface to include user-defined attributes, the use of annotations to describe metadata should be eliminated. Metadata once stored as an annotation is now more conveniently stored as an attribute. However, to ensure backward compatibility with scientific data sets and applications relying on annotations, the AN annotation interface, described in <a href="../UG_MF_Annot/UG_MF_Annot.htm#XREF_10210_Annotations_AN_API">Chapter 10<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Annotations (AN API)&quot;</a> can be used to anno&#173;tate SDSs.</p>
 <p class="Body">There is no cross-compatibility between attributes and annotations; creating one does not auto&#173;matically create the other.</p>
 <p class="Heading2">3.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The SD Interface</p>
 <p class="Body"><a name="IX_description_22"></a>The SD interface provides routines that store, retrieve, and manipulate scientific data using the SD data model. The SD interface supports simultaneous access to more than one SDS in more than one HDF file. In addition, the SD interface is designed to support a general scientific data model which is very similar to the netCDF data model developed by the Unidata Program Center<a name="FNB_1"></a><a href="#FNH_1"><sup>2</sup></a>.</p>
 <p class="Body">For those users who have been using the DFSD interface, the SD interface provide a model com&#173;patible with that supported by the DFSD interface. It is recommended that DFSD users apply the SD model and interface to their applications since the DFSD interface is less flexible and less powerful than the SD interface and will eventually be removed from the HDF library.</p>
 <p class="Body">This section specifies the header file to be used with the SD interface and lists all available SD interface routines, each of which is accompanied by its purpose and the section where the routine is discussed.</p>
 <p class="Heading3">3.3.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Header Files Required by the SD Interface</p>
 <p class="Body">The <span class="Subscript">mfhdf.h</span> header file must be included in programs that invoke SD interface routines. FOR&#173;TRAN-77 users should refer to <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_70184_2_5_3_FORTRAN_77">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>2.5.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Heading3">3.3.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>SD Interface Routines</p>
 <p class="Body"><a name="IX_routine_categories"></a>All C routines in the SD interface begin with the prefix &quot;SD&quot;. The equivalent FORTRAN-77 rou&#173;tines use the prefix &quot;sf&quot;. These routines are categorized as follows:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Access routines</span> initialize and terminate access to HDF files and data sets.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Read and write routines</span> read and write data sets.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">General inquiry routines</span>&#160;return information about the location, contents, and description of the scientific data sets in an HDF file.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Dimension routines</span> access and define characteristics of dimensions within a data set.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Dimension scale routines</span> define and access dimension scales within a data set.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">User-defined attribute routines</span>&#160;create and access user-defined attributes of an HDF file, data set, or dimension. </p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Predefined attribute routines</span>&#160;access previously-defined attributes of an HDF file, data set, or dimension.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Compression routines</span> compress SDS data and retrieves compresion information.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Chunking/tiling routines</span> manage chunked data sets.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Miscellaneous routines</span>&#160;provide other operations such as external file, n-bit data set, and compatibility operations.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Raw Data Information routines</span>&#160;provide information that allows applications to read raw data from HDF files without the use of HDF library. &#160;These functions are described in <a href="../UG_RawDatainfo/UG_RawDatainfo.htm#XREF_32374_Chapter_16_Raw">Chapter 16<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Raw Data Information&quot;</a>&#160;of this document, together with the same type of routines that belong to other interfaces.</p>
 <p class="Body">The SD routines are listed in the following table and are discussed in the following sections of this chapter.</p>
 <p class="Figure"><a name="IX_routine_list"></a><span class="StepNumber">TABLE 3A<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>SD Interface Routines</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:391.21pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 50.695pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Category</p>
</td>
  <td colspan="2" style="width : 145.812pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
</td>
  <td rowspan="2" style="width : 194.700pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description and Reference</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="5" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Access</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDstart</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfstart</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Opens the HDF file and initializes the SD interface (<a href="#XREF_13485_SDstart_SDcreate">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDcreate</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfcreate</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Creates a new data set (<a href="#XREF_13485_SDstart_SDcreate">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDselect</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfselect</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Selects an existing SDS given its index (<a href="#XREF_13485_SDstart_SDcreate">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDendaccess</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfendacc</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Terminates access to an SDS (<a href="#XREF_11405_SDendaccess_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.4.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDend</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfend</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Terminates access to the SD interface and closes the file (<a href="#XREF_11405_SDendaccess_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.4.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td rowspan="2" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Read and Write</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreaddata</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfrdata/</p>
  <p class="CellFunction">sfrcdata</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reads data from a data set (<a href="#XREF_13107_SDreaddata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDwritedata</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfwdata/</p>
  <p class="CellFunction">sfwcdata</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Writes data to a data set (<a href="#XREF_20018_SDwritedata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="21" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">General Inquiry</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDcheckempty</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfchempty</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Determines whether a scientific dataset (an SDS) is empty (<a href="#XREF_39481_SDcheckempty">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.10<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="3" style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDfileinfo</p>
</td>
  <td rowspan="3" style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sffinfo</p>
</td>
  <td rowspan="3" style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves information about the contents of a file (<a href="#XREF_29038_SDfileinfo">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetfilename</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgetfname</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Given a file identifier, retrieves the name of the file (<a href="#XREF_41612_SDgetfilename">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.11.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetinfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfginfo</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves information about a data set (<a href="#XREF_18053_SDgetinfo">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDget_maxopenfiles</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgmaxopenf</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves current and maximum number of open files (<a href="#XREF_66374_SDget_maxopenfiles">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.11.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetnamelen</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgetnamelen</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the length of the name of a file, a dataset, or a dimension (<a href="#XREF_69218_SDgetnamelen">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.11.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDget_numopenfiles</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgnumopenf</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the number of files currently open (<a href="#XREF_75346_SDget_numopenfiles">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.11.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="2" style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetnumvars_byname</p>
</td>
  <td rowspan="2" style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgnvars_byname</p>
</td>
  <td rowspan="2" style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the number of data sets having the same name (<a href="#XREF_98959_SDgetnumvars_byname">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDidtoref</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfid2ref</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the reference number of a data set (<a href="#XREF_41630_3_7_5_Obtaining">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.8<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDidtype</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfidtype</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Given an identifier, returns the type of object the identifier repre&#173;sents (<a href="#XREF_47562_SDidtype">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.9<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDiscoordvar</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfiscvar</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Distinguishes data sets from dimension scales (<a href="#XREF_25183_SDiscoordvar">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDisrecord</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfisrcrd</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Determines whether a data set is appendable, i.e., having unlimited dimension (<a href="#XREF_10708_SDisrecord">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDnametoindex</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfn2index</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the index of a data set specified by its name (<a href="#XREF_39206_SDnametoindex">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="2" style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDnametoindices</p>
</td>
  <td rowspan="2" style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfn2indices</p>
</td>
  <td rowspan="2" style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves a list of indices of data sets having the same given name (<a href="#XREF_57014_SDnametoindices">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="2" style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreftoindex</p>
</td>
  <td rowspan="2" style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfref2index</p>
</td>
  <td rowspan="2" style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the index of a data set specified by its reference number (<a href="#XREF_11606_SDreftoindex">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.7<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreset_maxopenfiles</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfrmaxopenf</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Resets the maximum number of files that can be open at the same time (<a href="#XREF_88484_SDreset">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.11.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Dimensions</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDdiminfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgdinfo</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Gets information about a dimension (<a href="#XREF_10800_SDdiminfo">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdimid</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfdimid</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the identifier of a dimension (<a href="#XREF_32761_SDgetdimid">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimname</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsdimname</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Associates a name with a dimension (<a href="#XREF_17640_SDsetdimname">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="2" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Dimension Scales</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdimscale</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgdscale</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the scale values for a dimension (<a href="#XREF_23247_SDgetdimscale">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimscale</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsdscale</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Stores the scale values of a dimension (<a href="#XREF_12233_SDsetdimscale">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">User-defined Attributes </p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDattrinfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgainfo</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Gets information about an attribute (<a href="#XREF_30191_SDfindattr_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDfindattr</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sffattr</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the index of an attribute specified by its name (<a href="#XREF_30191_SDfindattr_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreadattr</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfrnatt/sfrcatt</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reads the values of an attribute specified by its index (<a href="#XREF_14343_SDreadattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetattr</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsnatt/sfscatt</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Creates a new attribute and stores its values (<a href="#XREF_36061_SDsetattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="11" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Predefined Attributes</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetcal</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgcal</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves calibration information (<a href="#XREF_11605_SDgetcal">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.6.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdatastrs</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgdtstr</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the predefined-attribute strings of a data set (<a href="#XREF_29839_SDgetdatastrs">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.2.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdimstrs</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgdmstr</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the predefined-attribute strings of a dimension (<a href="#XREF_33604_SDgetdimstrs">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.3.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetfillvalue</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgfill/sfgc&#173;fill</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reads the fill value if it exists (<a href="#XREF_31868_SDgetfillvalue">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.5.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetrange</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgrange</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves the range of values in the specified data set (<a href="#XREF_36056_SDgetrange">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.4.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetcal</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfscal</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Defines the calibration information (<a href="#XREF_25997_SDsetcal">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.6.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdatastrs</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsdtstr</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets predefined attributes of the specified data set (<a href="#XREF_28052_SDsetdatastrs">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimstrs</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsdmstr</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets predefined attributes of the specified dimension (<a href="#XREF_34270_SDsetdimstrs">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.3.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetfillvalue</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsfill/sfsc&#173;fill</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Defines the fill value for the specified data set (<a href="#XREF_19314_SDsetfillvalue">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.5.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetfillmode</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsflmd</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the fill mode to be applied to all data sets in the specified file (<a href="#XREF_12863_SDsetfillmode">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.5.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetrange</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsrange </p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Defines the maximum and minimum values of the specified data set (<a href="#XREF_28522_SDsetrange">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="3" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Compression</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetcompress</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfscompress</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compresses a data set using a specified compression method (<a href="#XREF_22986_SDsetcompress">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetnbitdataset</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsnbit</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Defines the non-standard bit length of the data set data (<a href="#XREF_36561_3_7_6_Creating_SDS">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.11<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetcompinfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgcompress</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves data set compression type and compression information. &#160;(See the <span class="FM_Cite" style="font-family : Times New Roman; font-style : italic; font-weight : normal; font-size  : 8.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HDF Reference Manual)</span></p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="5" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Chunking/</p>
  <p class="FM_TableCategory">Tiling</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetchunkinfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgichnk</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Obtains information about a chunked data set (<a href="#XREF_10144_SDgetchunkinfo">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.12.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreadchunk</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfrchnk/sfrcchnk</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reads data from a chunked data set (<a href="#XREF_27905_SDreadchunk_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.12.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetchunk</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfschnk</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Makes a non-chunked data set a chunked data set (<a href="#XREF_32968_SDsetchunk">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.12.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetchunkcache</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfcchnk</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the size of the chunk cache (<a href="#XREF_30563_3_11_2_Setting_the">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.12.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDwritechunk</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfwchnk/sfwcchnk</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Writes data to a chunked data set (<a href="#XREF_12520_SDwritechunk_and">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.12.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Raw Data</p>
  <p class="FM_TableCategory">Information</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetanndatainfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">unvailable</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves location and size of annotations’ data ()</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetattdatainfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">unvailable</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves location and size of an attribute’s data (<a href="#XREF_22293_SDsetblocksize">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdatainfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">unvailable</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves location and size of data blocks in a spcified data set (<a href="#XREF_17173_SDsetexternalfile">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.3.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="3" style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetoldattdatainfo</p>
</td>
  <td rowspan="3" style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">unvailable</p>
</td>
  <td rowspan="3" style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Retrieves location and size of an old predefined attribute’s data (<a href="#XREF_19357_3_8_3_2">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.3.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="6" style="width : 50.695pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Miscellaneous</p>
</td>
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetexternalinfo</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">unvailable</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Gets information about external file of a data set (<a href="#XREF_15961_SDgetexternalfile">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.3.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetblocksize</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsblsz</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the block size used for storing data sets with unlimited dimen&#173;sion (<a href="#XREF_22293_SDsetblocksize">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetexternalfile</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsextf</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Specifies that a data set is to be stored in an external file (<a href="#XREF_17173_SDsetexternalfile">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.3.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDisdimval_bwcomp</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfisdmvc</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Determines the current compatibility mode of a dimension (<a href="#XREF_19357_3_8_3_2">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.3.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimval_comp</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfsdmvc</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the future compatibility mode of a dimension (<a href="#XREF_26116_SDsetdimval_comp">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.3.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 80.809pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetaccesstype</p>
</td>
  <td style="width : 65.003pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sdfsacct</p>
</td>
  <td style="width : 194.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets the I/O access type for an SDS (<a href="#XREF_37572_SDsetaccesstype">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1.6<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>)</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3">3.3.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Tags in the SD Interface</p>
 <p class="Body"><a name="IX_SD_scientific_data_set_1"></a>A complete list of SDS tags and their descriptions appears in <a href="../UG_Appndx/UG_Appndx.htm#XREF_39748_TABLE_13_2_The_HDF">Table AD</a>&#160;in Appendix A. Refer to <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_30011_2_2_2_1_Data">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>2.2.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a> for a description of tags.</p>
 <p class="Heading2"><a name="IX_establishing_access_to_a"></a>3.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Programming Model for the SD Interface</p>
 <p class="Body">This section describes the routines used to initialize the SD interface, create a new SDS or access an existing one, terminate access to that SDS, and shut down the SD interface. Writing to existing scientific data sets will be described in <a href="#XREF_20804_3_5_Writing_Data">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body">To support multifile access, the SD interface relies on the calling program to initiate and terminate access to files and data sets. The SD programming model for creating and accessing an SDS in an HDF file is as follows:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Open a file and initialize the SD interface.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Create a new data set or open an existing one using its index.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Perform desired operations on this data set.</p>
 <p class="Step"><span class="StepNumber">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the data set.</p>
 <p class="Step"><span class="StepNumber">5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the SD interface and close the file.</p>
 <p class="Body">To access a single SDS in an HDF file, the calling program must contain the following calls:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sd_id = SDstart(filename, access_mode);</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = SDcreate(sd_id, sds_name, data_type, rank, dim_sizes);<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = SDselect(sd_id, sds_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;Optional operations&gt;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDendaccess(sds_id);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDend(sd_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sd_id = sfstart(filename, access_mode)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = sfcreate(sd_id, sds_name, data_type, rank, dim_sizes)<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = sfselect(sd_id, sds_index)<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;Optional operations&gt;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfendacc(sds_id)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfend(sd_id)</p>
 <p class="Body">If the file contains non-SD-API objects, such as vdatas or raster images, the application must use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>/<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hclose</span>&#160;to access these objects while <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>/<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend</span>&#160;the SD-API objects. &#160;The non-SD API functions access the file via the identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>&#160;and the SD API functions use the identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>.</p>
 <p class="Body">To access several files at the same time, a program must obtain a separate SD file identifier (<span class="VarName">sd_id</span>) for each file to be opened. Likewise, to access more than one SDS, a calling program must obtain a separate SDS identifier (<span class="VarName">sds_id</span>) for each SDS. For example, to open two SDSs stored in two files a program would execute the following series of function calls.</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sd_id_1 = SDstart(filename_1, access_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id_1 = SDselect(sd_id_1, sds_index_1);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sd_id_2 = SDstart(filename_2, access_mode);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id_2 = SDselect(sd_id_2, sds_index_2);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;Optional operations&gt;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDendaccess(sds_id_1);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDend(sd_id_1);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDendaccess(sds_id_2);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDend(sd_id_2);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sd_id_1 = sfstart(filename_1, access_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id_1 = sfselect(sd_id_1, sds_index_1)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sd_id_2 = sfstart(filename_2, access_mode)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id_2 = sfselect(sd_id_2, sds_index_2)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;Optional operations&gt;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfendacc(sds_id_1)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfend(sd_id_1)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfendacc(sds_id_2)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfend(sd_id_2)</p>
 <p class="Heading3">3.4.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_13485_SDstart_SDcreate"></a>Establishing Access to Files and Data Sets: SDstart, SDcreate, and SDselect</p>
 <p class="Body"><a name="IX_description_23"></a>In the SD interface, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;is used to open files rather than <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Hopen</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span> takes two argu&#173;ments, <span class="VarName">filename</span>&#160;and <span class="VarName">access_mode</span>, and returns the SD interface identifier, <span class="VarName">sd_id</span>. Note that the SD interface identifier, <span class="VarName">sd_id</span>, is <span style="font-style : italic; ">not</span>&#160;interchangeable with the file identifier, <span class="VarName">file_id</span>, created by <span style="font-weight : bold; ">Hopen</span>&#160;and used in other HDF APIs.</p>
 <p class="Body">The argument <span class="VarName">filename</span> is the name of an HDF or netCDF file.</p>
 <p class="Body">The argument <span class="VarName">access_mode</span>&#160;specifies the type of access required for operations on the file. All the valid values for <span class="VarName">access_mode</span>&#160;are listed in <a href="#XREF_36076_TABLE_3B_File">Table 3B</a>. If the file does not exist, specifying <span class="DefName">DFACC_READ</span>&#160;or <span class="DefName">DFACC_WRITE </span>will cause <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;to return a <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Specifying <span class="DefName">DFACC_CRE&#173;ATE</span>&#160;creates a new file with read and write access. If <span class="DefName">DFACC_CREATE</span>&#160;is specified and the file already exists, the contents of this file will be replaced.</p>
 <p class="Figure"><span class="StepNumber">TABLE 3B<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_36076_TABLE_3B_File"></a>File Access Code Flags</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:253.00pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <th style="width : 77.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">File Access Flag</p>
</th>
  <th style="width : 49.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Flag Value</p>
</th>
  <th style="width : 127.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</th>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 77.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">DFACC_READ</p>
</td>
  <td style="width : 49.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">1</p>
</td>
  <td style="width : 127.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Read only access</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 77.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">DFACC_WRITE</p>
</td>
  <td style="width : 49.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">2</p>
</td>
  <td style="width : 127.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Read and write access</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 77.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">DFACC_CREATE</p>
</td>
  <td style="width : 49.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">4</p>
</td>
  <td style="width : 127.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Create with read and write access</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body">The SD interface identifiers can be obtained and discarded in any order and all SD interface iden&#173;tifiers must be individually discarded, by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend</span>, before the termination of the calling program.</p>
 <p class="Body">Although it is possible to open a file more than once, it is recommended that the appropriate access mode be specified and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;called only once per file. Repeatedly calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;on the same file and with different access modes may cause unexpected results. &#160;Note that it has been reported that opening/closing file in loops is very slow; thus, it is not recommended to perform such operations too many times, particularly, when data is being added to the file between open&#173;ing/closing.</p>
 <p class="Body">Prior to HDF 4.2.2, the maximum number of open files was limited to 32; but, it now can be up to what the system allowed.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;returns an SD identifier or a value of <span class="DefName">FAIL </span>(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;are defined in <a href="#XREF_35635_TABLE_3C_SDstart"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">(See Table&nbsp;3C on page&nbsp;29)</span></a>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>&#160;defines a new SDS using the arguments <span class="VarName">sd_id</span>, <span class="VarName">sds_name</span>, <span class="VarName">data_type</span>, <span class="VarName">rank</span>, and <span class="VarName">dim_sizes</span>&#160;and returns the data set identifier, <span class="VarName">sds_id</span>.</p>
 <p class="Body">The parameter <span class="VarName">sds_name</span>&#160;is a character string containing the name to be assigned to the SDS. The SD interface will generate a default name, &quot;<span class="Subscript">DataSet</span>&quot;, for the SDS, if one is not provided, i.e., when the parameter <span class="VarName">sds_name</span>&#160;is set to <span class="DefName">NULL</span> in C, or an empty string in FORTRAN-77. The maxi&#173;mum length of an SDS name is no longer limited to 64 characters, starting in HDF 4.2.2. &#160;Applica&#173;tions should use the API <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnamelen</span>&#160;in order to allocate sufficient space when reading the name. &#160;Note that when an older version of the library reads a data set, which was created by a library of version 4.2.2 or later and has the name that is longer than 64 characters, the retrieved name will contain some garbage after 64 characters.</p>
 <p class="Body">The parameter <span class="VarName">data_type</span>&#160;is a defined name, prefaced by <span class="DefName">DFNT</span>, and specifies the type of the data to be stored in the data set. The header file &quot;hntdefs.h&quot; contains the definitions of all valid data types, which are described in <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13138_HDF_Fundamentals">Chapter 2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;HDF Fundamentals&quot;</a>, and listed in <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13047_TABLE_2E_Standard"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">(See Table&nbsp;2F on page&nbsp;14)</span></a>.</p>
 <p class="Body">The parameter <span class="VarName">rank</span>&#160;is a positive integer specifying the number of dimensions of the SDS array. The maximum rank of an SDS array is defined by <span class="DefName">H4_MAX_VAR_DIMS</span>&#160;(or <span class="DefName">32</span>), which is defined in the header file &quot;hlimits.h&quot;. &#160;Note that, in order for HDF4 and NetCDF models to work together, HDF allows SDS to have rank 0. &#160;However, there is no intention for data to be written to this type of SDS, but only to store attribute as part of the data description. &#160;Consequently, setting compres&#173;sion and setting chunk are disallowed.</p>
 <p class="Body">Each element of the one-dimensional array <span class="VarName">dim_sizes</span>&#160;specifies the length of the corresponding dimension of the SDS array. The size of <span class="VarName">dim_sizes</span>&#160;must be the value of the parameter <span class="VarName">rank</span>. To create a data set with an unlimited dimension, assign the value of <span class="DefName">SD_UNLIMITED</span>&#160;(or <span class="DefName">0</span>) to <span class="VarName">dim_sizes[0]</span>&#160;in C, and to <span class="VarName">dim_sizes(rank)</span>&#160;in FORTRAN-77. See the notes regarding the potential performance impact of unlimited dimension data sets in <a href="../UG_Perform/UG_Perform.htm#XREF_97527_14_4_3_Unlimited">Section 14.4.3, &quot;Unlimited Dimension Data Sets (SDSs and Vdatas) and Performance&quot; on page 461</a>.</p>
 <p class="Body">Once an SDS is created, you cannot change its name, data type, size, or shape. However, it is pos&#173;sible to modify the data set’s data or to create an empty data set and later add values. To add data or modify an existing data set, use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;to get the data set identifier instead of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>.</p>
 <p class="Body">Note that the SD interface retains no definitions about the size, contents, or rank of an SDS from one SDS to the next, or from one file to the next.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;initiates access to an existing data set. The routine takes two arguments: <span class="VarName">sd_id</span>&#160;and <span class="VarName">sds_index</span>&#160;and returns the SDS identifier <span class="VarName">sds_id</span>. The argument <span class="VarName">sd_id</span>&#160;is the SD interface identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>, and <span class="VarName">sds_index</span>&#160;is the position of the data set in the file. The argument <span class="VarName">sds_index</span> is zero-based, meaning that the index of first SDS in the file is 0.</p>
 <p class="Body">Similar to SD interface identifiers, SDS identifiers can be obtained and discarded in any order as long as they are discarded properly. Each SDS identifier must be individually disposed of, by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDendaccess</span>, before the disposal of the identifier of the interface in which the SDS is opened.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;each returns an SDS identifier or a value of <span class="DefName">FAIL</span><span class="VarName">&#160;</span>(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart, SDcreate, </span>and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;are further described in <a href="#XREF_35635_TABLE_3C_SDstart"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Table 3C</span></a>.</p>
 <p class="Heading3"><a name="IX_terminating_access_to_a"></a>3.4.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_11405_SDendaccess_and"></a>Terminating Access to Files and Data Sets: SDendaccess and SDend</p>
 <p class="Body"><a name="IX_description_24"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDendaccess</span>&#160;terminates access to the data set and disposes of the data set identifier <span class="VarName">sds_id</span>. The calling program must make one <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDendaccess</span>&#160;call for every <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect </span>or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span> call made dur&#173;ing its execution. Failing to call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDendaccess</span>&#160;for each call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>&#160;may result in a loss of data. </p>
 <p class="Body"><a name="IX_description_25"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend</span>&#160;terminates access to the file and the SD interface and disposes of the file identifier <span class="VarName">sd_id</span>. The calling program must make one <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend</span>&#160;call for every <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;call made during its execution. Failing to call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend</span>&#160;for each <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span>&#160;may result in a loss of data. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDendaccess</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend</span>&#160;each returns either a value of <span class="DefName">SUCCEED </span>(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDendaccess</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend</span>&#160;are further described in <a href="#XREF_35635_TABLE_3C_SDstart"><span class="FM_Body" style="font-family : Times New Roman; font-style : normal; font-weight : normal; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Table 3C</span></a>. </p>
 <p class="Figure"><a name="IX_parameter_list_2"></a><a name="IX_parameter_list_1"></a><a name="IX_parameter_list"></a><span class="StepNumber">TABLE 3C<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_35635_TABLE_3C_SDstart"></a><a name="XREF_SDstart_parameter_list"></a>SDstart, SDcreate, SDselect<a name="XREF_SDend_parameter_list"></a>, SDendaccess, and SDend Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 59.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 111.600pt; background : #e5e5e5;border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 153.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDstart</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfstart)</p>
</td>
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">filename</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the HDF or netCDF file</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">access_mode</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Type of access</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDcreate</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfcreate)</p>
</td>
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_name</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">ASCII string containing the name of the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">rank</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of dimensions in the array</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_sizes</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32[]</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array defining the size of each dimension</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDselect</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfselect)</p>
</td>
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_index</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Position of the data set within the file</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDendaccess</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfendacc)</p>
</td>
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDend</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfend)</p>
</td>
  <td style="width : 59.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 153.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Creating an HDF file and an Empty SDS.</p>
 <p class="Body">This example illustrates the use of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart/sfstart</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate/sfcreate</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDendaccess/sfendacc</span>, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDend/sfend</span>&#160;to create the HDF file named SDS.hdf, and an empty data set with the name SDStemplate in the file.</p>
 <p class="Body">Note that the Fortran program uses a transformed array to reflect the difference between C and Fortran internal data storages. When the actual data is written to the data set, SDS.hdf will contain the same data regardless of the language being used.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot; </p>
 <p class="FM_ExampleCode">#define SDS_NAME &#160;&#160;&#160;&#160;&#160;&quot;SDStemplate&quot; </p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;5</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;16</p>
 <p class="FM_ExampleCode">#define RANK &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2 &#160;/* Number of dimensions of the SDS */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id; &#160;&#160;&#160;&#160;/* SD interface and data set identifiers */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 dim_sizes[2]; &#160;&#160;&#160;&#160;&#160;/* sizes of the SDS dimensions */</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* status returned by some routines; has value</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SUCCEED or FAIL */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_CREATE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Define the dimensions of the array to be created.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create the data set with the name defined in SDS_NAME. Note that </p>
 <p class="FM_ExampleCode"> &#160;&#160;* DFNT_INT32 indicates that the SDS data is of type int32. Refer to</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Table 2E for definitions of other types. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDcreate (sd_id, SDS_NAME, DFNT_INT32, RANK, dim_sizes);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;program &#160;create_SDS </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH, RANK</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME = ’SDStemplate’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 16,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK &#160;&#160;&#160;&#160;= 2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_CREATE, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_CREATE = 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfcreate, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, dim_sizes(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_CREATE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define dimensions of the array to be created.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_sizes(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_sizes(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the array with the name defined in SDS_NAME.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Note that DFNT_INT32 indicates that the SDS data is of type</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;integer. Refer to Tables 2E and 2I for the definition of other types. &#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;sds_id = sfcreate(sd_id, SDS_NAME, DFNT_INT32, RANK, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading2">3.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_20804_3_5_Writing_Data"></a>Writing Data to an SDS</p>
 <p class="Body">An SDS can be written partially or entirely. Partial writing includes writing to a contiguous region of the SDS and writing to selected locations in the SDS according to patterns defined by the user. This section describes the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;and how it can write data to part of an SDS or to an entire SDS. The section also illustrates the concepts of compressing SDSs and using external files to store scientific data.</p>
 <p class="Heading3"><a name="IX_writing_to_a"></a>3.5.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_20018_SDwritedata"></a>Writing Data to an SDS Array: SDwritedata</p>
 <p class="Body"><a name="IX_description_26"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;can completely or partially fill an SDS array or append data along the dimension that is defined to be of unlimited length (see <a href="#XREF_32191_3_5_1_3_Appending">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1.3<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a> for a discussion of unlim&#173;ited-length dimensions). It can also skip a specified number of SDS array elements between write operations along each dimension.</p>
 <p class="Body">To write to an existing SDS, the calling program must contain the following sequence of routine calls:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = SDselect(sd_id, sds_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDwritedata(sds_id, start, stride, edges, data);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfwdata(sds_id, start, stride, edges, data)<span style="font-family : Times New Roman; font-size  : 10.0pt; letter-spacing : 0.00em; "><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></span></p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfwcdata(sds_id, start, stride, edges, data)</p>
 <p class="Body">To write to a new SDS, simply replace the call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;with the call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>, which is described in <a href="#XREF_13485_SDstart_SDcreate">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;takes five arguments: <span class="VarName">sds_id</span>, <span class="VarName">start</span>, <span class="VarName">stride</span>, <span class="VarName">edges</span>, and <span class="VarName">data</span>. The argument <span class="VarName">sds_id</span>&#160;is the data set identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>. </p>
 <p class="Body"><a name="IX_description_27"></a>Before proceeding with the description of the remaining arguments, an explanation of the term <span class="Definition">hyperslab</span>&#160;(or <span class="Definition">slab</span>, as it will be used in this chapter) is in order. A <span class="Definition">slab</span> is a group of SDS array ele&#173;ments <span style="font-style : italic; ">that are stored in consecutive locations. </span>It can be of any size and dimensionality as long as it is a subset of the array, which means that a single array element and the entire array can both be considered slabs. A slab is defined by the multidimensional coordinate of its initial vertex and the lengths of each dimension. </p>
 <p class="Body">Given this description of the slab concept, the usage of the remaining arguments should become apparent. The argument <span class="VarName">start</span>&#160;is a one-dimensional array specifying the location in the SDS array at which the write operation will begin. The values of each element of the array <span class="VarName">start</span>&#160;are relative to 0 in both the C and FORTRAN-77 interfaces. The size of <span class="VarName">start</span>&#160;must be the same as the number of dimensions in the SDS array. In addition, each value in <span class="VarName">start</span> must be smaller than its corre&#173;sponding SDS array dimension unless the dimension is unlimited. Violating any of these condi&#173;tions causes <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;to return <span class="DefName">FAIL</span>.</p>
 <p class="Body"><a name="IX_description_28"></a>The&#160;argument <span class="VarName">stride</span>&#160;is a one-dimensional array specifying, for each dimension, the interval between values to be written. For example, setting the first element of the array <span class="VarName">stride</span>&#160;equal to 1 writes data to every location along the first dimension. Setting the first element of the array <span class="VarName">stride</span>&#160;to 2 writes data to every other location along the first dimension. <a href="#XREF_20123_FIGURE_3b_An">Figure 3b</a> illustrates this exam&#173;ple, where the shading elements are written and the white elements are skipped. If the argument <span class="VarName">stride</span>&#160;is set to <span class="DefName">NULL</span>&#160;in C (or either <span class="DefName">0</span>&#160;or <span class="DefName">1</span>&#160;in FORTRAN-77), <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span> operates as if every ele&#173;ment of <span class="VarName">stride</span>&#160;contains a value of 1, and a contiguous write is performed. For better performance, it is recommended that the value of <span class="VarName">stride</span>&#160;be defined as <span class="DefName">NULL</span>&#160;(i.e., <span class="DefName">0</span>&#160;or <span class="DefName">1</span>&#160;in FORTRAN-77) rather than being set to 1.</p>
 <p class="Body">The size of the array <span class="VarName">stride</span>&#160;must be the same as the number of dimensions in the SDS array. Also, each value in <span class="VarName">stride</span>&#160;must be smaller than or equal to its corresponding SDS array dimension unless the dimension is unlimited. Violating any of these conditions causes <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;to return <span class="DefName">FAIL</span>.</p>
 <p class="Figure"><span class="StepNumber">FIGURE 3b<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_20123_FIGURE_3b_An"></a>An Example of Access Pattern (&quot;Strides&quot;)</p>
 <div align="center"><img alt="UG_SD00002.png" style=" width:100%; margin-left:30pt; max-width:485.928pt;" id="image1" src="UG_SD00002.png" />
 </div>
 <p class="Body">The argument <span class="VarName">edges</span>&#160;is a one-dimensional array specifying the length of each dimension of the slab to be written. If the slab has fewer dimensions than the SDS data set has, the size of <span class="VarName">edges</span>&#160;must still be equal to the number of dimensions in the SDS array and all the elements correspond&#173;ing to the additional dimensions must be set to 1.</p>
 <p class="Body">Each value in the<span style="font-size  : 8.5pt; ">&#160;</span>array<span style="font-size  : 8.5pt; ">&#160;</span><span class="VarName">edges</span><span style="font-size  : 8.5pt; ">&#160;</span>must not be larger than the length of the corresponding dimension in the SDS data set unless the dimension is unlimited. Attempting to write slabs larger than the size of the SDS data set will result in an error condition. </p>
 <p class="Body">In addition, the sum of each value in the<span style="font-size  : 8.5pt; ">&#160;</span>array <span class="VarName">edges</span>&#160;and the corresponding value in the <span class="VarName">start</span>&#160;array must be smaller than or equal to its corresponding SDS array dimension unless the dimension is unlimited. Violating any of these conditions causes <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;to return <span class="DefName">FAIL</span>. &#160;When <span style="font-weight : bold; ">SDreadd&#173;ata</span>&#160;returns <span style="font-family : Courier New; font-size  : 8.0pt; ">FAIL</span>&#160;(or <span style="font-family : Courier New; font-size  : 8.0pt; ">-1</span>) due to any invalid argements, the error code <span class="DefName">DFE_ARGS</span>&#160;will be pushed on the stack.</p>
 <p class="Body">The parameter <span class="VarName">data</span>&#160;contains the SDS data to be written. If the SDS array is smaller than the buffer <span class="VarName">data</span>, the amount of data written will be limited to the maximum size of the SDS array.</p>
 <p class="Body">Be aware that the mapping between the dimensions of a slab and the order in which the slab val&#173;ues are stored in memory is different between C and FORTRAN-77. In C, the values are stored with the assumption that the last dimension of the slab varies fastest (or &quot;row-major order&quot; stor&#173;age), but in FORTRAN-77 the first dimension varies fastest (or &quot;column-major order&quot; storage). These storage order conventions can cause some confusion when data written by a C program is read by a FORTRAN-77 program or vice versa.</p>
 <p class="Body"><a name="IX_description_of_1"></a><a name="IX_description_of"></a>There are two FORTRAN-77 versions of this routine: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfwdata</span><span style="font-weight : bold; ">&#160;</span>and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfwcdata</span>. The routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfw&#173;data</span><span style="font-weight : bold; ">&#160;</span>writes numeric scientific data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfwcdata</span><span style="font-weight : bold; ">&#160;</span>writes character scientific data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;returns either a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of this rou&#173;tine are described in <a href="#XREF_19628_TABLE_3D">Table 3D</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_3"></a><span class="StepNumber">TABLE 3D<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_19628_TABLE_3D"></a>SDwritedata Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 136.801pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 136.799pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 46.801pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDwritedata</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfwdata/</p>
  <p class="CellFunction">sfwcdata)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 46.801pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.799pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">start</p>
</td>
  <td style="width : 46.801pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 []</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 136.799pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array containing the position at which the write will start for each dimension</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">stride</p>
</td>
  <td style="width : 46.801pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 []</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 136.799pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array specifying the interval between the val&#173;ues that will be read along each dimension</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">edges</p>
</td>
  <td style="width : 46.801pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 []</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 136.799pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array containing the number of data elements that will be written along each dimension</p>
</td>
</tr>
  <tr style=" height : 31.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data</p>
</td>
  <td style="width : 46.801pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 136.799pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the data to be written</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading4">3.5.1.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Filling an Entire Array</p>
 <p class="Body">Filling an array is a simple slab operation where the slab begins at the origin of the SDS array and fills every location in the array. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;fills an entire SDS array with data when all elements of the array <span class="VarName">start</span>&#160;are set to <span class="DefName">0</span>, the argument <span class="VarName">stride </span>is set equal to <span class="DefName">NULL</span>&#160;in C or each element of the array <span class="VarName">stride</span>&#160;is set to <span class="DefName">1</span>&#160;in both C and FORTRAN-77, and each element of the array <span class="VarName">edges</span>&#160;is equal to the length of each dimension.</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Writing to an SDS.</p>
 <p class="Body">This example illustrates the use of the routines <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect/sfselect</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata/sfwrite</span>&#160;to select the first SDS in the file SDS.hdf created in Example 1 and to write actual data to it.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;5</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;16</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 start[2], edges[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 data[Y_LENGTH][X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i, j;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Data set data initialization.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (j = 0; j &lt; Y_LENGTH; j++) {</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;for (i = 0; i &lt; X_LENGTH; i++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[j][i] = (i + j) + 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_WRITE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Attach to the first data set.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Define the location and size of the data to be written to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Write the stored data to the data set. The third argument is set to NULL</p>
 <p class="FM_ExampleCode"> &#160;&#160;* to specify contiguous data elements. The last argument must</p>
 <p class="FM_ExampleCode"> &#160;&#160;* be explicitly cast to a generic pointer since SDwritedata is designed</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* to write generic data. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP)data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;write_data</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH, RANK</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME = ’SDStemplate’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 16,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK &#160;&#160;&#160;&#160;= 2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_WRITE, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_WRITE = 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfselect, sfwdata, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer start(2), edges(2), stride(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer i, j</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer data(X_LENGTH, Y_LENGTH)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Data set data initialization. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 20 j = 1, Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do 10 i = 1, X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i, j) = i + j - 1</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">20 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_WRITE)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Attach to the first data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define the location and size of the data to be written</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to the data set. Note that setting values of the array stride to 1</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;specifies the contiguous writing of data.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the stored data to the data set named in SDS_NAME.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Note that the routine sfwdata is used instead of sfwcdata </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to write the numeric data.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading4">3.5.1.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Writing Slabs to an SDS Array</p>
 <p class="Body">To allow preexisting data to be modified, the HDF library does not prevent <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;from overwriting one slab with another. As a result, the calling program is responsible for managing any overlap when writing slabs. The HDF library will issue an error if a slab extends past the valid boundaries of the SDS array. However, appending data along an unlimited dimension is allowed.</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Writing a Slab of Data to an SDS.</p>
 <p class="Body">This example shows how to fill a 3-dimensional SDS array with data by writing series of 2-dimensional slabs to it.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SLABS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define SDS_NAME &#160;&#160;&#160;&#160;&#160;&quot;FilledBySlabs&quot;</p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;4</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;5</p>
 <p class="FM_ExampleCode">#define Z_LENGTH &#160;&#160;&#160;&#160;&#160;6</p>
 <p class="FM_ExampleCode">#define RANK &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 &#160;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 dim_sizes[3], start[3], edges[3];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 data[Z_LENGTH][Y_LENGTH][X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 zx_data[Z_LENGTH][X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i, j, k;</p>
 <p class="FM_ExampleCode">&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Data initialization. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (k = 0; k &lt; Z_LENGTH; k++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;for (j = 0; j &lt; Y_LENGTH; j++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i = 0; i &lt; X_LENGTH; i++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[k][j][i] = (i + 1) + (j + 1) + (k + 1);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_CREATE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Define dimensions of the array to be created.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[0] = Z_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[1] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[2] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the array with the name defined in SDS_NAME.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDcreate (sd_id, SDS_NAME, DFNT_INT32, RANK, dim_sizes);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Set the parameters start and edges to write &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;* a 6x4 element slab of data to the data set; note</p>
 <p class="FM_ExampleCode"> &#160;&#160;* that edges[1] is set to 1 to define a 2-dimensional slab</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* parallel to the ZX plane. &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;* start[1] (slab position in the array) is initialized inside</p>
 <p class="FM_ExampleCode"> &#160;&#160;* the for loop.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = Z_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[2] = X_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = start[2] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (j = 0; j &lt; Y_LENGTH; j++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;start[1] = j;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* Initialize zx_data buffer (data slab).</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;for ( k = 0; k &lt; Z_LENGTH; k++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for ( i = 0; i &lt; X_LENGTH; i++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zx_data[k][i] = data[k][j][i];</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Write the data slab into the SDS array defined in SDS_NAME. </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Note that the 3rd parameter is NULL which indicates that consecutive</p>
 <p class="FM_ExampleCode"> &#160;&#160;* slabs in the Y direction are written.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP)zx_data); </p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;write_slab</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*9 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*13 SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH, Z_LENGTH, RANK</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SLABS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME = ’FilledBySlabs’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z_LENGTH = 6,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK &#160;&#160;&#160;&#160;= 3)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_CREATE, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_CREATE = 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfcreate, sfwdata, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer dim_sizes(3), start(3), edges(3), stride(3)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer i, j, k, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer data(X_LENGTH, Y_LENGTH, Z_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer xz_data(X_LENGTH, Z_LENGTH)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Data initialization.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 30 k = 1, Z_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do 20 j = 1, Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do 10 i = 1, X_LENGTH</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i, j, k) = i + j + k </p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">20 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">30 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_CREATE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define dimensions of the array to be created. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes(1) = X_LENGTH &#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes(2) = Y_LENGTH &#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes(3) = Z_LENGTH &#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the data set with the name defined in SDS_NAME. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;sds_id = sfcreate(sd_id, SDS_NAME, DFNT_INT32, RANK, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set the parameters start and edges to write </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;a 4x6 element slab of data to the data set;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;note that edges(2) is set to 1 to define a 2 dimensional slab</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;parallel to the XZ plane;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;start(2) (slab position in the array) is initialized inside the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;for loop.</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(3) = Z_LENGTH</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(1) = 0 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(3) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(3) = 1</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 60 j = 1, Y_LENGTH</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;start(2) = j - 1 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the buffer xz_data (data slab).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;do 50 k = 1, Z_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;do 40 i = 1, X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;xz_data(i, k) = data(i, j, k)</p>
 <p class="FM_ExampleCode">40 &#160;&#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">50 &#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the data slab into SDS array defined in SDS_NAME. </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Note that the elements of array stride are set to 1 to</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;specify that the consecutive slabs in the Y direction are written.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, xz_data)</p>
 <p class="FM_ExampleCode">60 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Altering Values within an SDS Array.</p>
 <p class="Body">This example demonstrates how the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;can be used to alter the values of the elements in the 10th and 11th rows, at the 2nd column, in the SDS array created in the Example 1 and written in Example 2. FORTRAN-77 routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfwdata</span>&#160;is used to alter the elements in the 2nd row, 10th and 11th columns, to reflect the difference between C and Fortran internal storage.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 start[2], edges[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 new_data[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i, j;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize the SD interface with write access.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_WRITE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Select the first data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set up the start and edge parameters to write new element values</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* into 10th row, 2nd column place, and 11th row, 2nd column place. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 9; &#160;&#160;&#160;&#160;/* starting at 10th row &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 1; &#160;&#160;&#160;&#160;/* starting at 2nd column */</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = 2; &#160;&#160;&#160;&#160;/* rows 10th and 11th &#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = 1; &#160;&#160;&#160;&#160;/* column 2nd only &#160;&#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize buffer with the new values to be written.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;new_data[0] = new_data[1] = 1000; </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Write the new values. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP)new_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;alter_data</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_WRITE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFACC_WRITE = 2)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfselect, sfwdata, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer start(2), edges(2), stride(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer new_data(2) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_WRITE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the first data set.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the start, edge, and stride parameters to write </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;two elements into 2nd row, 10th column and 11th column places.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Specify 2nd row.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(1) = 1 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Specify 10th column.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(2) = 9 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(1) = 1 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Two elements are written along 2nd row.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(2) = 2 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the new values to be written.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;new_data(1) = 1000</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;new_data(2) = 1000</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the new values. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, new_data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading4">3.5.1.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_32191_3_5_1_3_Appending"></a>Appending Data to an SDS Array along an Unlimited Dimension</p>
 <p class="Body"><a name="IX_appending_data_to_a"></a>An SDS array can be made appendable, however, only along one dimension. This dimension must be specified as an <span class="Definition">appendable dimension</span> when it is created.</p>
 <p class="Body">In C, only the first element of the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate </span>parameter <span class="VarName">dim_sizes</span>&#160;(i.e., the dimension of the lowest rank or the slowest-changing dimension) can be assigned the value <span class="DefName">SD_UNLIMITED</span>&#160;(or <span class="DefName">0</span>) to make the first dimension unlimited. In FORTRAN-77, only the <span class="VarName">last </span>dimension (i.e., the dimension of the highest rank or the slowest-changing dimension) can be unlimited. In other words, in FOR&#173;TRAN-77 <span class="VarName">dim_sizes(rank)</span>&#160;must be set to the value <span class="DefName">SD_UNLIMITED</span>&#160;to make the last dimension appendable. </p>
 <p class="Body">To append data to a data set without overwriting previously-written data, the user must specify the appropriate coordinates in the <span class="VarName">start</span>&#160;parameter of the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;routine. For example, if 15 data elements have been written to an unlimited dimension, appending data to the array requires a <span class="VarName">start</span>&#160;coordinate of 15. Specifying a starting coordinate less than the current number of elements written to the unlimited dimension will result in data being overwritten. In either case, all of the coordi&#173;nates in the array except the one corresponding to the unlimited dimension must be equal to or less than the lengths of their corresponding dimensions.</p>
 <p class="Body">Any time an unlimited dimension is appended to, the HDF library will automatically adjust the dimension record to the new length. If the newly-appended data begins beyond the previous length of the dimension, the locations between the old data and the beginning of the newly-appended data are initialized to the assigned fill value if there is one defined by the user, or the default fill value if none is defined. Refer to <a href="#XREF_14160_3_10_5_Fill_Values">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for a discussion of fill value.</p>
 <p class="Heading4">3.5.1.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_10708_SDisrecord"></a>Determining whether an SDS Array is Appendable: SDisrecord</p>
 <p class="Body"><a name="IX_determining_whether_an"></a><a name="IX_description_29"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisrec</span><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">ord </span>determines whether the data set identified by the parameter <span class="VarName">sds_id</span>&#160;is appendable, which means that the slowest-changing dimension of the SDS array is declared unlimited when the data set is created. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisrecord</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDisrecord(sds_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfisrcrd(sds_id)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisrecord</span>&#160;returns <span class="DefName">TRUE</span>&#160;(or <span class="DefName">1</span>) when the data set specified by <span class="VarName">sds_id</span>&#160;is appendable and <span class="DefName">FALSE</span>&#160;(or <span class="DefName">0</span>) otherwise. The parameter of this routine is defined in <a href="#XREF_10314_TABLE_3E">Table 3E</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 3E<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_10314_TABLE_3E"></a>SDisrecord Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 112.393pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 161.207pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDisrecord</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfisrcrd)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 161.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading4"><a name="IX_setting_the_for"></a>3.5.1.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_22293_SDsetblocksize"></a>Setting the Block Size: SDsetblocksize</p>
 <p class="Body"><a name="IX_description_30"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetblocksize </span>sets the size of the blocks used for storing the data for unlimited dimension data sets. This is used only when creating new data sets; it does not have any affect on existing data sets. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetblocksize(sds_id, block_size);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsblsz(sds_id, block_size)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetblocksize</span>&#160;must be called after <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;and before <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>. The parame&#173;ter <span class="VarName">block_size</span> should be set to a multiple of the desired buffer size.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetblocksize</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_14444_TABLE_3F">Table 3F</a>.</p>
 <p class="Heading4"><a name="IX_setting_the"></a>3.5.1.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_37572_SDsetaccesstype"></a>Setting the I/O Access Type of an SDS: SDsetaccesstype</p>
 <p class="Body"><a name="IX_description_31"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetaccesstype </span>sets the type of I/O (serial, parallel,...) for accessing the data of the data set iden&#173;tified by <span class="VarName">sds_id</span>. &#160;Valid values of <span class="VarName">access_types</span>&#160;are <span class="DefName">DFACC_SERIAL</span>&#160;(or <span class="DefName">1</span>), <span class="DefName">DFACC_PARALLEL</span>&#160;(or <span class="DefName">11</span>), and <span class="DefName">DFACC_DEFAULT</span>&#160;(or <span class="DefName">0</span>.) &#160;The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetaccesstype(sds_id, accesstype);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sdfsacct(sds_id, accesstype)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetaccesstype</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) if the SDS data can be accessed via accesstype or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. Its parameters are further described in <a href="#XREF_14444_TABLE_3F">Table 3F</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_5"></a><a name="IX_parameter_list_4"></a><span class="StepNumber">TABLE 3F<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_14444_TABLE_3F"></a>SDsetblocksize and SDsetaccesstype Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 138.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 135.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 75.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetblocksize</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsblsz)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 75.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">block_size</p>
</td>
  <td style="width : 75.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Block size</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetaccesstype</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sdfsacct)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 75.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">accesstype</p>
</td>
  <td style="width : 75.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 63.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">I/O access type</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 5.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Appending Data to an SDS Array with an Unlimited Dimension.</p>
 <p class="Body">This example creates a 10x10 SDS array with one unlimited dimension and writes data to it. The file is reopened and the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisrecord/sfisrcrd</span>&#160;is used to determine whether the selected SDS array is appendable. Then new data is appended, starting at the 11th row.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDSUNLIMITED.hdf&quot;</p>
 <p class="FM_ExampleCode">#define SDS_NAME &#160;&#160;&#160;&#160;&#160;&quot;AppendableData&quot;</p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;10</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;10</p>
 <p class="FM_ExampleCode">#define RANK &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 dim_sizes[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 data[Y_LENGTH][X_LENGTH], append_data[X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 start[2], edges[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i, j;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Data initialization.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;for (j = 0; j &lt; Y_LENGTH; j++) </p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;for (i = 0; i &lt; X_LENGTH; i++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data[j][i] = (i + 1) + (j + 1);</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_CREATE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Define dimensions of the array. Make the first dimension </p>
 <p class="FM_ExampleCode"> &#160;&#160;* appendable by defining its length to be unlimited.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[0] = SD_UNLIMITED;</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the array data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDcreate (sd_id, SDS_NAME, DFNT_INT32, RANK, dim_sizes);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Define the location and the size of the data to be written </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* to the data set. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Write the data. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP)data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the array data set, terminate access </p>
 <p class="FM_ExampleCode"> &#160;&#160;* to the SD interface, and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Store the array values to be appended to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (i = 0; i &lt; X_LENGTH; i++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;append_data[i] = 1000 + i;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Reopen the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_WRITE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Select the first data set. </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;sds_index = 0; </p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Check if selected SDS is unlimited. If it is not, then terminate access</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* to the SD interface and close the file. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;if ( SDisrecord (sds_id) ) </p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Define the location of the append to start at the first column </p>
 <p class="FM_ExampleCode"> &#160;&#160;* of the 11th row of the data set and to stop at the end of the</p>
 <p class="FM_ExampleCode"> &#160;&#160;* eleventh row.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Append data to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP)append_data);</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program append_sds</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*14 &#160;SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH, RANK</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;&#160;(FILE_NAME = ’SDSUNLIMITED.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME = ’AppendableData’,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 10, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 10,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK &#160;&#160;&#160;&#160;= 2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;DFACC_CREATE, DFACC_WRITE, SD_UNLIMITED,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;&#160;(DFACC_CREATE = 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFACC_WRITE &#160;= 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SD_UNLIMITED = 0,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = &#160;&#160;24)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer sfstart, sfcreate, sfwdata, sfselect </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer dim_sizes(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer start(2), edges(2), stride(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer i, j</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer data (X_LENGTH, Y_LENGTH), append_data(X_LENGTH)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Data initialization.</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 20 j = 1, Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do 10 i = 1, X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i, j) = i + j</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">20 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the file and initialize the SD interface. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_CREATE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define dimensions of the array. Make the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;last dimension appendable by defining its length as unlimited.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_sizes(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_sizes(2) = SD_UNLIMITED</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the array data set. </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;sds_id = sfcreate(sd_id, SDS_NAME, DFNT_INT32, RANK, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define the location and the size of the data to be written</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to the data set. Note that the elements of array stride are</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;set to 1 for contiguous writing. &#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set, terminate access</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to the SD interface, and close the file. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Store the array values to be appended to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 30 i = 1, X_LENGTH</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;append_data(i) = 1000 + i - 1 </p>
 <p class="FM_ExampleCode">30 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Reopen the file and initialize the SD. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_WRITE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the first data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;sds_index = 0 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define the location of the append to start at the 11th </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;column of the 1st row and to stop at the end of the 10th row.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Append the data to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, append_data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading3">3.5.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_22986_SDsetcompress"></a>Compressing SDS Data: SDsetcompress</p>
 <p class="Body"><a name="IX_compression_methods"></a><a name="IX_description_32"></a><a name="IX_compressing_data_in_a"></a>The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span>&#160;routine compresses an existing data set or creates a new compressed data set. It is a simplified interface to the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HCcreate</span>&#160;routine, and should be used instead of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HCcreate</span>&#160;unless the user is familiar with the lower-level routines. </p>
 <p class="Body">The compression algorithms currently supported by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span> are:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Adaptive Huffman</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>GZIP &quot;deflation&quot; (Lempel/Ziv-77 dictionary coder)</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Run-length encoding</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>NBIT</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Szip</p>
 <p class="Body">The syntax of the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetcompress(sds_id, comp_type, &amp;c_info);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfscompress(sds_id, comp_type, comp_prm)</p>
 <p class="Body">The parameter <span class="VarName">comp_type</span> specifies the compression type definition and is set to</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_RLE</span>&#160;(or 1) for run-length encoding (RLE) </p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_SKPHUFF</span>&#160;(or 3) for Skipping Huffman </p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_DEFLATE</span>&#160;(or 4) for GZIP compression </p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_SZIP</span> (or 5) for Szip compression</p>
 <p class="Body">Compression information is specified by the parameter <span class="VarName">c_info</span>&#160;in C, and by the parameter <span class="VarName">comp_prm</span>&#160;in FORTRAN-77. The parameter <span class="VarName">c_info</span>&#160;is a pointer to a union structure of type <span class="VarName">comp_info. &#160;</span>Refer to the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span>&#160;entry in the <span class="Citation">HDF Reference Manual</span>&#160;for the description of the <span class="VarName">comp_info</span> structure.</p>
 <p class="Body">If <span class="VarName">comp_type</span>&#160;is set to <span class="DefName">COMP_CODE_RLE</span>, the parameters <span class="VarName">c_info</span>&#160;and <span class="VarName">comp_prm</span>&#160;are not used; <span class="VarName">c_info</span>&#160;can be set to <span class="DefName">NULL</span>&#160;and <span class="VarName">comp_prm</span> can be undefined.</p>
 <p class="Body">If <span class="VarName">comp_type</span>&#160;is set to <span class="DefName">COMP_CODE_SKPHUFF</span>, then the structure <span class="VarName">skphuff</span>&#160;in the union <span class="VarName">comp_info</span>&#160;in C (<span class="VarName">comp_prm(1)</span> in FORTRAN-77) must be provided with the size, in bytes, of the data elements.</p>
 <p class="Body">If <span class="VarName">comp_type</span>&#160;is set to <span class="DefName">COMP_CODE_DEFLATE</span>, the deflate structure in the union <span class="VarName">comp_info</span>&#160;in C (<span class="VarName">comp_prm(1)</span>&#160;in FORTRAN-77) must be provided with the information about the compression effort.</p>
 <p class="Body">If <span class="VarName">comp_type</span>&#160;is set to <span class="DefName">COMP_CODE_SZIP</span>, the Szip options mask and the number of pixels per block in a chunked and Szip-compressed dataset must be specified in <span class="Subscript">c_info.szip.options_mask</span>&#160;and <span class="Subscript">c_info.szip.pixels_per_block</span>&#160;in C, and <span class="VarName">comp_prm(1)</span>&#160;and <span class="VarName">comp_prm(2)</span> in Fortran, respec&#173;tively.</p>
 <p class="Body">For example, to compress signed 16-bit integer data using the adaptive Huffman algorithm, the following definition and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span> call are used.</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>comp_info c_info;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>c_info.skphuff.skp_size = sizeof(int16);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetcompress(sds_id, COMP_CODE_SKPHUFF, &amp;c_info);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>comp_prm(1) = 2</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>COMP_CODE_SKPHUFF = 3</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfscompress(sds_id, COMP_CODE_SKPHUFF, comp_prm)</p>
 <p class="Body">To compress a data set using the gzip deflation algorithm with the maximum effort specified, the following definition and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span> call are used.</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>comp_info c_info;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>c_info.deflate.level = 9;</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetcompress(sds_id, COMP_CODE_DEFLATE, &amp;c_info);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>comp_prm(1) = 9</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>COMP_CODE_DEFLATE = 4</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfscompress(sds_id, COMP_CODE_DEFLATE, comp_prm)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span> functionality is currently limited to the following:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Write the compressed data, in its entirety, to the data set. The data set is built in-core then written in a single write operation.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Compression is not supported on an SDS with unlimited dimension. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span>&#160;will return FAIL for such SDS and any subsequent writing to this SDS will write uncompressed data.</p>
 <p class="Body">The existing compression algorithms supported by HDF do <span style="font-style : italic; ">not</span>&#160;allow partial modification to a compressed datastream. &#160;In addition, compressed data sets cannot be stored in external files (see <a href="#XREF_88578_3_5_3_External">Section 3.5.3</a>.)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The C version parameters are further described in <a href="#XREF_22051_TABLE_3G">Table 3G</a>&#160;and the FORTRAN-77 version parameters are further described in <a href="#XREF_36738_TABLE_3H">Table 3H</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_7"></a><a name="IX_parameter_list_6"></a><span class="StepNumber">TABLE 3G<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_22051_TABLE_3G"></a>SDsetcompress Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td style="width : 82.586pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 198.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetcompress</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">&nbsp;</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_type</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compression method</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">c_info</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_info*</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Pointer to compression information structure</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><a name="IX_parameter_list_8"></a><span class="StepNumber">TABLE 3H<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_36738_TABLE_3H"></a>sfscompress Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_TableHead">&nbsp;</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td style="width : 82.586pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 198.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfscompress</p>
  <p class="CellFunction">&nbsp;</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_type</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compression method</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_prm</p>
</td>
  <td rowspan="2" style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td rowspan="2" style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compression parameters array</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 6.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Compressing SDS Data.</p>
 <p class="Body">This example uses the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress/sfscompress</span>&#160;to compress SDS data with the GZIP compression method. See comments in the program regarding the use of the Skipping Huffman or RLE compression methods.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&#160;&quot;SDScompressed.hdf&quot;</p>
 <p class="FM_ExampleCode">#define SDS_NAME &#160;&#160;&#160;&#160;&#160;&#160;&quot;SDSgzip&quot;</p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;&#160;5</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;&#160;16</p>
 <p class="FM_ExampleCode">#define RANK &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;&#160;&#160;&#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;comp_type; &#160;&#160;&#160;/* Compression flag */</p>
 <p class="FM_ExampleCode"> &#160;&#160;comp_info c_info; &#160;&#160;/* Compression structure */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;start[2], edges[2], dim_sizes[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;data[Y_LENGTH][X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;&#160;&#160;&#160;&#160;i, j;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Buffer array data and define array dimensions.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;for (j = 0; j &lt; Y_LENGTH; j++) </p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (i = 0; i &lt; X_LENGTH; i++)</p>
 <p class="FM_ExampleCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>data[j][i] = (i + j) + 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_sizes[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_CREATE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create the data set with the name defined in SDS_NAME. </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDcreate (sd_id, SDS_NAME, DFNT_INT32, RANK, dim_sizes);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Ininitialize compression structure element and compression</p>
 <p class="FM_ExampleCode"> &#160;&#160;* flag for GZIP compression and call SDsetcompress.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;To use the Skipping Huffman compression method, initialize</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_type = COMP_CODE_SKPHUFF</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_info.skphuff.skp_size = value</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;To use the RLE compression method, initialize</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_type = COMP_CODE_RLE</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;No structure element needs to be initialized.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;comp_type = COMP_CODE_DEFLATE;</p>
 <p class="FM_ExampleCode"> &#160;&#160;c_info.deflate.level = 6;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status = SDsetcompress (sds_id, comp_type, &amp;c_info); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Define the location and size of the data set</p>
 <p class="FM_ExampleCode"> &#160;&#160;* to be written to the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Write the stored data to the data set. The last argument </p>
 <p class="FM_ExampleCode"> &#160;&#160;* must be explicitly cast to a generic pointer since SDwritedata</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* is designed to write generic data. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP)data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="codeExample">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;write_compressed_data</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*17 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;&#160;SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH, RANK</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;&#160;(FILE_NAME = ’SDScompressed.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME = ’SDSgzip’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 16,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK &#160;&#160;&#160;&#160;= 2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;DFACC_CREATE, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;&#160;(DFACC_CREATE = 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;COMP_CODE_DEFLATE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;&#160;(COMP_CODE_DEFLATE = 4)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;DEFLATE_LEVEL</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;&#160;(DEFLATE_LEVEL = 6)</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use Skipping Huffman compression method, declare </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;COMP_CODE_SKPHUFF</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;parameter(COMP_CODE_SKPHUFF = 3) </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use RLE compression method, declare</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;COMP_CODE_RLE</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;parameter(COMP_CODE_RLE = 1)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfcreate, sfwdata, sfendacc, sfend,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;sfscompress</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;sd_id, sds_id, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;start(2), edges(2), stride(2), dim_sizes(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;comp_type</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;comp_prm(1)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;data(X_LENGTH, Y_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;i, j</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Buffer array data and define array dimensions. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 20 j = 1, Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;do 10 i = 1, X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data(i, j) = i + j - 1</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">20 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_sizes(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_sizes(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_CREATE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the data set with the name SDS_NAME. &#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;sds_id = sfcreate(sd_id, SDS_NAME, DFNT_INT32, RANK, dim_sizes) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize compression parameter (deflate level)</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;and call sfscompress function</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;For Skipping Huffman compression, comp_prm(1) should be set</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to skipping sizes value (skp_size).</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;comp_type &#160;&#160;= COMP_CODE_DEFLATE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;comp_prm(1) = deflate_level</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status &#160;&#160;&#160;&#160;&#160;= sfscompress(sds_id, comp_type, comp_prm(1))</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define the location and size of the data that will be written to</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the stored data to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the &#160;data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading3">3.5.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_88578_3_5_3_External"></a>External File Operations</p>
 <p class="Body"><a name="IX_definition_2"></a><a name="IX_definition_1"></a><a name="IX_writing_to_a_1"></a>The HDF library provides routines to store SDS arrays in an <span class="Definition">external file</span>&#160;that is separate from the <span class="Definition">primary file</span>&#160;containing the metadata for the array. Such an SDS array is called an <span class="Definition">external SDS&#160;array</span>. With external arrays, it is possible to link data sets in the same HDF file to multiple external files or data sets in different HDF files to the same external file. </p>
 <p class="Body">External arrays are functionally identical to arrays in the primary data file. The HDF library keeps track of the beginning of the data set and adds data at the appropriate position in the external file. When data is written or appended along a specified dimension, the HDF library writes along that dimension in the external file and updates the appropriate dimension record in the primary file.</p>
 <p class="Body"><a name="IX_creating_a_data_set_in_a"></a>There are two methods for creating external SDS arrays. The user can create a new data set in an external file or move data from an existing internal data set to an external file. In either case, only the array values are stored externally, all metadata remains in the primary HDF file. </p>
 <p class="Body">When an external array is created, a sufficient amount of space is reserved in the external file for the entire data set. The data set will begin at the specified byte offset and extend the length of the data set. The write operation will overwrite the target locations in the external file. The external file may be of any format, provided the data types, byte ordering, and dimension ordering are sup&#173;ported by HDF. However, the primary file must be an HDF file.</p>
 <p class="Body">Routines for manipulating external SDS arrays can only be used with HDF files. Unidata-format&#173;ted netCDF files are not supported by these routines.</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:4.00pt; padding-right:6.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:171.58pt; width:100%; max-width:342.00pt;" cellspacing="0" align="left">
  <tr style=" height : 16.00pt;">
  <td style="width : 342.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_NoteBox"><span style="font-weight : bold; ">Note: </span>&#160;Compressed data sets (see <a href="#XREF_22986_SDsetcompress">Section 3.5.2</a>) cannot be stored in external files.</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading4">3.5.3.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Specifying the Directory Search Path of an External File: HXsetdir</p>
 <p class="Body"><a name="IX_specifying_the_directory"></a>There are three filesystem locations the HDF external file routines check when determining the location of an external file. They are, in order of search precedence:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The directory path specified by the last call to the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span> routine.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The directory path specified by the $HDFEXTDIR shell environment variable.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The file system locations searched by the standard <span style="font-weight : bold; ">open(3)</span> routine.</p>
 <p class="Body">The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = HXsetdir(dir_list);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = hxisdir(dir_list, dir_length)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span> has one argument, a string specifying the directory list to be searched. This list can con&#173;sist of one directory name or a set of directory names separated by colons. The FORTRAN-77 version of this routine takes an additional argument, <span class="VarName">dir_length</span>, which specifies the length of the directory list string.</p>
 <p class="Body">If an error condition is encountered, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span>&#160;leaves the directory search path unchanged. The directory search path specified by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span>&#160;remains in effect throughout the scope of the calling program.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span>&#160;are described in <a href="#XREF_29925_TABLE_3I_HXsetdir">(See Table&nbsp;3I on page&nbsp;54)</a>.</p>
 <p class="Heading4"><a name="IX_specifying_the_location"></a>3.5.3.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Specifying the Location of the Next External File to be Created: HXsetcreatedir</p>
 <p class="Body"><a name="IX_description_33"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcreatedir</span>&#160;specifies the directory location of the next external file to be created. It overrides the directory location specified by $HDFEXTCREATEDIR and the locations searched by the <span style="font-weight : bold; ">open(3)</span>&#160;call in the same manner as <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetdir</span>. Specifically, the search precedence is:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The directory specified by the last call to the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcreatedir</span> routine.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The directory specified by the $HDFEXTCREATEDIR shell environment variable.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The locations searched by the standard <span style="font-weight : bold; ">open(3)</span> routine.</p>
 <p class="Body">The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcreatedir</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = HXsetcreatedir(dir);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = hxiscdir(dir, dir_length)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcreatedir</span>&#160;has one argument, the directory location of the next external file to be created. The FORTRAN-77 version of this routine takes an additional argument, <span class="VarName">dir_length</span>, which speci&#173;fies the length of the directory list string. If an error is encountered, the directory location is left unchanged.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcreatedir</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcre&#173;atedir</span>&#160;are described in <a href="#XREF_29925_TABLE_3I_HXsetdir">Table 3I</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_9"></a><span class="StepNumber">TABLE 3I<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_29925_TABLE_3I_HXsetdir"></a>HXsetdir and HXsetcreatedir Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 115.200pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 158.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">HXsetdir</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(hxisdir)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dir_list</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 158.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Directory list to be searched</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dir_length</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Not applicable</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Length of the <span class="Subscript">dir_list</span> string</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">HXsetcreatedir</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(hxiscdir)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dir</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 158.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Directory location of the next external file to be cre&#173;ated</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dir_length</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Not applicable</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Length of the <span class="Subscript">dir</span> string</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading4">3.5.3.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_17173_SDsetexternalfile"></a>Creating a Data Set with Data Stored in an External File: SDsetexternalfile</p>
 <p class="Body"><a name="IX_creating_a_data_set_in_a_1"></a>Creating a data set in an external file involves the following steps:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Create the data set.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Specify that an external data file is to be used.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Write data to the data set.</p>
 <p class="Step"><span class="StepNumber">4.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the data set. </p>
 <p class="Body">To create a data set with data stored in an external file, the calling program must make the follow&#173;ing calls. </p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = SDcreate(sd_id, name, data_type, rank, dim_sizes);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetexternalfile(sds_id, filename, offset);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDwritedata(sds_id, start, stride, edges, data);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDendaccess(sds_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = sfcreate(sd_id, name, data_type, rank, dim_sizes)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsextf(sds_id, filename, offset)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfwdata(sds_id, start, stride, edges, data)</p>
 <p class="FM_syntaxorbot"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfwcdata(sds_id, start, stride, edges, data)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfendacc(sds_id)</p>
 <p class="Body"><a name="IX_description_34"></a>For a newly-created data set, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetexternalfile</span>&#160;marks the SDS identified by <span class="VarName">sds_id</span>&#160;as one whose data is to be written to an external file. It does not actually write data to an external file; it marks the data set as an external data set for all subsequent <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span> operations.</p>
 <p class="Body">Note that data can only be moved once for any given data set, i.e., <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetexternalfile</span>&#160;can only be called once after a data set has been created. &#160;It is the user's responsibility to make sure that the external data file is kept with the primary HDF file.</p>
 <p class="Body">The parameter <span class="VarName">filename</span>&#160;is the name of the external data file and <span class="VarName">offset</span>&#160;is the number of bytes from the beginning of the external file to the location where the first byte of data should be written. If a file with the name specified by <span class="VarName">filename</span>&#160;exists in the current directory search path, HDF will access it as the external file. If the file does not exist, HDF will create one in the directory named in the last call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcreatefile</span>. If an absolute pathname is specified, the external file will be created at the location specified by the pathname, overriding the location specified by the last call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">HXsetcreatefile</span>. Use caution when writing to existing external or primary files since the HDF library starts the write operation at the specified offset without determining whether data is being overwritten.</p>
 <p class="Body">Once the name of an external file is established, it cannot be changed without breaking the associ&#173;ation between the data set’s metadata and the data it describes.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetexternalfile</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetex&#173;ternalfile</span>&#160;are described in <a href="#XREF_40436_TABLE_3J">Table 3J</a>.</p>
 <p class="Heading4">3.5.3.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_15961_SDgetexternalfile"></a>Getting External File Information of a Data Set: SDgetexternalinfo</p>
 <p class="Body"><a name="IX_getting_information"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;retrieves external file information of a data set, when the data set has external element. &#160;The information includes the external file’s name, the position, where the data set’s data had been written in the external file, and the length of the external data. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;will return <span class="DefName">0</span> if the data set does not have external element.</p>
 <p class="Body">The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetexternalinfo(sds_id, buf_size, filename, &amp;offset, &amp;length);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Currently unavailable</p>
 <p class="Body"><a name="IX_description_35"></a>The application must provide sufficient buffer for the external file name. &#160;When the external file name is available and <span class="VarName">buf_size</span>&#160;is 0, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;simply returns the length of the external file name. &#160;Thus, application can call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;passing in 0 for <span class="VarName">buf_size</span> first, then allo&#173;cate the buffer sufficiently before calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;again passing in the proper length for <span class="VarName">buf_size </span>and appropriately allocated buffer <span class="VarName">filename</span>. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;stores the external file name in the buffer <span class="VarName">filename</span>&#160;up to the name’s length or the value in <span class="VarName">buf_size</span>, whichever smaller.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;stores in the parameter <span class="VarName">offset</span>&#160;the number of bytes from the beginning of the external file to the location where the first byte of data had been written and in the parameter <span class="VarName">length</span> the length of the data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span><span style="font-weight : bold; ">&#160;</span>returns one of the following values:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>the actual length of the external file name or the length of the retrieved file name, if there is external element</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="DefName">0</span>, if there is no external element</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>), if failure occurs</p>
 <p class="Body">The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetexternalinfo</span>&#160;are described in <a href="#XREF_40436_TABLE_3J">(See Table&nbsp;3J on page&nbsp;56)</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_10"></a><span class="StepNumber">TABLE 3J<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_40436_TABLE_3J"></a>SDsetexternalfile Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.41pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 100.914pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 172.428pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetexternalfile</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsextf)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">filename</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the file to contain the external data set</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Offset in bytes from the beginning of the external file to where the SDS data will be written</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetexternalinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(unvailable)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">buf_size</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uintn</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size of buffer for external file name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">filename</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for external file name</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">*int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Offset in bytes from the beginning of the external file to where the SDS data had been written</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">length</p>
</td>
  <td style="width : 43.314pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">*int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 172.428pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Length of the data written in the external file</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading4">3.5.3.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Moving Existing Data to an External File</p>
 <p class="Body"><a name="IX_moving_data_to_a"></a>Data can be moved from a primary file to an external file. The following steps perform this task:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Select the data set.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Specify the external data file.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Terminate access to the data set. </p>
 <p class="Body">To move data set data to an external file, the calling program must make the following calls:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = SDselect(sd_id, sds_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetexternalfile(sds_id, filename, offset);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDendaccess(sds_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsextf(sds_id, filename, offset)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfendacc(sds_id)</p>
 <p class="Body">For an existing data set, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetexternalfile</span>&#160;moves the data to the external file. Any data in the external file that occupies the space reserved for the external array will be overwritten as a result of this operation. Data of an existing data set in the primary file can only be moved to the external file once. During the operation, the data is written to the external file as a contiguous stream regardless of how it is stored in the primary file. Because data is moved as is, any unwritten loca&#173;tions in the data set are preserved in the external file. Subsequent read and write operations per&#173;formed on the data set will access the external file.</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 7.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Moving Data to the External File.</p>
 <p class="Body">This example illustrates the use of the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetexternalfile/sfsextf</span>&#160;to move the SDS data written in Example 2 to the external file.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define EXT_FILE_NAME &quot;ExternalSDS&quot;</p>
 <p class="FM_ExampleCode">#define OFFSET &#160;&#160;&#160;&#160;&#160;&#160;&#160;24</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index, offset;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_WRITE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Select the first data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;sds_index = 0; &#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create a file with the name EXT_FILE_NAME and move the data set</p>
 <p class="FM_ExampleCode"> &#160;&#160;* values into it, starting at byte location OFFSET.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDsetexternalfile (sds_id, EXT_FILE_NAME, OFFSET);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set, SD interface, and file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;write_extfile</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;implicit none </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 EXT_FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;OFFSET</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_WRITE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME &#160;&#160;&#160;&#160;&#160;= ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EXT_FILE_NAME &#160;= ’ExternalSDS’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;OFFSET &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;= 24,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFACC_WRITE &#160;&#160;&#160;= 2)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfselect, sfsextf, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, offset</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_WRITE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the first data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create a file with the name EXT_FILE_NAME and move the data set</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;into it, starting at byte location OFFSET.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfsextf(sds_id, EXT_FILE_NAME, OFFSET)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading2">3.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_13107_SDreaddata"></a>Reading Data from an SDS Array: SDreaddata</p>
 <p class="Body"><a name="IX_reading_from_a_1"></a><a name="IX_reading_from_a"></a>Data of an SDS array can be read as an entire array, a subset of the array, or a set of samples of the array. SDS data is read from an external file in the same way that it is read from a primary file; whether the SDS array is stored in an external file is transparent to the user. Reading data from an SDS array involves the following steps:</p>
 <p class="FM_1Step"><span class="StepNumber">1.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Select the data set.</p>
 <p class="Step"><span class="StepNumber">2.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Define the portion of the data to be read.</p>
 <p class="Step"><span class="StepNumber">3.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Read data portion as defined.</p>
 <p class="Body">To read data from an SDS array, the calling program must contain the following function calls:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = SDselect(sd_id, sds_index);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDreaddata(sds_id, start, stride, edges, data);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfrdata(sds_id, start, stride, edges, data)<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfrcdata(sds_id, start, stride, edges, data)</p>
 <p class="Body">Note that step 2 is not illustrated in the function call syntax; it is carried out by assigning values to the parameters <span class="VarName">start</span>, <span class="VarName">stride</span>, and <span class="VarName">edges</span>&#160;before the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span> is called in step 3.</p>
 <p class="Body"><a name="IX_description_36"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;reads the data according to the definition specified by the parameters <span class="VarName">start</span>, <span class="VarName">stride</span>, and <span class="VarName">edges</span>&#160;and stores the data into the buffer provided, <span class="VarName">data</span>. The argument <span class="VarName">sds_id</span> is the SDS iden&#173;tifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>. As with <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>, the arguments <span class="VarName">start</span>, <span class="VarName">stride</span>, and <span class="VarName">edges</span> describe the starting location, the number of elements to skip after each read, and the num&#173;ber of elements to be read, respectively, for each dimension. For additional information on the parameters <span class="VarName">start</span>, <span class="VarName">stride</span>, and <span class="VarName">edges</span>, refer to <a href="#XREF_20018_SDwritedata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body">There are two FORTRAN-77 versions of this routine: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrdata</span><span style="font-weight : bold; ">&#160;</span>reads numeric data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrcdata</span><span style="font-weight : bold; ">&#160;</span>reads character data. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>), including the situation when the data set does not contain data, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;are further described in <a href="#XREF_33783_TABLE_3K">Table 3K</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_11"></a><span class="StepNumber">TABLE 3K<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_33783_TABLE_3K"></a>SDreaddata Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 57.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name </p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FOR&#173;TRAN-77)</p>
</td>
  <td rowspan="2" style="width : 48.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td colspan="2" style="width : 149.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 135.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 41.00pt;">
  <td style="width : 59.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 57.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreaddata</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfrdata/</p>
  <p class="CellFunction">sfrcdata)</p>
</td>
  <td style="width : 48.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 59.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 48.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">start</p>
</td>
  <td style="width : 59.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32[]</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array containing the position at which the read will start for each dimension</p>
</td>
</tr>
  <tr style=" height : 31.00pt;">
  <td style="width : 48.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">stride</p>
</td>
  <td style="width : 59.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32[]</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array containing the number of data loca&#173;tions the current location is to be moved for&#173;ward before the next read</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 48.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">edges</p>
</td>
  <td style="width : 59.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32[]</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array containing the number of data ele&#173;ments to be read along each dimension</p>
</td>
</tr>
  <tr style=" height : 31.00pt;">
  <td style="width : 48.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data</p>
</td>
  <td style="width : 59.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer the data will be read into</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 8.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Reading from an SDS.</p>
 <p class="Body">This example uses the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata/sfrdata</span>&#160;to read the data that has been written in Example 2, modified in Example 4, and moved to the external file in the Example 7. Note that the original file SDS.hdf that contains the SDS metadata and the external file ExternalSDS that con&#173;tains the SDS raw data should reside in the same directory. The fact that raw data is in the external file is transparent to the user’s program.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;5</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;16</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 start[2], edges[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 data[Y_LENGTH][X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i, j;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file for reading and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_READ);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Select the first data set.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Set elements of array start to 0, elements of array edges </p>
 <p class="FM_ExampleCode"> &#160;&#160;* to SDS dimensions,and use NULL for the argument stride in SDreaddata</p>
 <p class="FM_ExampleCode"> &#160;&#160;* to read the entire data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read entire data into data array.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreaddata (sds_id, start, NULL, edges, (VOIDP)data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Print 10th row; the following numbers should be displayed.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10 1000 12 13 14</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (j = 0; j &lt; X_LENGTH; j++) printf (&quot;%d &quot;, data[9][j]);</p>
 <p class="FM_ExampleCode">   printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle"> &#160;&#160;&#160;&#160;&#160;FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;read_data</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME &#160;= ’SDS.hdf’,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 5, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 16)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_READ, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_READ = 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfselect, sfrdata, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer start(2), edges(2), stride(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer data(X_LENGTH, Y_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer j</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_READ)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the first data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set elements of the array start to 0, elements of the array edges to </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;SDS dimensions, and elements of the array stride to 1 to read the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;entire data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read entire data into data array. Note that sfrdata is used</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to read the numeric data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrdata(sds_id, start, stride, edges, data)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print 10th column; the following numbers are displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10 1000 12 13 14</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) (data(j,10), j = 1, X_LENGTH)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 9.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Reading Subsets of an SDS.</p>
 <p class="Body">This example shows how parameters <span class="VarName">start</span>, <span class="VarName">stride</span>, and <span class="VarName">edges</span>&#160;of the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadata/sfrdata</span>&#160;can be used to read three subsets of an SDS array.</p>
 <p class="Body" style="margin-top  : 5.000pt; font-family : Courier New; font-weight : bold; font-size  : 9.0pt;"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span></p>
 <p class="FM_List10pt">For the first subset, the program reads every 3rd element of the 2nd column starting at the 4th row of the data set created in Example 2 and modified in Examples 4 and 7.</p>
 <p class="FM_List10pt">For the second subset the program reads the first 4 elements of the 10th row.</p>
 <p class="FM_List10pt">For the third subset, the program reads from the same data set every 6th element of each column and 4th element of each row starting at 1st column, 3d row.</p>
 <p class="Body"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN-77:</span>&#160;</p>
 <p class="FM_List10pt">Fortran program reads transposed data to reflect the difference in C and Fortran inter&#173;nal storage.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define SUB1_LENGTH &#160;&#160;5</p>
 <p class="FM_ExampleCode">#define SUB2_LENGTH &#160;&#160;4</p>
 <p class="FM_ExampleCode">#define SUB3_LENGTH1 &#160;2 </p>
 <p class="FM_ExampleCode">#define SUB3_LENGTH2 &#160;3 </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 start[2], edges[2], stride[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sub1_data[SUB1_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sub2_data[SUB2_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sub3_data[SUB3_LENGTH2][SUB3_LENGTH1];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i, j;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file for reading and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_READ);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Select the first data set.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reading the first subset.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set elements of start, edges, and stride arrays to read</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* every 3rd element in the 2nd column starting at 4th row. &#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 3; &#160;&#160;/* 4th row */</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 1; &#160;&#160;/* 2nd column */</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = SUB1_LENGTH; /* SUB1_LENGTH elements are read along 2nd column*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;stride[0] = 3; &#160;/* every 3rd element is read along 2nd column */</p>
 <p class="FM_ExampleCode"> &#160;&#160;stride[1] = 1;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read the data from the file into sub1_data array.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreaddata (sds_id, start, stride, edges, (VOIDP)sub1_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Print what we have just read; the following numbers should be displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5 8 1000 14 17 &#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (j = 0; j &lt; SUB1_LENGTH; j++) printf (&quot;%d &quot;, sub1_data[j]);</p>
 <p class="FM_ExampleCode">   printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reading the second subset.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set elements of start and edges arrays to read</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* first 4 elements of the 10th row. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 9; &#160;/* 10th row &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 0; &#160;/* 1st column */</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;edges[0] = 1; </p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = SUB2_LENGTH; /* SUB2_LENGTH elements are read along 10th row */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read data from the file into sub2_data array. Note that the third</p>
 <p class="FM_ExampleCode"> &#160;&#160;* parameter is set to NULL for contiguous reading.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreaddata (sds_id, start, NULL, edges, (VOIDP)sub2_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Print what we have just read; the following numbers should be displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10 1000 12 13 </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (j = 0; j &lt; SUB2_LENGTH; j++) printf (&quot;%d &quot;, sub2_data[j]);</p>
 <p class="FM_ExampleCode">   printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reading the third subset.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set elements of the arrays start, edges, and stride to read</p>
 <p class="FM_ExampleCode"> &#160;&#160;* every 6th element in the column and 4th element in the row</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* starting at 1st column, 3d row. &#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 2; &#160;/* 3d row */</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 0; &#160;/* 1st column */</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = SUB3_LENGTH2; /* SUB3_LENGTH2 elements are read along</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;each column */</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;edges[1] = SUB3_LENGTH1; /* SUB3_LENGTH1 elements are read along &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;each row */</p>
 <p class="FM_ExampleCode"> &#160;&#160;stride[0] = 6; /* read every 6th element along each column */</p>
 <p class="FM_ExampleCode"> &#160;&#160;stride[1] = 4; /* read every 4th element along each row */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read the data from the file into sub3_data array.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreaddata (sds_id, start, stride, edges, (VOIDP)sub3_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Print what we have just read; the following numbers should be displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 7 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;9 13 &#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;15 19 </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for ( j = 0; j &lt; SUB3_LENGTH2; j++ ) {</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;for (i = 0; i &lt; SUB3_LENGTH1; i++) printf (&quot;%d &quot;, sub3_data[j][i]);</p>
 <p class="FM_ExampleCode">       printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;read_subsets</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME &#160;= ’SDS.hdf’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_READ, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_READ = 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;SUB1_LENGTH, SUB2_LENGTH, SUB3_LENGTH1,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SUB3_LENGTH2 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(SUB1_LENGTH &#160;= 5,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SUB2_LENGTH &#160;= 4, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SUB3_LENGTH1 = 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SUB3_LENGTH2 = 3)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfselect, sfrdata, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer start(2), edges(2), stride(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sub1_data(SUB1_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sub2_data(SUB2_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sub3_data(SUB3_LENGTH1,SUB3_LENGTH2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer i, j</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_READ)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the first data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id =sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reading the first subset.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set elements of start, stride, and edges arrays to read </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;every 3d element in in the 2nd row starting in the 4th column. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(1) = 1 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(2) = 3 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(1) = 1 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = SUB1_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;stride(2) = 3 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the data from sub1_data array. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrdata(sds_id, start, stride, edges, sub1_data)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print what we have just read, the following numbers should be displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5 8 1000 14 17 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) (sub1_data(j), j = 1, SUB1_LENGTH)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reading the second subset.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set elements of start, stride, and edges arrays to read </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;first 4 elements of 10th column. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(1) = 0 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(2) = 9 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(1) = SUB2_LENGTH </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(2) = 1 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;stride(2) = 1 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the data into sub2_data array. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrdata(sds_id, start, stride, edges, sub2_data)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print what we have just read; the following numbers should be displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10 1000 12 13 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) (sub2_data(j), j = 1, SUB2_LENGTH)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Reading the third subset.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set elements of start, stride and edges arrays to read </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;every 6th element in the row and every 4th element in the column</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;starting at 1st row, 3rd column. &#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(1) = 0 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(2) = 2 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(1) = SUB3_LENGTH1 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(2) = SUB3_LENGTH2 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;stride(1) = 4 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;stride(2) = 6 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the data from the file into sub3_data array. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrdata(sds_id, start, stride, edges, sub3_data)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print what we have just read; the following numbers should be displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 9 15</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;7 13 19 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 50 i = 1, SUB3_LENGTH1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) (sub3_data(i,j), j = 1, SUB3_LENGTH2)</p>
 <p class="FM_ExampleCode">50 &#160;&#160;&#160;continue &#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading2">3.7<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Obtaining Information about SD Data Sets</p>
 <p class="Body"><a name="IX_obtaining_information"></a>The routines covered in this section provide methods for obtaining information about all scientific data sets in a file, for identifying the data sets that meet certain criteria, and for obtaining informa&#173;tion about specific data sets. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span>&#160;obtains the numbers of data sets and file attributes, set by SD interface routines, in a file. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span>&#160;provides information about an individual SDS. To retrieve information about all data sets in a file, a calling program can use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span> to determine the number of data sets, fol&#173;lowed by repeated calls to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span> to obtain the information about a particular data set.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex, SDnametoindices,</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreftoindex</span>&#160;can be used to obtain the index of an SDS in a file knowing its name or reference number. Refer to <a href="#XREF_10424_3_2_1_Required_SDS">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for a description of the data set index and reference number. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtoref</span>&#160;is used when the reference number of an SDS is required by another routine and the SDS identifier is available.</p>
 <p class="Body">These routines are described individually in the following subsections.</p>
 <p class="Heading3"><a name="IX_obtaining_information_1"></a>3.7.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_29038_SDfileinfo"></a>Obtaining Information about the Contents of a File: SDfileinfo</p>
 <p class="Body"><a name="IX_description_37"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo </span>determines the number of scientific data sets and the number of file attributes con&#173;tained in a file. This information is often useful in index validation or sequential searches. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDfileinfo(sd_id, &amp;n_datasets, &amp;n_file_attrs);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sffinfo(sd_id, n_datasets, n_file_attrs)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span>&#160;stores the numbers of scientific data sets and file attributes in the parameters <span class="VarName">n_datasets</span>&#160;and <span class="VarName">n_file_attrs</span>, respectively. Note that the value returned by <span class="VarName">n_datasets</span>&#160;will include the number of SDS arrays <span style="font-style : italic; ">and</span>&#160;the number of dimension scales. Refer to <a href="#XREF_17621_3_8_4_Dimension">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;and <a href="#XREF_25183_SDiscoordvar">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for the description of dimension scales and its association with SDS arrays as well as how to distinguish between SDS arrays and dimension scales. The file attri&#173;butes are those that are created by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span> for an SD interface identifier instead of an SDS iden&#173;tifier. Refer to <a href="#XREF_36061_SDsetattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>&#160;for the discussion of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span>&#160;are specified in <a href="#XREF_21669_TABLE_3L">(See Table&nbsp;3L on page&nbsp;68)</a>.</p>
 <p class="Heading3"><a name="IX_obtaining_information_2"></a>3.7.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_18053_SDgetinfo"></a>Obtaining Information about a Specific SDS: SDgetinfo</p>
 <p class="Body"><a name="IX_description_38"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo </span>provides basic information about an SDS array. Often information about an SDS array is needed before reading and working with the array. For instance, the rank, dimension sizes, and/or data type of an array are needed to allocate the proper amount of memory to work with the array. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span>&#160;takes an SDS identifier as input, and retrieves the name, rank, dimension sizes, data type, and number of attributes for the corresponding SDS. The syntax of this routine is as fol&#173;lows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetinfo(sds_id, sds_name, &amp;rank, dim_sizes, &amp;data_type, &amp;n_attrs);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfginfo(sds_id, sds_name, rank, dim_sizes, data_type, n_attrs)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span> stores the name, rank, dimension sizes, data type, and number of attributes of the spec&#173;ified data set into the parameters <span class="VarName">sds_name</span>, <span class="VarName">rank</span>, <span class="VarName">dim_sizes</span>, <span class="VarName">data_type</span>, and <span class="VarName">n_attrs</span>, respectively. The parameter <span class="VarName">sds_name</span>&#160;is a character string. Note that, starting in HDF 4.2.2, the name of the SDS is no longer limited to <span class="DefName">64</span>&#160;characters. &#160;Thus, it is recommended that the application use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnamlen</span>&#160;to obtain the length of the data set’s name so that it can sufficiently allocate space for the name prior to calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span>.</p>
 <p class="Body">If the data set is created with an unlimited dimension, then in the C interface, the first element of the <span class="VarName">dim_sizes</span>&#160;array (corresponding to the slowest-changing dimension) contains the number of records in the unlimited dimension; in the FORTRAN-77 interface, the last element of the array <span class="VarName">dim_sizes</span> (corresponding to the slowest-changing dimension) contains this information.</p>
 <p class="Body">The parameter <span class="VarName">data_type</span>&#160;contains any type that HDF supports for the scientific data. Refer to <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13047_TABLE_2E_Standard">(See Table&nbsp;2F on page&nbsp;14)</a>, for the list of supported data types and their corresponding defined values. The parameter <span class="VarName">n_attrs</span>&#160;only reflects the number of attributes assigned to the data set specified by <span class="VarName">sds_id</span>; file attributes are not included. Use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span> to get the number of file attributes.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span>&#160;are specified in <a href="#XREF_21669_TABLE_3L">(See Table&nbsp;3L on page&nbsp;68)</a>.</p>
 <p class="Heading3">3.7.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Obtaining Data Set Compression Information: SDgetcompinfo</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcompinfo </span>retrieves the compression information used to create or write an SDS data set. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcompinfo</span>&#160;replaces <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcompress</span>&#160;because this function has flaws, causing failure for some chunked and chunked/compressed data.</p>
 <p class="Body">The possible compression algorithms used in SDS include:</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Adaptive Huffman</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>GZIP &quot;deflation&quot; (Lempel/Ziv-77 dictionary coder)</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Run-length encoding</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>NBIT</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Szip</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcompinfo</span>&#160;takes one input parameter, <span class="VarName">sds_id</span>, a data set identifier, and two return parame&#173;ters, <span class="VarName">comp_type</span>, identifying the type of compression used, and either <span class="VarName">c_info</span>&#160;(in C) or <span class="VarName">comp_prm</span>&#160;(in FORTRAN-77), containing further compression information.</p>
 <p class="Body">The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcompinfo</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetcompinfo(sds_id, comp_type, c_info);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgcompress(sds_id, comp_type, comp_prm)</p>
 <p class="Body">See <a href="#XREF_22986_SDsetcompress">Section 3.5.2, &quot;Compressing SDS Data: SDsetcompress,&quot;</a>&#160;for a discussion of <span class="VarName">comp_type</span>, <span class="VarName">c_info</span>, ane <span class="VarName">comp_prm</span>, and a list of supported compression modes.</p>
 <p class="Body">The parameter <span class="VarName">comp_type</span> specifies the compression type definition and is set to</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_NONE</span> (or 0) for no compression</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_RLE</span>&#160;(or 1) for run-length encoding (RLE) </p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="DefName">COMP_CODE_NBIT</span> (or 2) for NBIT compression</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_SKPHUFF</span>&#160;(or 3) for Skipping Huffman </p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_DEFLATE</span>&#160;(or 4) for GZIP compression </p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_SZIP</span> (or 5) for Szip compression</p>
 <p class="Body">Compression information is returned by the parameter <span class="VarName">c_info</span>&#160;in C, and by the parameter <span class="VarName">comp_prm</span>&#160;in FORTRAN-77. The parameter <span class="VarName">c_info</span>&#160;is a pointer to a union structure of type <span class="VarName">comp_info. &#160;</span>Refer to the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span>&#160;entry in the <span style="font-style : italic; ">HDF Reference Manual</span>&#160;for the description of the <span class="VarName">comp_info</span> structure.)</p>
 <p class="Body">When <span class="VarName">comp_type</span>&#160;is <span class="DefName">COMP_CODE_NONE</span>&#160;or <span class="DefName">COMP_CODE_RLE</span>, the parameters <span class="VarName">c_info</span>&#160;and <span class="VarName">comp_prm</span>&#160;are unchanged.</p>
 <p class="Body">When <span class="VarName">comp_type</span>&#160;is <span class="DefName">COMP_CODE_SKPHUFF</span>, then the structure <span class="VarName">skphuff</span>&#160;in the union <span class="VarName">comp_info</span>&#160;in C (<span class="VarName">comp_prm(1)</span> in FORTRAN-77) will store the size, in bytes, of the data elements.</p>
 <p class="Body">When <span class="VarName">comp_type</span>&#160;is <span class="DefName">COMP_CODE_DEFLATE</span>, then the deflate structure in the union <span class="VarName">comp_info</span>&#160;in C (<span class="VarName">comp_prm(1)</span> in FORTRAN-77) will store the information about the compression effort.</p>
 <p class="Body">When <span class="VarName">comp_type</span>&#160;is <span class="DefName">COMP_CODE_SZIP</span>, then the Szip options mask and the number of pixels per block in a chunked and Szip-compressed dataset will be specified in <span class="Subscript">c_info.szip.options_mask</span>&#160;and <span class="Subscript">c_info.szip.pixels_per_block</span>&#160;in C, and <span class="VarName">comp_prm(1)</span>&#160;and <span class="VarName">comp_prm(2)</span>&#160;in Fortran, respectively.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcompinfo</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcomp&#173;info</span>&#160;are specified in <a href="#XREF_21669_TABLE_3L">Table 3L</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_13"></a><a name="IX_parameter_list_12"></a><span class="StepNumber">TABLE 3L<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_21669_TABLE_3L"></a>SDfileinfo, &#160;SDgetinfo, and SDgetcompinfo Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:385.27pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 54.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 112.393pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 152.207pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDfileinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sffinfo)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_datasets</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of data sets in the file</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_file_attrs</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of global attributes in the file</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfginfo)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_name</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char*</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">rank</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of dimensions in the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_sizes</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 []</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer (*)</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Size of each dimension in the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of the data in the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_attrs</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of attributes in the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetcompinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgcompress)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_type</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_coder_t</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Type of compression</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">c_info</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_info</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Pointer to compression information structure</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_prm(1)</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compression parameter in array format</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 10.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Getting Information about a File and an SDSs.</p>
 <p class="Body">This example illustrates the use of the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo/sffinfo</span>&#160;to obtain the number of data sets in the file SDS.hdf and the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo/sfginfo</span>&#160;to retrieve the name, rank, dimension sizes, data type and number of attributes of the selected data set.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 n_datasets, n_file_attrs, index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 dim_sizes[MAX_VAR_DIMS];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 rank, data_type, n_attrs;</p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;name[MAX_NC_NAME];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_READ);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Determine the number of data sets in the file and the number</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* of file attributes. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDfileinfo (sd_id, &amp;n_datasets, &amp;n_file_attrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Access every data set and print its name, rank, dimension sizes,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* data type, and number of attributes. </p>
 <p class="FM_ExampleCode"> &#160;&#160;* The following information should be displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name = SDStemplate</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rank = 2</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension sizes are : 16 &#160;5 &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data type is &#160;24</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of attributes is &#160;0</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (index = 0; index &lt; n_datasets; index++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;sds_id = SDselect (sd_id, index);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = SDgetinfo (sds_id, name, &amp;rank, dim_sizes, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;data_type, &amp;n_attrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">       printf (&quot;name = %s\n&quot;, name);</p>
 <p class="FM_ExampleCode">       printf (&quot;rank = %d\n&quot;, rank);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;printf (&quot;dimension sizes are : &quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;for (i=0; i&lt; rank; i++) printf (&quot;%d &#160;&quot;, dim_sizes[i]);</p>
 <p class="FM_ExampleCode">       printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode">       printf (&quot;data type is  %d\n&quot;, data_type);</p>
 <p class="FM_ExampleCode">       printf (&quot;number of attributes is  %d\n&quot;, n_attrs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;program get_data_set_info </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDS.hdf’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_READ, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_READ = 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;MAX_NC_NAME, MAX_VAR_DIMS</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(MAX_NC_NAME &#160;= 256,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;MAX_VAR_DIMS = 32)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sffinfo, sfselect, sfginfo</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer n_datasets, n_file_attrs, index</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status, n_attrs</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer rank, data_type</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer dim_sizes(MAX_VAR_DIMS)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character name *(MAX_NC_NAME)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer i</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_READ)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Determine the number of data sets in the file and the number of </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;file attributes. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sffinfo(sd_id, n_datasets, n_file_attrs)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Access every data set in the file and print its name, rank,</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;dimension sizes, data type, and number of attributes.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;The following information should be displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;name = SDStemplate &#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rank = &#160;&#160;2</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension sizes are : &#160;&#160;5 &#160;16</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data type is &#160;&#160;24</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of attributes is &#160;&#160;0</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 index = 0, n_datasets - 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, index)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfginfo(sds_id, name, rank, dim_sizes, data_type, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_attrs)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &#160;&quot;name = &quot;, name(1:15)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &#160;&quot;rank = &quot;, rank</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &#160;&quot;dimension sizes are : &quot;, (dim_sizes(i), i=1, rank)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &#160;&quot;data type is &quot;, data_type</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &#160;&quot;number of attributes is &quot;, n_attrs &#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the current data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading3">3.7.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_39206_SDnametoindex"></a>Locating an SDS by Name: SDnametoindex</p>
 <p class="Body"><a name="IX_description_39"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex</span>&#160;determines and returns the index of a data set in a file given the data set’s name. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_index = SDnametoindex(sd_id, sds_name);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_index = sfn2index(sd_id, sds_name)</p>
 <p class="Body">The parameter <span class="VarName">sds_name</span>&#160;is a character string. &#160;Note that, starting in HDF 4.2.2, the name of the SDS is no longer limited to <span class="DefName">64</span> characters, which was the limit prior to 4.2.2.</p>
 <p class="Body">If more than one data set has the name specified by <span class="VarName">sds_name</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex</span>&#160;will return the index of the first data set, which could be an SDS or a coordinate variable (also called dimension scale.) &#160;Note that if there are more than one data set with the same name in the file, writing to a data set returned by this function without verifying that it is the desired data set could cause data corruption. &#160;Refer to the <a href="#XREF_Same_name"><span class="Citation">Important Note on page 21 in Chapter 3</span></a>&#160;for more details regarding the problem and how to handle it.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnumvars_byname</span>&#160;can be used to get the number of data sets (or variables, which includes both data sets and coordinate variables) with the same name. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;can be used to get a list of structures containing the indices and the types of all the variables of that same name.</p>
 <p class="Body">An index obtained by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;can then be used by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;to obtain an SDS identifier for the specified data set. &#160;The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex</span>&#160;routine is case-sensitive to the name specified by <span class="VarName">sds_name</span>&#160;and does not accept wildcards as part of that name. The name must exactly match the name of the SDS being searched for.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex</span>&#160;returns the index of a data set or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoin&#173;dex</span>&#160;are specified in <a href="#XREF_15332_TABLE_3M">(See Table&nbsp;3M on page&nbsp;73)</a>.</p>
 <p class="Heading3">3.7.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_57014_SDnametoindices"></a>Locating More Than One SDS by the Same Name: SDnametoindices</p>
 <p class="Body"><a name="IX_description_40"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;returns indices of all data sets having the same name. &#160;The data sets can be either SDSs or coordinate variables. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDnametoindices(sd_id, sds_name, var_list);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = <span style="font-size  : 8.0pt; letter-spacing : 0.00em; ">sfn2indices(sd_id, sds_name, var_list, type_list, n_vars)</span></p>
 <p class="Body">The parameter <span class="VarName">sds_name</span>&#160;is a character string. &#160;Note that, starting in HDF 4.2.2, the name of the SDS is no longer limited to <span class="DefName">64</span> characters, which was the limit prior to 4.2.2.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;retrieves a list of structures <span class="Subscript">varlist_t</span>, containing the indices and the types of all variables of the same name <span class="VarName">sds_name</span>. &#160;The structure <span class="Subscript">varlist_t</span> is defined as:</p>
 <p class="codebody" style="letter-spacing : 0.00em;"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="Subscript">typedef struct varlist</span></p>
 <p class="codebody" style="letter-spacing : 0.00em;"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="Subscript">{</span></p>
 <p class="codebody" style="letter-spacing : 0.00em;"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="Subscript"> &#160;&#160;&#160;int32 var_index; &#160;&#160;&#160;/* index of a variable */</span></p>
 <p class="codebody" style="letter-spacing : 0.00em;"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="Subscript"> &#160;&#160;&#160;vartype_t var_type; /* type of a variable */</span></p>
 <p class="codebody" style="letter-spacing : 0.00em;"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="Subscript">} varlist_t;</span></p>
 <p class="Body">The type of a variable <span class="Subscript">vartype_t</span> &#160;is defined as:</p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="Subscript">IS_SDSVAR=0 : variable is an actual SDS</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="Subscript">IS_CRDVAR=1 : variable is a coordinate variable</span></p>
 <p class="FM_List10pt" style="font-family : Courier New; font-size  : 8.0pt;"><span class="Subscript">UNKNOWN=2 : variable is created before HDF 4.2.2, unknown type</span></p>
 <p class="Body">Prior to calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnumvars_byname</span>&#160;can be used to get the number of data sets, with which the application can allocate <span class="VarName">var_list</span>&#160;appropriately. &#160;Also, when the number of data sets returned is 1, the application can call <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex</span>&#160;instead of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;for simplicity.</p>
 <p class="Body">An index obtained by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;can then be used by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDselect</span>&#160;to obtain an SDS identifier for the specified data set.</p>
 <p class="Body">The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;routine is case-sensitive to the name specified by <span class="VarName">sds_name</span>&#160;and does not accept wildcards as part of that name. The name must match exactly the name of the SDS being searched for.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindices</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDname&#173;toindices</span>&#160;are specified in <a href="#XREF_15332_TABLE_3M">(See Table&nbsp;3M on page&nbsp;73)</a>.</p>
 <p class="Heading3">3.7.6<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_98959_SDgetnumvars_byname"></a>Getting Number of Data Sets Given a Name: SDgetnumvars_byname</p>
 <p class="Body"><a name="IX_description_41"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnumvars_byname</span>&#160;determines and returns the number of variables in a file having the same &#160;name. &#160;The variables may include both data sets and coordinate variables. &#160;The syntax of this rou&#173;tine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetnumvars_byname(sd_id, sds_name, n_vars);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = <span style="font-size  : 8.0pt; letter-spacing : 0.00em; ">sfgnvars_byname(sd_id, sds_name, n_vars)</span>;</p>
 <p class="Body">The parameter <span class="VarName">sds_name</span>&#160;is a character string. &#160;Note that, starting in HDF 4.2.2, the name of the SDS is no longer limited to <span class="DefName">64</span> characters, which was the limit prior to 4.2.2.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnumvars_byname</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnumvars_byname</span>&#160;are specified in <a href="#XREF_15332_TABLE_3M">(See Table&nbsp;3M on page&nbsp;73)</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_15"></a><a name="IX_parameter_list_14"></a><span class="StepNumber">TABLE 3M<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_15332_TABLE_3M"></a>SDnametoindex, SDnametoindices, and SDgetnumvars_byname Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:385.23pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 86.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 111.629pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 136.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 86.400pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDnametoindex</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfn2index)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_name</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 86.400pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDnametoindices</p>
  <p class="CellFunction">[intn]</p>
  <p class="CellFunction">(sfn2indices</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_name</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the data set</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">var_list</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">varlist_t *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer*</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">List of variables having name sds_name; For&#173;tran: list of ?</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">type_list</p>
  <p class="CellParameter">(only Fortran)</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer*</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Fortran: list of types of variables</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_vars</p>
  <p class="CellParameter">(only Fortran)</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Fortran: number of variables found</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 86.400pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetnumvars_byname</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgnvars_byname)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SDS identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_name</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the data set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_vars</p>
</td>
  <td style="width : 54.029pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">unsigned*</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.800pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of variables having name sds_name</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3">3.7.7<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_11606_SDreftoindex"></a>Locating an SDS by Reference Number: SDreftoindex</p>
 <p class="Body"><a name="IX_description_42"></a><a name="IX_locating_a_by_reference"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreftoindex</span>&#160;determines and returns the index of a data set in a file given the data set’s reference number. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_index = SDreftoindex(sd_id, ref);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_index = sfref2index(sd_id, ref)</p>
 <p class="Body">The reference number can be obtained using <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtoref</span> if the SDS identifier is available. Remem&#173;ber that reference numbers do not necessarily adhere to any ordering scheme.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreftoindex</span>&#160;returns either the index of an SDS or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of this routine are specified in <a href="#XREF_29608_TABLE_3L">(See Table&nbsp;3N on page&nbsp;74)</a>.</p>
 <p class="Heading3">3.7.8<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_41630_3_7_5_Obtaining"></a>Obtaining the Reference Number Assigned to the Specified SDS: SDidtoref</p>
 <p class="Body"><a name="IX_description_43"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtoref</span>&#160;returns the reference number of the data set identified by the parameter <span class="VarName">sds_id</span>&#160;if the data set is found, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_ref = SDidtoref(sds_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sds_ref = sfid2ref(sds_id)</p>
 <p class="Body">This reference number is often used by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">Vaddtagref</span>&#160;to add the data set to a vgroup. Refer to &#160;<a href="../UG_Vgroups/UG_Vgroups.htm#XREF_34180_Vgroups_V_API">Chapter 5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Vgroups (V API)&quot;</a>, for more information.</p>
 <p class="Body">The parameter of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtoref </span>is specified in <a href="#XREF_29608_TABLE_3L">(See Table&nbsp;3N on page&nbsp;74)</a>.</p>
 <p class="Heading3">3.7.9<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_47562_SDidtype"></a>Obtaining the Type of an HDF4 Object: SDidtype</p>
 <p class="Body"><a name="IX_description_44"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtype</span>&#160;returns the type of an object, given the object’s identifier, <span class="VarName">obj_id</span>. The syntax of this rou&#173;tine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>obj_type = SDidtype(obj_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-size  : 8.0pt; letter-spacing : 0.00em; ">obj_type = sfidtype(obj_id, obj_type)</span></p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtype</span>&#160;returns a value of type <span class="VarName">hdf_idtype_t</span>, which can be one of the following:</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:4.00pt; padding-right:6.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:171.58pt; width:100%; max-width:194.00pt;" cellspacing="0" align="left">
  <tr style=" height : 24.00pt;">
  <td style="width : 107.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="DefName">NOT_SDAPI_ID</span>&#160;(or <span class="Subscript">-1</span>)</p>
</td>
  <td style="width : 87.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">not an SD API identifier</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 107.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="DefName">SD_ID</span>&#160;&#160;(or <span class="Subscript">0</span>)</p>
</td>
  <td style="width : 87.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">SD identifier</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 107.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="DefName">SDS_ID</span>&#160;(or <span class="Subscript">1</span>)</p>
</td>
  <td style="width : 87.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">SDS identifier</p>
</td>
</tr>
  <tr style=" height : 24.00pt;">
  <td style="width : 107.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="DefName">DIM_ID</span>&#160;(or <span class="Subscript">2</span>)</p>
</td>
  <td style="width : 87.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">Dimension iden&#173;tifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtype</span>&#160;returns <span class="DefName">NOT_SDAPI_ID</span>&#160;for either when <span class="VarName">obj_id</span>&#160;is not a valid HDF identifier, or is a valid HDF identifier, but not one of the identifier types in the SD interface, which are SD identifier, SDS identifier, and dimension identifier.</p>
 <p class="Body">The parameter of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDidtype </span>is specified in <a href="#XREF_29608_TABLE_3L">Table 3N</a>.</p>
 <p class="Heading3">3.7.10<a name="XREF_39481_SDcheckempty"></a>Determining whether an SDS is empty: SDcheckempty</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcheckempty</span>&#160;takes an SDS identifier, <span class="VarName">sds_id</span>, &#160;as input, and returns a single parameter indicat&#173;ing whether the SDS is empty. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDcheckempty(sds_id, emptySDS);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfchempty(sds_id, emptySDS)</p>
 <p class="Body">The output parameter, <span class="VarName">emptySDS</span>, indicates whether the SDS is empty or non-empty.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcheckempty</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcheck&#173;empty</span>&#160;are specified in <a href="#XREF_29608_TABLE_3L">Table 3N</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_17"></a><a name="IX_parameter_list_16"></a><span class="StepNumber">TABLE 3N<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>SDreftoindex, SDidtoref, SDidtype, and <a name="XREF_29608_TABLE_3L"></a>SDcheckempty Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:385.27pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 54.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 112.393pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 152.207pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreftoindex</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfref2index)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_ref</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SDS reference number</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDidtoref</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfid2ref)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SDS identifier</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDidtype</p>
  <p class="FM_ReturnType">[hdf_idtype_t]</p>
  <p class="CellFunction">(sfidtype)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">obj_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">An object identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDcheckempty</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfchempty)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 </p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SDS identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">emptySDS</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn *</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 152.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SDS status indicator (empty, not empty)</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 11.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Locating an SDS by Its Name.</p>
 <p class="Body">This example uses the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDnametoindex/sfn2index</span>&#160;to locate the SDS with the specified name and then reads the data from it.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define SDS_NAME &#160;&#160;&#160;&#160;&#160;&quot;SDStemplate&quot;</p>
 <p class="FM_ExampleCode">#define WRONG_NAME &#160;&#160;&#160;&quot;WrongName&quot;</p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;5</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;16</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 start[2], edges[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 data[Y_LENGTH][X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;i, j;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file for reading and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_READ);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Find index of the data set with the name specified in WRONG_NAME.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Error condition occurs, since the data set with that name does not exist </p>
 <p class="FM_ExampleCode"> &#160;&#160;* in the file.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = SDnametoindex (sd_id, WRONG_NAME);</p>
 <p class="FM_ExampleCode"> &#160;&#160;if (sds_index == FAIL)</p>
 <p class="FM_ExampleCode">   printf (&quot;Data set with the name \&quot;WrongName\&quot; does not exist\n&quot;); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Find index of the data set with the name specified in SDS_NAME and use </p>
 <p class="FM_ExampleCode"> &#160;&#160;* the index to select the data set.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = SDnametoindex (sd_id, SDS_NAME);</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Set elements of the array start to 0, elements of the array edges to </p>
 <p class="FM_ExampleCode"> &#160;&#160;* SDS dimensions, and use NULL for stride argument in SDreaddata to read</p>
 <p class="FM_ExampleCode"> &#160;&#160;* the entire data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[0] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[0] = Y_LENGTH;</p>
 <p class="FM_ExampleCode"> &#160;&#160;edges[1] = X_LENGTH;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read the entire data into the buffer named data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreaddata (sds_id, start, NULL, edges, (VOIDP)data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Print 10th row; the following numbers should be displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10 1000 12 13 14</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (j = 0; j &lt; X_LENGTH; j++) printf (&quot;%d &quot;, data[9][j]);</p>
 <p class="FM_ExampleCode">   printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;locate_by_name</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*9 &#160;WRONG_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME &#160;= ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME &#160;&#160;= ’SDStemplate’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;WRONG_NAME = ’WrongName’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 16)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_READ, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_READ = 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfn2index, sfselect, sfrdata, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer start(2), edges(2), stride(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer data(X_LENGTH, Y_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer j</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_READ)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Find index of the data set with the name specified in WRONG_NAME. </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Error condition occurs, since a data set with this name </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;does not exist in the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = sfn2index(sd_id, WRONG_NAME)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (sds_index .eq. -1) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;Data set with the name &quot;, WRONG_NAME,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot; does not exist&quot; &#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Find index of the data set with the name specified in SDS_NAME &#160;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;and use the index to attach to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = sfn2index(sd_id, SDS_NAME)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id &#160;&#160;&#160;= sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set elements of start array to 0, elements of edges array </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to SDS dimensions, and elements of stride array to 1 to read entire data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read entire data into array named data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrdata(sds_id, start, stride, edges, data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print 10th column; the following numbers should be displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;10 1000 12 13 14</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) (data(j,10), j = 1, X_LENGTH)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading3"><a name="IX_creating_with_non"></a>3.7.11<a name="XREF_36561_3_7_6_Creating_SDS"></a>Creating SDS Arrays Containing Non-standard Length Data: SDsetnbitdataset</p>
 <p class="Body"><a name="IX_description_45"></a>Starting with version 4.0r1, HDF provides the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetnbitdataset</span>, allowing the HDF user to specify that a particular SDS array contains data of a non-standard length. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetnbitdataset</span>&#160;specifies that the data set identified by the parameter <span class="VarName">sds_id</span>&#160;will contain data of a non-standard length defined by the parameters <span class="VarName">start_bit</span>&#160;and <span class="VarName">bit_len</span>. &#160;Additional information about the non-standard bit length decoding are specified in the parameters <span class="VarName">sign_ext</span>&#160;and <span class="VarName">fill_one</span>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetnbitdataset</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetnbitdataset(sds_id, start_bit, bit_len, sign_ext, fill_one);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsnbit(sds_id, start_bit, bit_len, sign_ext, fill_one)</p>
 <p class="Body">Any length between 1 and 32 bits can be specified. After <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetnbitdataset</span>&#160;has been called for an SDS array, any read or write operations will convert between the new data length of the SDS array and the data length of the read or write buffer.</p>
 <p class="Body">Bit lengths of all data types are counted from the right of the bit field starting with 0. In a bit field containing the values <span class="DefName">01111011</span>, bits 2 and 7 are set to <span class="DefName">0</span>&#160;and all the other bits are set to <span class="DefName">1</span>.</p>
 <p class="Body">The<span style="font-size  : 9.0pt; letter-spacing : -0.05em; ">&#160;</span>parameter <span class="VarName">start_bit</span> specifies the left-most position of the variable-length bit field to be writ&#173;ten. For example, in the bit field described in the preceding paragraph a parameter <span class="VarName">start_bit</span>&#160;set to <span class="DefName">4</span>&#160;would correspond to the fourth bit value of <span class="DefName">1</span> from the right.</p>
 <p class="Body">The parameter <span class="VarName">bit_len</span>&#160;specifies the number of bits of the variable-length bit field to be written. This number includes the starting bit and the count proceeds toward the right end of the bit field - toward the lower-bit numbers. For example, starting at bit 5 and writing 4 bits of the bit field described in the preceding paragraph would result in the bit field <span class="DefName">1110</span>&#160;being written to the data set. This would correspond to a <span class="VarName">start_bit</span>&#160;value of <span class="DefName">5</span>&#160;and a <span class="VarName">bit_len</span>&#160;value of <span class="DefName">4</span>.</p>
 <p class="Body">The parameter <span class="VarName">sign_ext</span>&#160;specifies whether to use the left-most bit of the variable-length bit field to sign-extend to the left-most bit of the data set data. For example, if 9-bit signed integer data is extracted from bits 17-25 and the bit in position 25 is <span class="DefName">1</span>, then when the data is read back from disk, bits 26-31 will be set to <span class="DefName">1</span>. Otherwise bit 25 will be <span class="DefName">0</span>&#160;and bits 26-31 will be set to <span class="DefName">0</span>. The <span class="VarName">sign_ext</span>&#160;parameter can be set to <span class="DefName">TRUE</span>&#160;(or <span class="DefName">1</span>) or <span class="DefName">FALSE</span>&#160;(or <span class="DefName">0</span>); specify <span class="DefName">TRUE</span> to sign-extend.</p>
 <p class="Body">The parameter <span class="VarName">fill_one</span>&#160;specifies whether to fill the &quot;background&quot; bits with the value <span class="DefName">1</span>&#160;or <span class="DefName">0</span>. This parameter is also set to either <span class="DefName">TRUE</span>&#160;(or <span class="DefName">1</span>) or <span class="DefName">FALSE</span>&#160;(or <span class="DefName">0</span>).</p>
 <p class="Body">The &quot;background&quot; bits of a non-standard length data set are the bits that fall outside of the non-standard length bit field stored on disk. For example, if five bits of an unsigned 16-bit integer data set located in bits 5 to 9 are written to disk with the parameter <span class="VarName">fill_one</span>&#160;set to <span class="DefName">TRUE</span>&#160;(or <span class="DefName">1</span>), then when the data is reread into memory bits 0 to 4 and 10 to 15 would be set to <span class="DefName">1</span>. If the same 5-bit data was written with a <span class="VarName">fill_one</span>&#160;value of <span class="DefName">FALSE</span>&#160;(or <span class="DefName">0</span>), then bits 0 to 4 and 10 to 15 would be set to <span class="DefName">0</span>.</p>
 <p class="Body">The operation on <span class="VarName">fill_one</span>&#160;is performed before the operation on <span class="VarName">sign_ext</span>. For example, using the <span class="VarName">sign_ext</span>&#160;example above, bits 0 to 16 and 26 to 31 will first be set to the background bit value, and then bits 26 to 31 will be set to <span class="DefName">1</span>&#160;or <span class="DefName">0</span> based on the value of the 25th bit.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetnbitdataset</span>&#160;returns a positive value or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetnbitdataset</span>&#160;are specified in <a href="#XREF_29359_TABLE_3N">Table 3O</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_18"></a><span class="StepNumber">TABLE 3O<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_29359_TABLE_3N"></a>SDsetnbitdataset Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.65pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 70.805pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 110.915pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 158.532pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 70.805pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetnbitdataset</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsnbit)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">start_bit</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Leftmost bit of the field to be written</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">bit_len</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Length of the bit field to be written</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sign_ext</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sign-extend specifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fill_one</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Background bit specifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading2">3.8<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>SDS Dimension and Dimension Scale Operations</p>
 <p class="Body">The concept of dimensions is introduced in <a href="#XREF_10424_3_2_1_Required_SDS">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>. This section describes SD interface routines which store and retrieve information on dimensions and dimension scales. When a dimension scale is set for a dimension, the library stores the dimension and its associated information as an SDS array. In the following discussion, we will refer to that array (recall NetCDF) as a <span class="Definition">coordinate variable</span>&#160;or <span class="Definition">dimension record</span>. The section concludes with consideration of related data sets and sharable dimensions.</p>
 <p class="Heading3"><a name="IX_selecting_a"></a>3.8.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_32761_SDgetdimid"></a>Selecting a Dimension: SDgetdimid</p>
 <p class="Body">SDS dimensions are uniquely identified by <span class="Definition">dimension identifiers</span>, which are assigned when a dimension is created. These dimension identifiers are used within a program to refer to a particu&#173;lar dimension, its scale, and its attributes. Before working with a dimension, a program must first obtain a dimension identifier by calling the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimid</span> routine as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dim_id = SDgetdimid(sds_id, dim_index);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dim_id = sfdimid(sds_id, dim_index)</p>
 <p class="Body"><a name="IX_description_46"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimid</span>&#160;takes two arguments, <span class="VarName">sds_id</span>&#160;and <span class="VarName">dim_index</span>, and returns a dimension identifier, <span class="VarName">dim_id</span>. The argument <span class="VarName">dim_index</span>&#160;is an integer from 0 to the number of dimensions minus 1. The number of dimensions in a data set is specified at the time the data set is created. Specifying a dimension index equal to or larger than the number of dimensions in the data set causes <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget&#173;dimid</span>&#160;to return a value of <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimid</span>&#160;returns a dimension identifier or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimid</span>&#160;are specified in <a href="#XREF_11992_TABLE_3O">(See Table&nbsp;3P on page&nbsp;80)</a>.</p>
 <p class="Body">Unlike file and data set identifiers, dimension identifiers cannot be explicitly closed. </p>
 <p class="Heading3"><a name="IX_naming_a"></a>3.8.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_17640_SDsetdimname"></a>Naming a Dimension: SDsetdimname</p>
 <p class="Body"><a name="IX_description_47"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;assigns a name to a dimension. If two dimensions have the same name, they will be represented in the file by only one SDS. Therefore changes to one dimension will be reflected in the other. Naming dimensions is optional but encouraged. Dimensions that are not explicitly named by the user will have names generated by the HDF library. Use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo</span>&#160;to read existing dimension names. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetdimname(dim_id, dim_name);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsdmname(dim_id, dim_name)</p>
 <p class="Body">The argument <span class="VarName">dim_id </span>in <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;is the dimension identifier returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimid</span>. The parameter <span class="VarName">dim_name</span>&#160;is a string of alphanumeric characters representing the name for the selected dimension. An attempt to rename a dimension using <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;will cause the old name to be deleted and a new one to be assigned.</p>
 <p class="Body">Note that when naming dimensions the name of a particular dimension <span style="font-style : italic; ">must</span>&#160;be set before attributes are assigned; once the attributes have been set, the name must not be changed. In other words, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;must only be called before any calls to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimscale</span>&#160;(described in <a href="#XREF_12233_SDsetdimscale">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>), <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span>&#160;(described in <a href="#XREF_36061_SDsetattr">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>) or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimstrs</span>&#160;(described in <a href="#XREF_28052_SDsetdatastrs">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.2.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>).</p>
 <p class="Body">If the file being worked on was created by a pre-4.2.2 version of HDF, please refer to the <a href="#XREF_Same_name"><span class="Citation">Import&#173;ant Note on page 21 in Chapter 3</span></a>&#160;for information regarding a data corruption which might occur when a dimension is named the same as a one-dimensional data set.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdim&#173;name</span>&#160;are described in <a href="#XREF_11992_TABLE_3O">Table 3P</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_20"></a><a name="IX_parameter_list_19"></a><span class="StepNumber">TABLE 3P<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_11992_TABLE_3O"></a>SDgetdimid and SDsetdimname Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.65pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 70.805pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 110.915pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 158.532pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 70.805pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdimid</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sfdimid)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_index</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension index</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 70.805pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimname</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsdmname)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_name</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 158.532pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension name</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3">3.8.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Old and New Dimension Implementations</p>
 <p class="Body"><a name="IX_Old_and_new_dimension"></a>Up to and including HDF version 4.0 beta1, dimensions were vgroup objects (described in &#160;<a href="../UG_Vgroups/UG_Vgroups.htm#XREF_34180_Vgroups_V_API">Chapter 5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Vgroups (V API)&quot;</a>, containing a single field vdata (described in <a href="../UG_Vdatas/UG_Vdatas.htm#XREF_41304_Vdatas_VS_API">Chapter 4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;Vdatas (VS API)&quot;</a>, with a class name of <span class="VarName">DimVal0.0</span>. The vdata had the same number of records as the size of the dimension, which consisted of the values 0, 1, 2, . . . n - 1, where n is the size of the dimension. These values were not strictly necessary. Consider the case of applications that create large one dimensional data sets: the disk space taken by these unnecessary values nearly doubles the size of the HDF file. To avoid these situations, a new representation of dimensions was implemented for HDF version 4.0 beta 2 and later versions.</p>
 <p class="Body">Dimensions are still vgroups in the new representation, but the vdata has only one record with a value of <span class="VarName">&lt;dimension size&gt; </span>and the class name of the vdata has been changed to <span class="VarName">DimVal0.1</span> to dis&#173;tinguish it from the old version.</p>
 <p class="Body"><a name="IX_description_48"></a>Between HDF versions 4.0 beta1 and 4.1, the old and new dimension representations were written by default for each dimension created, and both representations were recognized by routines that operate on dimensions. From HDF version 4.1 forward, SD interface routines recognize only the new representation. Two compatibility mode routines, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisdimval_bwcomp</span>, are provided to allow HDF programs to distinguish between the two dimension representations, or <span class="Title-in-text">compatibility modes</span>.</p>
 <p class="Heading4"><a name="IX_setting_the_future"></a>3.8.3.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_26116_SDsetdimval_comp"></a>Setting the Future Compatibility Mode of a Dimension: SDsetdimval_comp</p>
 <p class="Body"><a name="IX_description_49"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span>&#160;sets the compatibility mode for the dimension identified by the parameter <span class="VarName">dim_id</span>. This operation determines whether the dimension will have the old and new representa&#173;tions or the new representation only. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetdimval_comp(dim_id, comp_mode);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsdmvc(dim_id, comp_mode)</p>
 <p class="Body">The parameter <span class="VarName">comp_mode</span>&#160;specifies the compatibility mode. It can be set to either <span class="DefName">SD_DIMVAL_BW_COMP</span>&#160;(or <span class="DefName">1</span>), which specifies compatible mode and that the old and new dimension representations will be written to the file, or <span class="DefName">SD_DIMVAL_BW_INCOMP </span>(or <span class="DefName">0</span>), which specifies incom&#173;patible mode and that only the new dimension representation will be written to file. As of HDF version 4.1r1, the default mode is backward-incompatible. Subsequent calls to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span> will override the settings established in previous calls to the routine.</p>
 <p class="Body">Unlimited dimensions are always backward compatible. Therefore <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span>&#160;takes no action when the dimension identified by <span class="VarName">dim_id</span> is unlimited.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span>&#160;are specified in <a href="#XREF_11660_TABLE_3P">(See Table&nbsp;3Q on page&nbsp;81)</a>.</p>
 <p class="Heading4"><a name="IX_determining_the_current"></a>3.8.3.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_19357_3_8_3_2"></a>Determining the Current Compatibility Mode of a Dimension: SDisdimval_bwcomp</p>
 <p class="Body"><a name="IX_description_50"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisdimval_bwcomp</span> determines whether the specified dimension has the old and new represen&#173;tations or the new representation only. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisdimval_bwcomp</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>comp_mode = SDisdimval_bwcomp(dim_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>comp_mode = sfisdmvc(dim_id)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisdimval_bwcomp</span>&#160;returns one of the three values: <span class="DefName">SD_DIMVAL_BW_COMP</span>&#160;(or <span class="DefName">1</span>), <span class="DefName">SD_DIMVAL_BW_INCOMP</span>&#160;(or <span class="DefName">0</span>), and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The interpretation of <span class="DefName">SD_DIMVAL_BW_COMP</span>&#160;and <span class="DefName">SD_DIMVAL_BW_INCOMP</span>&#160;are as that in the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimval_comp</span>.</p>
 <p class="Body">The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisdimval_bwcomp</span>&#160;are specified in <a href="#XREF_11660_TABLE_3P">Table 3Q</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_21"></a><span class="StepNumber">TABLE 3Q<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_11660_TABLE_3P"></a>SDsetdimval_comp and SDisdimval_bwcomp Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 84.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 110.915pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 144.685pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 84.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimval_comp</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsdmvc)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_mode</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compatibility mode</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 84.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDisdimval_bwcomp</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfisdmvc)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3">3.8.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_17621_3_8_4_Dimension"></a>Dimension Scales</p>
 <p class="Body"><a name="IX_description_51"></a>A <span class="Definition">dimension scale</span> can be thought of as a series of numbers demarcating intervals along a dimen&#173;sion. One scale is assigned per dimension. Users of netCDF can think of them as analogous to <span class="Definition">coordinate variables</span>. In the SDS data model, each dimension scale is a one-dimensional array with name and size equal to its assigned dimension name and size.</p>
 <p class="Body">For example, if a dimension of length 6 named &quot;depth&quot; is assigned a dimension scale, its scale is a one-dimensional array of length 6 and is also assigned the name &quot;depth&quot;. The name of the dimen&#173;sion will also appear as the name of the dimension scale.</p>
 <p class="Body">Recall that when dimension scale is assigned to a dimension, the dimension is implemented as an SDS array with data being the data scale. Although dimension scales are conceptually different from SDS arrays, they are implemented as SDS arrays by the SD interface and are treated simi&#173;larly by the routines in the interface. For example, when the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfileinfo</span>&#160;routine returns the number of data sets in a file, it includes dimension scales in that number. The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDiscoordvar</span>&#160;routine (described in <a href="#XREF_25183_SDiscoordvar">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.4<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>) distinguishes SDS data sets from dimension scales.</p>
 <p class="Heading4"><a name="IX_writing"></a>3.8.4.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_12233_SDsetdimscale"></a>Writing Dimension Scales: SDsetdimscale</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimscale</span>&#160;stores scale information for the dimension identified by the parameter <span class="VarName">dim_id</span>. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetdimscale(dim_id, n_values, data_type, data);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsdscale(dim_id, n_values, data_type, data)</p>
 <p class="Body">The argument <span class="VarName">n_values</span>&#160;specifies the number of scale values along the specified dimension. For a fixed size dimension, <span class="VarName">n_values</span>&#160;must be equal to the size of the dimension. The parameter <span class="VarName">data_type</span>&#160;specifies the data type for the scale values and <span class="VarName">data</span> is an array containing the scale val&#173;ues.</p>
 <p class="Body">If the file being worked on was created by a pre-4.2.2 version of HDF, please refer to the <a href="#XREF_Same_name"><span class="Citation">Import&#173;ant Note on page 21 in Chapter 3</span></a>&#160;for information regarding a data corruption which might occur when a dimension is named the same as a one-dimensional data set.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimscale</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of this routine are specified in <a href="#XREF_14105_TABLE_3Q">(See Table&nbsp;3R on page&nbsp;83)</a>.</p>
 <p class="Heading4"><a name="IX_obtaining_information_3"></a>3.8.4.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_10800_SDdiminfo"></a>Obtaining Dimension Scale and Other Dimension Information: SDdiminfo</p>
 <p class="Body"><a name="IX_description_52"></a>Before working with an existing dimension scale, it is often necessary to determine its characteris&#173;tics. For instance, to allocate the proper amount of memory for a scale requires knowledge of its size and data type. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo </span>provides this basic information, as well as the name and the num&#173;ber of attributes for a specified dimension.</p>
 <p class="Body">The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDdiminfo(dim_id, dim_name, &amp;dim_size, &amp;data_type, &amp;n_attrs);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgdinfo(dim_id, dim_name, dim_size, data_type, n_attrs)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo</span>&#160;retrieves and stores the dimension’s name, size, data type, and number of attributes into the parameters <span class="VarName">dim_name</span>, <span class="VarName">dim_size</span>, <span class="VarName">data_type</span>, and <span class="VarName">n_attrs</span>, respectively.</p>
 <p class="Body">The parameter <span class="VarName">dim_name</span>&#160;will contain the dimension name set by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;or the default dimension name, <span class="VarName">fakeDim[x]</span>, if <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span> has not been called, where [<span class="VarName">x</span>] denotes the dimension index. If the name is not desired, the parameter <span class="VarName">dim_name</span>&#160;can be set to <span class="DefName">NULL</span>&#160;in C or an empty string in FORTRAN-77.</p>
 <p class="Body">An output value of 0 for the parameter <span class="VarName">dim_size</span>&#160;indicates that the dimension specified by the parameter <span class="VarName">dim_id</span>&#160;is unlimited. Use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span>&#160;to get the number of elements of the unlimited dimension.</p>
 <p class="Body">If scale information is available for the specified dimension, i.e., <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimscale</span>&#160;has been called, the parameter <span class="VarName">data_type</span>&#160;will contain the data type of the scale values; otherwise, <span class="VarName">data_type</span>&#160;will contain <span class="DefName">0</span>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of this routine are specified in <a href="#XREF_14105_TABLE_3Q">Table 3R</a>.</p>
 <p class="Heading4">3.8.4.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_23247_SDgetdimscale"></a>Reading Dimension Scales: SDgetdimscale</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimscale</span>&#160;retrieves the scale values of a dimension. These values have previously been stored by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimscale</span>. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetdimscale(dim_id, data);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgdscale(dim_id, data)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; "><a name="XREF_SDgetdimscale_description"></a>SDgetdimscale</span>&#160;reads all the scale values and stores them in the buffer <span class="VarName">data</span>&#160;which is assumed to be sufficiently allocated to hold all the values. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo</span><span style="letter-spacing : -0.03em; ">&#160;should be used to determine whether the scale has been set for the dimension and </span>to obtain the data type and the number of scale values for space allocation before calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimscale</span>. Refer to <a href="#XREF_10800_SDdiminfo">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.8.4.2<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a> for a discus&#173;sion of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo</span>.</p>
 <p class="Body">Note that it is not possible to read a subset of the scale values. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimscale</span>&#160;returns all of the scale values stored with the given dimension.</p>
 <p class="Body">The fact that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimscale</span>&#160;returns <span class="Subscript">SUCCEED</span> should not be interpreted as meaning that scale val&#173;ues have been defined for the data set. &#160;This function should always be used with <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo</span>, which is used first to determine whether a scale has been set, the number of scale values, their data type, etc. &#160;If <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo</span>&#160;indicates that no scale values have been set, the values returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimscale</span>&#160;in <span class="VarName">data</span> should be ignored.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimscale</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of this routine are specified in <a href="#XREF_14105_TABLE_3Q">Table 3R</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 3R<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_14105_TABLE_3Q"></a>SDsetdimscale, SDdiminfo, and SDgetdimscale Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 138.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 135.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimscale</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsdscale)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_values</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of scale values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type to be set for the scale values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;(*)</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing the scale values to be set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDdiminfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgdinfo)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_name</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the dimension name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_values</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the dimension size</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the scale data type</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_attrs</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the attribute count</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdimscale</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgdscale)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 85.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;(*)</p>
</td>
  <td style="width : 135.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the scale values</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 12.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Setting and Retrieving Dimension Information.</p>
 <p class="Body">This example illustrates the use of the routines <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimid/sfdimid</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname/sfsdm&#173;name</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimscale/sfsdscale</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDdiminfo/sfgdinfo</span>, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimscale/sfgdscale</span>&#160;to set and retrieve the dimensions names and dimension scales of the SDS created in Example 2 and modi&#173;fied in Examples 4 and 7.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define SDS_NAME &#160;&#160;&#160;&#160;&#160;&quot;SDStemplate&quot;</p>
 <p class="FM_ExampleCode">#define DIM_NAME_X &#160;&#160;&#160;&#160;&quot;X_Axis&quot;</p>
 <p class="FM_ExampleCode">#define DIM_NAME_Y &#160;&#160;&#160;&#160;&quot;Y_Axis&quot;</p>
 <p class="FM_ExampleCode">#define NAME_LENGTH &#160;&#160;6</p>
 <p class="FM_ExampleCode">#define X_LENGTH &#160;&#160;&#160;&#160;&#160;5</p>
 <p class="FM_ExampleCode">#define Y_LENGTH &#160;&#160;&#160;&#160;&#160;16</p>
 <p class="FM_ExampleCode">#define RANK &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;&#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;dim_index, dim_id;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;n_values, data_type, n_attrs;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;data_X[X_LENGTH]; &#160;&#160;&#160;/* X dimension dimension scale */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;data_X_out[X_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;float64 data_Y[Y_LENGTH]; &#160;/* Y dimension dimension scale */</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;float64 data_Y_out[Y_LENGTH]; </p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;&#160;&#160;dim_name[NAME_LENGTH];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;&#160;&#160;i, j, nrow;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize dimension scales.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (i=0; i &lt; X_LENGTH; i++) data_X[i] = i;</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (i=0; i &lt; Y_LENGTH; i++) data_Y[i] = 0.1 * i;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_WRITE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the index of the data set specified in SDS_NAME.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = SDnametoindex (sd_id, SDS_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Select the data set corresponding to the returned index.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/* For each dimension of the data set specified in SDS_NAME,</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;get its dimension identifier and set dimension name</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;and dimension scale. Note that data type of dimension scale </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;can be different between dimensions and can be different from </p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;SDS data type.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;for (dim_index = 0; dim_index &lt; RANK; dim_index++) </p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* Select the dimension at position dim_index.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;dim_id = SDgetdimid (sds_id, dim_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* Assign name and dimension scale to selected dimension.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;switch (dim_index)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>case 0:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetdimname (dim_id, DIM_NAME_Y);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_values = Y_LENGTH;</p>
 <p class="FM_ExampleCode">                status = SDsetdimscale (dim_id,n_values,DFNT_FLOAT64, \</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(VOIDP)data_Y); &#160;</p>
 <p class="FM_ExampleCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>break;</p>
 <p class="FM_ExampleCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>case 1:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetdimname (dim_id, DIM_NAME_X);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_values = X_LENGTH; </p>
 <p class="FM_ExampleCode">                status = SDsetdimscale (dim_id,n_values,DFNT_INT16, \</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(VOIDP)data_X); &#160;</p>
 <p class="FM_ExampleCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>break;</p>
 <p class="FM_ExampleCode"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>default: break;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* Get and display info about the dimension and its scale values.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* The following information is displayed:</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Information about 1 dimension:</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension name is Y_Axis</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of scale values is 16</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension scale data type is float64</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of dimension attributes is 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scale values are :</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.000 &#160;&#160;&#160;0.100 &#160;&#160;&#160;0.200 &#160;&#160;&#160;0.300 &#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.400 &#160;&#160;&#160;0.500 &#160;&#160;&#160;0.600 &#160;&#160;&#160;0.700 &#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.800 &#160;&#160;&#160;0.900 &#160;&#160;&#160;1.000 &#160;&#160;&#160;1.100 &#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1.200 &#160;&#160;&#160;1.300 &#160;&#160;&#160;1.400 &#160;&#160;&#160;1.500 &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Information about 2 dimension:</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension name is X_Axis</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of scale values is 5</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension scale data type is int16</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of dimension attributes is 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scale values are :</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;1 &#160;2 &#160;3 &#160;4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;status = SDdiminfo (dim_id, dim_name, &amp;n_values, &amp;data_type, &amp;n_attrs);</p>
 <p class="FM_ExampleCode">       printf (&quot;Information about %d dimension:\n&quot;, dim_index+1);</p>
 <p class="FM_ExampleCode">       printf (&quot;dimension name is %s\n&quot;, dim_name);</p>
 <p class="FM_ExampleCode">       printf (&quot;number of scale values is %d\n&quot;, n_values);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;if( data_type == DFNT_FLOAT64)</p>
 <p class="FM_ExampleCode">       printf (&quot;dimension scale data type is float64\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;if( data_type == DFNT_INT16)</p>
 <p class="FM_ExampleCode">       printf (&quot;dimension scale data type is int16\n&quot;);</p>
 <p class="FM_ExampleCode">       printf (&quot;number of dimension attributes is %d\n&quot;, n_attrs);</p>
 <p class="FM_ExampleCode">       printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode">       printf (&quot;Scale values are :\n&quot;);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;switch (dim_index) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case 0: &#160;status = SDgetdimscale (dim_id, (VOIDP)data_Y_out);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nrow = 4;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i=0; i&lt;n_values/nrow; i++ )</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (j=0; j&lt;nrow; j++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;printf (&quot; &#160;%-6.3f&quot;, data_Y_out[i*nrow + j]);</p>
 <p class="FM_ExampleCode">                          printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break; </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;case 1: &#160;status = SDgetdimscale (dim_id, (VOIDP)data_X_out);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i=0; i&lt;n_values; i++) printf (&quot; &#160;%d&quot;, data_X_out[i]);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;break; </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;default: break;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">        printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;} /*for dim_index */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;program &#160;dimension_info </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*6 &#160;DIM_NAME_X</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*6 &#160;DIM_NAME_Y</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;X_LENGTH, Y_LENGTH, RANK</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME &#160;= ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME &#160;&#160;= ’SDStemplate’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DIM_NAME_X &#160;= ’X_Axis’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DIM_NAME_Y &#160;= ’Y_Axis’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X_LENGTH = 5,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y_LENGTH = 16,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK &#160;&#160;&#160;&#160;= 2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_WRITE, DFNT_INT16, DFNT_FLOAT64</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_WRITE &#160;&#160;= 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT16 &#160;&#160;= 22,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_FLOAT64 = 6)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfn2index, sfdimid, sfgdinfo</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfsdscale, sfgdscale, sfsdmname, sfendacc</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfend, sfselect</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer dim_index, dim_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer n_values, n_attrs, data_type</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer*2 data_X(X_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer*2 data_X_out(X_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real*8 &#160;&#160;&#160;data_Y(Y_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real*8 &#160;&#160;&#160;data_Y_out(Y_LENGTH)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*6 dim_name</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;i</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize dimension scales.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;do 10 i = 1, X_LENGTH &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_X(i) = i - 1</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;do 20 i = 1, Y_LENGTH &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_Y(i) = 0.1 * (i - 1)</p>
 <p class="FM_ExampleCode">20 &#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize SD interface.</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_WRITE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the index of the data set with the name specified in SDS_NAME. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = sfn2index(sd_id, SDS_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the data set corresponding to the returned index.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;For each dimension of the data set,</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;get its dimension identifier and set dimension name</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;and dimension scales. Note that data type of dimension scale can</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;be different between dimensions and can be different from SDS data type.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;do 30 dim_index = 0, RANK - 1 </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;Select the dimension at position dim_index.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dim_id = sfdimid(sds_id, dim_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;Assign name and dimension scale to the dimension. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (dim_index .eq. 0) then</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfsdmname(dim_id, DIM_NAME_X) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_values = X_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfsdscale(dim_id, n_values, DFNT_INT16, data_X)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end if</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (dim_index .eq. 1) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfsdmname(dim_id, DIM_NAME_Y)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_values = Y_LENGTH</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfsdscale(dim_id, n_values, DFNT_FLOAT64, data_Y)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;end if</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;Get and display information about dimension and its scale values.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;The following information is displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Information about 1 dimension :</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension name is X_Axis</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of scale values is &#160;5</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension scale data type is int16</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of dimension attributes is &#160;&#160;0</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scale values are:</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;1 &#160;2 &#160;3 &#160;4</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Information about 2 dimension :</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension name is Y_Axis</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of scale values is &#160;16</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension scale data type is float64</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;number of dimension attributes is &#160;&#160;0</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scale values are:</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.000 &#160;&#160;&#160;&#160;&#160;0.100 &#160;&#160;&#160;&#160;&#160;0.200 &#160;&#160;&#160;&#160;&#160;0.300</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.400 &#160;&#160;&#160;&#160;&#160;0.500 &#160;&#160;&#160;&#160;&#160;0.600 &#160;&#160;&#160;&#160;&#160;0.700</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0.800 &#160;&#160;&#160;&#160;&#160;0.900 &#160;&#160;&#160;&#160;&#160;1.000 &#160;&#160;&#160;&#160;&#160;1.100</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1.200 &#160;&#160;&#160;&#160;&#160;1.300 &#160;&#160;&#160;&#160;&#160;1.400 &#160;&#160;&#160;&#160;&#160;1.500</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;status = sfgdinfo(dim_id, dim_name, n_values, data_type, n_attrs)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;Information about &quot;, dim_index+1,&quot; dimension :&quot;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;dimension name is &quot;, dim_name</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;number of scale values is&quot;, n_values</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;if (data_type. eq. 22) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;dimension scale data type is int16&quot;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;endif </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;if (data_type. eq. 6) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;dimension scale data type is float64&quot;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;endif </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;number of dimension attributes is &quot;, n_attrs</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;Scale values are:&quot;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;if (dim_index .eq. 0) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfgdscale(dim_id, data_X_out)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) (data_X_out(i), i= 1, X_LENGTH)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;endif </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;if (dim_index .eq. 1) &#160;then</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfgdscale(dim_id, data_Y_out) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,100) (data_Y_out(i), i= 1, Y_LENGTH)</p>
 <p class="FM_ExampleCode">100 &#160;&#160;&#160;&#160;&#160;&#160;format(4(1x,f10.3)/)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;endif </p>
 <p class="FM_ExampleCode">30 &#160;&#160;&#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading4"><a name="IX_distinguishing_from_a"></a>3.8.4.4<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_25183_SDiscoordvar"></a>Distinguishing SDS Arrays from Dimension Scales: SDiscoordvar</p>
 <p class="Body"><a name="IX_description_53"></a>The HDF library stores SDS dimensions as data sets. HDF therefore provides the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDisco&#173;ordvar</span> to determine whether a particular data set contains the data of an SDS or an SDS dimen&#173;sion with dimension scale or attribute assigned to it. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDiscoordvar</span>&#160;this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDiscoordvar(sds_id);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfiscvar(sds_id)</p>
 <p class="Body">If the data set, identified by the parameter <span class="VarName">sds_id</span>, contains the dimension data, a subsequent call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetinfo</span>&#160;will fill the specified arguments with information about a dimension, rather than a data set.</p>
 <p class="Body">If the file being worked on was created by a pre-4.2.2 version of HDF, please refer to the <a href="#XREF_Same_name"><span class="Citation">Import&#173;ant Note on page 21 in Chapter 3</span></a>&#160;for information regarding a data corruption which might occur when a dimension is named the same as a one-dimensional SDS.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDiscoordvar</span>&#160;returns <span class="DefName">TRUE</span>&#160;(or <span class="DefName">1</span>) if the specified data set represents a dimension scale and <span class="DefName">FALSE</span>&#160;(or <span class="DefName">0</span>), otherwise. This routine is further defined in <a href="#XREF_23776_TABLE_3R">Table 3S</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 3S<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_23776_TABLE_3R"></a>SDiscoordvar Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 112.393pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 161.207pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDiscoordvar</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfiscvar)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 161.207pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 13.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Distinguishing a Dimension Scale from a Data Set in a File.</p>
 <p class="Body">This example illustrates the use of the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDiscoordvar/sfiscvar</span>&#160;to determine whether the selected SDS array is a data set or a dimension stored as an SDS array (coordinate variable) (see discussion in Section 3.8.4) and displays the name of the data set or dimension.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 rank, data_type, dim_sizes[MAX_VAR_DIMS];</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;int32 n_datasets, n_file_attr, n_attrs; </p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;sds_name[MAX_NC_NAME];</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart(FILE_NAME, DFACC_READ);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Obtain information about the file.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;*/ </p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDfileinfo(sd_id, &amp;n_datasets, &amp;n_file_attr);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/* Get information about each SDS in the file.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* &#160;Check whether it is a coordinate variable, then display retrieved </p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;information.</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;Output displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS array with the name SDStemplate</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Coordinate variable with the name Y_Axis</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Coordinate variable with the name X_Axis</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;for (sds_index=0; sds_index&lt; n_datasets; sds_index++) </p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = SDgetinfo(sds_id, sds_name, &amp;rank, dim_sizes, &amp;data_type, &amp;n_attrs);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (SDiscoordvar(sds_id)) </p>
 <p class="FM_ExampleCode">          printf(&quot; Coordinate variable with the name %s\n&quot;, sds_name);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;else</p>
 <p class="FM_ExampleCode">          printf(&quot; SDS array with the name %s\n&quot;, sds_name);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the selected data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess(sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend(sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;program &#160;sds_vrs_coordvar </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDS.hdf’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_READ, DFNT_INT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_READ = 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT32 = 24)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;MAX_VAR_DIMS</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(MAX_VAR_DIMS = 32)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfselect, sfiscvar, sffinfo, sfginfo</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;rank, data_type</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;n_datasets, n_file_attrs, n_attrs</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;&#160;dim_sizes(MAX_VAR_DIMS)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*256 sds_name</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_READ)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Obtain information about the file.</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sffinfo(sd_id, n_datasets, n_file_attrs) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get information about each SDS in the file.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Check whether it is a coordinate variable, then display retrieved </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;information. </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Output displayed:</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS array with the name SDStemplate</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Coordinate variable with the name X_Axis</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Coordinate variable with the name Y_Axis</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 sds_index = 0, n_datasets-1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfginfo(sds_id, sds_name, rank, dim_sizes,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_type, n_attrs)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfiscvar(sds_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if (status .eq. 1) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;Coordinate variable with the name &quot;,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;sds_name(1:6) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;else</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;SDS array with the name &quot;, </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;sds_name(1:11) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading3"><a name="IX_dimension_scales_for"></a>3.8.5<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Related Data Sets</p>
 <p class="Body"><a name="IX_related_definition"></a>SD data sets with one or more dimensions with the same name and size are considered to be related. Examples of related data sets are cross-sections from the same simulation, frames in an animation, or images collected from the same apparatus. HDF attempts to preserve this relation&#173;ship by unifying their dimension scales and attributes. To understand how related data sets are handled, it is necessary to understand what dimension records are and how they are created.</p>
 <p class="Body"><a name="IX_creation_of_a"></a>In the SD interface, dimension records are only created for dimensions of a unique name and size. To illustrate this, consider a case where there are three scientific data sets, each representing a unique variable, in an HDF file. <a href="#XREF_31617_FIGURE_3c">(See Figure 3c)</a>&#160;The first two data sets have two dimensions each and the third data set has three dimensions. There are a total of four dimensions in the file and the name mapping between the data sets and the dimensions are shown in the figure. Note that if, for example, the creation of a second dimension named &quot;Altitude&quot; is attempted and the size of the dimension is different from the existing dimension named &quot;Altitude&quot;, an error condition will be generated.</p>
 <p class="Body">As expected, assigning a dimension attribute to dimension 1 of either data set will create the required dimension scale and assign the appropriate attribute. However, because related data sets share dimension records, they also share dimension attributes. Therefore, it is impossible to assign an attribute to a dimension without assigning the same attribute to all dimensions of identical name and size, either within one data set or related data sets.</p>
 <p class="Figure"><span class="StepNumber">FIGURE 3c<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_31617_FIGURE_3c"></a>Dimension Records and Attributes Shared Between Related Data Sets</p>
 <div align="center"><img alt="UG_SD00003.png" style=" width:100%; margin-left:30pt; max-width:485.856pt;" id="image2" src="UG_SD00003.png" />
 </div>
 <p class="Heading2"><a name="IX_User_defined_attribute"></a>3.9<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_14370_3_9_User_defined"></a>User-defined Attributes</p>
 <p class="Body"><a name="IX_description_54"></a><span class="Definition">User-defined attributes</span>&#160;are defined by the calling program and contain auxiliary information about a file, SDS array, or dimension. This auxiliary information is sometimes called <span class="Definition">metadata</span>&#160;because it is data about data. There are two ways to store metadata: as user-defined attributes or as predefined attributes. </p>
 <p class="Body">Attributes take the form <span class="VarName">label=value</span>, where <span class="VarName">label</span>&#160;is a character string containing <span class="DefName">H4_MAX_NC_NAME</span>&#160;(or <span class="DefName">256</span>) or fewer characters and <span class="VarName">value</span>&#160;contains one or more entries of the same data type as defined at the time the attribute is created. Attributes can be attached to files, data sets, and dimen&#173;sions. These are referred to, respectively, as <span class="Definition">file attributes</span>, <span class="Definition">data set attributes</span>, and <span class="Definition">dimension attributes</span>:</p>
 <p class="Bullet2"><a name="IX_description_56"></a><a name="IX_description_55"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">File attributes</span>&#160;describe an entire file. They generally contain information pertinent to all HDF data sets in the file and are sometimes referred to as <span class="Definition">global attributes</span>. </p>
 <p class="Bullet2"><a name="IX_description_57"></a><a name="IX_SD_scientific_data_set_2"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Data set attributes </span>describe individual SDSs. Because their scope is limited to an individual SDS, data set attributes are sometimes referred to as <span class="Definition">local attributes</span>. </p>
 <p class="Bullet2"><a name="IX_Dimension_attribute"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Dimension attributes</span>&#160;provide information applicable to an individual SDS dimension. It is possible to assign a unit to one dimension in a data set without assigning a unit to the remaining dimensions. </p>
 <p class="Body"><a name="IX_index"></a><a name="IX_count"></a>For each attribute, an <span class="Definition">attribute count </span>is maintained that identifies the number of values in the attribute. Each attribute has a unique <span class="Definition">attribute index</span>, the value of which ranges from 0 to the total number of attributes minus 1. The attribute index is used to locate an attribute in the object which the attribute is attached to. Once the attribute is identified, its values and information can be retrieved.</p>
 <p class="Body"><a name="IX_allowed_data_types_for_a"></a>The data types permitted for attributes are the same as those allowed for SDS arrays. SDS arrays with general attributes of the same name can have different data types. For example, the attribute <span class="VarName">valid_range</span>&#160;specifying the valid range of data values for an array of 16-bit integers might be of type 16-bit integer, whereas the attribute <span class="VarName">valid_range</span>&#160;for an array of 32-bit floats could be of type 32-bit floating-point integer. </p>
 <p class="Body"><a name="IX_naming_rules"></a>Attribute names follow the same rules as dimension names. Providing meaningful names for attributes is important, however using standardized names may be necessary if generic applica&#173;tions and utility programs are to be used. For example, every variable assigned a unit should have an attribute named &quot;<span class="VarName">units</span>&quot; associated with it. Furthermore, if an HDF file is to be used with soft&#173;ware that recognizes &quot;units&quot; attributes, the values of the &quot;units&quot; attributes should be expressed in a conventional form as a character string that can be interpreted by that software.</p>
 <p class="Body">The SD interface uses the same functions to access all attributes regardless of the objects they are assigned to. The difference between accessing a file, array, or dimension attribute lies in the use of identifiers. File identifiers, SDS identifiers, and dimension identifiers are used to respectively access file attributes, SDS attributes, and dimension attributes.</p>
 <p class="Heading3"><a name="IX_writing_a"></a>3.9.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_36061_SDsetattr"></a>Creating or Writing User-defined Attributes: SDsetattr</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span>&#160;creates or modifies an attribute for one of the objects: the file, the data set, or the dimension. If the attribute with the specified name does not exist, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span>&#160;creates a new one. If the named attribute already exists, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span> resets all the values that are different from those pro&#173;vided in its argument list. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetattr(obj_id, attr_name, data_type, n_values, values);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="letter-spacing : -0.08em; ">status = sfsnatt(obj_id, attr_name, data_type, n_values, values)</span></p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="letter-spacing : -0.08em; ">status = sfscatt(obj_id, attr_name, data_type, n_values, values)</span></p>
 <p class="Body"><a name="IX_description_58"></a>The parameter <span class="VarName">obj_id</span>&#160;is the identifier of the HDF data object to which the attribute is assigned and can be a file identifier, SDS identifier, or dimension identifier. If <span class="VarName">obj_id</span>&#160;specifies an SD interface identifier (<span class="VarName">sd_id</span>), a global attribute will be created which applies to all objects in the file. If <span class="VarName">obj_id</span>&#160;specifies a data set identifier (<span class="VarName">sds_id</span>), an attribute will be attached only to the specified data set. If <span class="VarName">obj_id</span> specifies a dimension identifier (<span class="VarName">dim_id</span>), an attribute will be attached only to the specified dimension.</p>
 <p class="Body">The parameter <span class="VarName">attr_name</span><span style="font-weight : bold; ">&#160;</span>is an ASCII character string containing the name of the attribute. It rep&#173;resents the label in the <span class="VarName">label = value</span>&#160;equation and can be no more than <span class="DefName">H4_MAX_NC_NAME</span>&#160;(or <span class="DefName">256</span>) characters. If this is set to the name of an existing attribute, the value portion of the attribute will be overwritten. Do not use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span>&#160;to assign a name to a dimension, use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;instead.</p>
 <p class="Body">The arguments <span class="VarName">data_type</span>, <span class="VarName">n_values</span>, and <span class="VarName">values</span>&#160;describe the right side of the <span class="VarName">label = value</span> equa&#173;tion. The argument <span class="VarName">values</span>&#160;contains one or more values of the same data type. The argument <span class="VarName">data_type</span>&#160;contains any HDF supported data type (see <a href="../UG_Fundmtls/UG_Fundmtls.htm#XREF_13047_TABLE_2E_Standard">(See Table&nbsp;2F on page&nbsp;14)</a>). The parameter <span class="VarName">n_values</span> specifies the total number of values in the attribute.</p>
 <p class="Body">There are two FORTRAN-77 versions of this routine: <span style="font-weight : bold; ">sfsnatt </span>and <span style="font-weight : bold; ">sfscatt</span>. The<span style="font-weight : bold; ">&#160;</span>routine <span style="font-weight : bold; ">sfsnatt</span>&#160;writes numeric attribute data and <span style="font-weight : bold; ">sfscatt </span>writes character attribute data. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr </span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr</span> are fur&#173;ther described in <a href="#XREF_39363_TABLE_3S_SDsetattr">(See Table&nbsp;3T on page&nbsp;98)</a>.</p>
 <p class="Body">&nbsp;</p>
 <p class="Figure"><span class="StepNumber">EXAMPLE 14.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Setting Attributes.</p>
 <p class="Body">This example shows how the routines <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetattr/sfscatt/sfsnatt</span>&#160;are used to set the attributes of the file, data set, and data set dimension created in the Examples 2, 4, and 12.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define FILE_ATTR_NAME &quot;File_contents&quot;</p>
 <p class="FM_ExampleCode">#define SDS_ATTR_NAME &#160;&quot;Valid_range&quot;</p>
 <p class="FM_ExampleCode">#define DIM_ATTR_NAME &#160;&quot;Dim_metric&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;&#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;dim_id, dim_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;n_values; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* number of values of the file, SDS or</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dimension attribute &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;char8 &#160;&#160;file_values[] = &quot;Storm_track_data&quot;; </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* values of the file attribute */</p>
 <p class="FM_ExampleCode"> &#160;&#160;float32 sds_values[2] = {2., 10.};</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* values of the SDS attribute &#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;char8 &#160;&#160;dim_values[] &#160;= &quot;Seconds&quot;; </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* values of the dimension attribute */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize the SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_WRITE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set an attribute that describes the file contents.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;n_values = 16;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status = SDsetattr (sd_id, FILE_ATTR_NAME, DFNT_CHAR8, n_values, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(VOIDP)file_values);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Select the first data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_index = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;* Assign attribute to the first SDS. Note that attribute values</p>
 <p class="FM_ExampleCode"> &#160;&#160;* may have different data type than SDS data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;n_values &#160;= 2;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status = SDsetattr (sds_id, SDS_ATTR_NAME, DFNT_FLOAT32, n_values, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(VOIDP)sds_values);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the the second dimension identifier of the SDS.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_index = 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_id = SDgetdimid (sds_id, dim_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Set an attribute of the dimension that specifies the dimension metric.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;n_values = 7;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status = SDsetattr (dim_id, DIM_ATTR_NAME, DFNT_CHAR8, n_values, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;(VOIDP)dim_values);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;set_attribs</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*13 FILE_ATTR_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 SDS_ATTR_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*10 DIM_ATTR_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FILE_ATTR_NAME = ’File_contents’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_ATTR_NAME &#160;= ’Valid_range’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DIM_ATTR_NAME &#160;= ’Dim_metric’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_WRITE, DFNT_CHAR8, DFNT_FLOAT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_WRITE = 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_CHAR8 &#160;= 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_FLOAT32 = 5)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfscatt, sfsnatt, sfselect, sfdimid</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sd_id, sds_id, sds_index, status</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer dim_id, dim_index </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer n_values</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 file_values</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sds_values(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;dim_values</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_values &#160;&#160;= ’Storm_track_data’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_values(1) = 2.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_values(2) = 10.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_values &#160;&#160;&#160;= ’Seconds’</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize the SD interface. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_WRITE)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set an attribute that describes the file contents. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_values = 16</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfscatt(sd_id, FILE_ATTR_NAME, DFNT_CHAR8, n_values, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_values)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the first data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Assign attribute to the first SDS. Note that attribute values</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;may have different data type than SDS data.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_values = 2</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfsnatt(sds_id, SDS_ATTR_NAME, DFNT_FLOAT32, n_values, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sds_values)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the identifier for the first dimension. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_index = 0 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_id = sfdimid(sds_id, dim_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set an attribute to the dimension that specifies the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;dimension metric. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_values = 7</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfscatt(dim_id, DIM_ATTR_NAME, DFNT_CHAR8, n_values, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dim_values)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading3"><a name="IX_querying_for_a"></a>3.9.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_30191_SDfindattr_and"></a>Querying User-defined Attributes: SDfindattr and SDattrinfo</p>
 <p class="Body"><a name="IX_description_60"></a><a name="IX_description_59"></a>Given a file, SDS, or dimension identifier and an attribute name, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfindattr</span>&#160;returns a valid attribute index if the corresponding attribute exists. The attribute index can then be used to retrieve information about the attribute or its values. Given a file, SDS, or dimension identifier and a valid attribute index, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo </span>retrieves the information about the corresponding attribute if it exists. </p>
 <p class="Body">The syntax for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfindattr</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo</span> are as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>attr_index = SDfindattr(obj_id, attr_name);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDattrinfo(obj_id, attr_index, attr_name, &amp;data_type, &amp;n_values);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>attr_index = sffattr(obj_id, attr_name)</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgainfo(obj_id, attr_index, attr_name, data_type, n_values)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfindattr</span> returns the index of the attribute, which belongs to the object identified by the param&#173;eter <span class="VarName">obj_id</span>, and whose name is specified by the parameter <span class="VarName">attr_name</span>. </p>
 <p class="Body">The parameter <span class="VarName">obj_id</span> can be either an SD interface identifier (<span class="VarName">sd_id</span>), a data set identifier (<span class="VarName">sds_id</span>), or a dimension identifier (<span class="VarName">dim_id</span>). <span style="font-weight : bold; ">SDfindattr</span> is case-sensitive in searching for the name speci&#173;fied by the parameter <span class="VarName">attr_name</span> and does not accept wildcards as part of that name.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo</span>&#160;retrieves the attribute’s name, data type, and number of values into the parameters <span class="VarName">attr_name</span>, <span class="VarName">data_type</span>, and <span class="VarName">n_values</span>, respectively.</p>
 <p class="Body">The parameter <span class="VarName">attr_index</span>&#160;specifies the relative position of the attribute within the specified object. An attribute index may also be determined by either keeping track of the number and order of attributes as they are written or dumping the contents of the file using the HDF dumping utility, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">hdp</span>, which is described in <a href="../UG_Utils/UG_Utils.htm#XREF_13872_HDF_Command_Line">Chapter 15<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;HDF Command-line Utilities&quot;</a>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfindattr</span>&#160;returns an attribute index or a value of <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo </span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfindattr</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo</span>&#160;are further described in <a href="#XREF_39363_TABLE_3S_SDsetattr">(See Table&nbsp;3T on page&nbsp;98)</a>.</p>
 <p class="Heading3"><a name="IX_reading_a"></a>3.9.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_14343_SDreadattr"></a>Reading User-defined Attributes: SDreadattr</p>
 <p class="Body"><a name="IX_description_61"></a>Given a file, SDS, or dimension identifier and an attribute index, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadattr</span>&#160;reads the values of an attribute that belongs to either a file, an SDS, or a dimension. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDreadattr(obj_id, attr_index, values);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfrattr(obj_id, attr_index, values)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfrnatt(obj_id, attr_index, values)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfrcatt(obj_id, attr_index, values)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadattr</span>&#160;stores the attribute values in the buffer <span class="VarName">values</span>, which is assumed to be sufficiently allocated. The size of the buffer must be at least <span class="VarName">n_values*sizeof (data_type)</span>&#160;bytes long, where <span class="VarName">n_values</span>&#160;and <span class="VarName">data_type</span>&#160;are the number of attribute values and their type. The values of <span class="VarName">n_values</span>&#160;and <span class="VarName">data_type</span>&#160;can be retrieved using <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo</span>. Note that the size of the data type must be deter&#173;mined at the local machine where the application is running. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadattr</span>&#160;will also read attributes and annotations created by the DFSD interface. </p>
 <p class="Body">The parameter <span class="VarName">obj_id</span> can be either an SD interface identifier (<span class="VarName">sd_id</span>), a data set identifier (<span class="VarName">sds_id</span>), or a dimension identifier (<span class="VarName">dim_id</span>).</p>
 <p class="Body">The parameter <span class="VarName">attr_index</span>&#160;specifies the relative position of the attribute within the specified object. An attribute index may also be determined by either keeping track of the number and order of attributes as they are written or dumping the contents of the file using the HDF dumping utility, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">hdp</span>, which is described in <a href="../UG_Utils/UG_Utils.htm#XREF_13872_HDF_Command_Line">Chapter 15<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;HDF Command-line Utilities&quot;</a>.</p>
 <p class="Body"><a name="IX_description_of_3"></a><a name="IX_description_of_2"></a>There are three FORTRAN-77 versions of this routine: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrattr</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrnatt</span>, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrcatt</span>. The routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrattr</span>&#160;reads data of all valid data types, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrnatt</span><span style="font-weight : bold; ">&#160;</span>reads numeric attribute data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfrcatt</span><span style="font-weight : bold; ">&#160;</span>reads character attribute data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadattr </span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadattr </span>are further described in <a href="#XREF_39363_TABLE_3S_SDsetattr">Table 3T</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_25"></a><a name="IX_parameter_list_24"></a><a name="IX_parameter_list_23"></a><a name="IX_parameter_list_22"></a><span class="StepNumber">TABLE 3T<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_39363_TABLE_3S_SDsetattr"></a>SDsetattr, SDfindattr, SDattrinfo, and SDreadattr Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 147.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 126.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetattr</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsnatt/</p>
  <p class="CellFunction">sfscatt)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id, sds_id or dim_id</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface, data set, or </p>
  <p class="CellDescription">dimension identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_name</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of the attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_values</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Number of values in the attribute</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">values</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing the data to be written</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDfindattr</p>
  <p class="FM_ReturnType">[int32]</p>
  <p class="CellFunction">(sffattr)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id, sds_id or dim_id</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface, data set, or </p>
  <p class="CellDescription">dimension identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_name</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Attribute name</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDattrinfo</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgainfo)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id, sds_id or dim_id</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface, data set, or </p>
  <p class="CellDescription">dimension identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_index</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Index of the attribute to be read</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_name</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the name of the attribute</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the data type of the values in the attribute</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">n_values</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the total number of values in the attribute</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreadattr</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfrattr/</p>
  <p class="CellFunction">sfrnatt/</p>
  <p class="CellFunction">sfrcatt)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id, sds_id or dim_id</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface, data set, or dimension iden&#173;tifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">attr_index</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Index of the attribute to be read</p>
</td>
</tr>
  <tr style=" height : 31.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">values</p>
</td>
  <td style="width : 56.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 91.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;(*)/</p>
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the attribute values</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 15.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Reading Attributes.</p>
 <p class="Body">This example uses the routines <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfindattr/sffattr</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo/sfgainfo</span>, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadattr/sfrattr</span>&#160;to find and read attributes of the file, data set, and data set dimension created in the Example 14.</p>
 <p class="FM_CodeCTitle">C:</p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&#160;&quot;SDS.hdf&quot;</p>
 <p class="FM_ExampleCode">#define FILE_ATTR_NAME &quot;File_contents&quot;</p>
 <p class="FM_ExampleCode">#define SDS_ATTR_NAME &#160;&quot;Valid_range&quot;</p>
 <p class="FM_ExampleCode">#define DIM_ATTR_NAME &#160;&quot;Dim_metric&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( ) </p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;sd_id, sds_id, dim_id;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;&#160;status;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;int32 &#160;&#160;attr_index, data_type, n_values; </p>
 <p class="FM_ExampleCode"> &#160;&#160;char &#160;&#160;&#160;attr_name[MAX_NC_NAME];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int8 &#160;&#160;&#160;*file_data;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int8 &#160;&#160;&#160;*dim_data;</p>
 <p class="FM_ExampleCode"> &#160;&#160;float32 *sds_data;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;&#160;&#160;i;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the file and initialize SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_READ);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Find the file attribute defined by FILE_ATTR_NAME.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;attr_index = SDfindattr (sd_id, FILE_ATTR_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get information about the file attribute. Note that the first</p>
 <p class="FM_ExampleCode"> &#160;&#160;* parameter is an SD interface identifier.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDattrinfo (sd_id, attr_index, attr_name, &amp;data_type, &amp;n_values);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Allocate a buffer to hold the attribute data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_data = (int8 *)malloc (n_values * sizeof (data_type));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read the file attribute data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreadattr (sd_id, attr_index, file_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Print out file attribute value. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">   printf (&quot;File attribute value is : %s\n&quot;, file_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Select the first data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_id = SDselect (sd_id, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Find the data set attribute defined by SDS_ATTR_NAME. Note that the</p>
 <p class="FM_ExampleCode"> &#160;&#160;* first parameter is a data set identifier.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;attr_index = SDfindattr (sds_id, SDS_ATTR_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get information about the data set attribute.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDattrinfo (sds_id, attr_index, attr_name, &amp;data_type, &amp;n_values);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Allocate a buffer to hold the data set attribute data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;sds_data = (float32 *)malloc (n_values * sizeof (data_type));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read the SDS attribute data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreadattr (sds_id, attr_index, sds_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Print out SDS attribute data type and values. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;if (data_type == DFNT_FLOAT32) </p>
 <p class="FM_ExampleCode">                 printf (&quot;SDS attribute data type is : float32\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;printf (&quot;SDS attribute values are : &#160;&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (i=0; i&lt;n_values; i++) printf (&quot; %f&quot;, sds_data[i]);</p>
 <p class="FM_ExampleCode">   printf (&quot;\n&quot;); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;/* &#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the identifier for the second dimension of the SDS.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_id = SDgetdimid (sds_id, 1);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Find dimension attribute defined by DIM_ATTR_NAME.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;attr_index = SDfindattr (dim_id, DIM_ATTR_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get information about the dimension attribute.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDattrinfo (dim_id, attr_index, attr_name, &amp;data_type, &amp;n_values);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Allocate a buffer to hold the dimension attribute data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;dim_data = (int8 *)malloc (n_values * sizeof (data_type));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Read the dimension attribute data.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDreadattr (dim_id, attr_index, dim_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Print out dimension attribute value. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">   printf (&quot;Dimensional attribute values is : %s\n&quot;, dim_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Terminate access to the data set and to the SD interface and </p>
 <p class="FM_ExampleCode"> &#160;&#160;* close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Free all buffers.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;free (dim_data);</p>
 <p class="FM_ExampleCode"> &#160;&#160;free (sds_data);</p>
 <p class="FM_ExampleCode"> &#160;&#160;free (file_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/* &#160;&#160;Output of this program is :</p>
 <p class="FM_ExampleCode"> &#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;File attribute value is : Storm_track_data</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;SDS attribute data type is : float32</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;SDS attribute values are : &#160;&#160;2.000000 10.000000</p>
 <p class="FM_ExampleCode"> &#160;&#160;* &#160;&#160;&#160;Dimensional attribute values is : Seconds</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="codeExample">&nbsp;</p>
 <p class="codeExample">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;attr_info</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*13 FILE_ATTR_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 SDS_ATTR_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*10 DIM_ATTR_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDS.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FILE_ATTR_NAME = ’File_contents’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_ATTR_NAME &#160;= ’Valid_range’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DIM_ATTR_NAME &#160;= ’Dim_metric’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_READ, DFNT_FLOAT32</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_READ &#160;&#160;= 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_FLOAT32 = 5)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sffattr, sfgainfo, sfrattr, sfselect</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfdimid, sfendacc, sfend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;sd_id, sds_id, dim_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;attr_index, data_type, n_values, status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;real &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sds_data(2)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;character*20 attr_name </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 file_data</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*7 &#160;dim_data</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;i</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the file and initialize SD interface. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_READ)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Find the file attribute defined by FILE_ATTR_NAME.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Note that the first parameter is an SD interface identifier.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;attr_index = sffattr(sd_id, FILE_ATTR_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get information about the file attribute. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfgainfo(sd_id, attr_index, attr_name, data_type, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_values)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the file attribute data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrattr(sd_id, attr_index, file_data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print file attribute value.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;File attribute value is : &quot;, file_data </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Select the first data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Find the data set attribute defined by SDS_ATTR_NAME.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Note that the first parameter is a data set identifier. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;attr_index = sffattr(sds_id, SDS_ATTR_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get information about the data set attribute. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfgainfo(sds_id, attr_index, attr_name, data_type, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_values)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the SDS attribute data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrattr(sds_id, attr_index, sds_data)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print SDS attribute data type and values. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (data_type .eq. DFNT_FLOAT32) &#160;then</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;SDS attribute data type is : float32 &quot; &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;SDS attribute values are &#160;: &quot; </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &#160;(sds_data(i), i=1, n_values) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the identifier for the first dimension of the SDS. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;dim_id = sfdimid(sds_id, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Find the dimensional attribute defined by DIM_ATTR_NAME.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Note that the first parameter is a dimension identifier.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;attr_index = sffattr(dim_id, DIM_ATTR_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get information about dimension attribute. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfgainfo(dim_id, attr_index, attr_name, data_type, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>n_values)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the dimension attribute data. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrattr(dim_id, attr_index, dim_data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Print dimension attribute value.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) &quot;Dimensional attribute value is : &quot;, dim_data </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Output of this program is :</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;File attribute value is : Storm_track_data</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;SDS attribute data type is : float32 </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;SDS attribute values are &#160;: </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2.00000 &#160;&#160;10.00000</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;Dimensional attribute value is : Seconds</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading2"><a name="IX_Predefined_attribute"></a>3.10<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_15566_3_10_Pre_defined"></a>Predefined Attributes</p>
 <p class="Body"><a name="IX_description_62"></a><span class="Definition">Predefined attributes</span> use reserved names and in some cases predefined data type names. Pre&#173;defined attributes are categorized as follows:</p>
 <p class="Bullet2"><a name="IX_description_63"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Labels</span>&#160;can be thought of as variable names. They are often used as keys in searches to find a particular predefined attribute.</p>
 <p class="Bullet2"><a name="IX_description_64"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Units</span>&#160;are a means of declaring the units pertinent to a specific discipline. A freely-available library of routines is available to convert between character string and binary forms of unit specifications and to perform useful operations on the binary forms. This library is used in some netCDF applications and is recommended for use with HDF applications. For more information, refer to the <span class="Title-in-text">netCDF User’s Guide for C</span>&#160;which can be obtained at <br /><span class="FM_URL" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.05em; ">http://www.unidata.ucar.edu/software/netcdf/docs/netcdf/</span>.</p>
 <p class="Bullet2"><a name="IX_description_65"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Formats</span>&#160;describe the format in which numeric values will be printed and/or displayed. The recommended convention is to use standard FORTRAN-77 notation for describing the data format. For example, &quot;F7.2&quot; means to display seven digits with two digits to the right of the decimal point.</p>
 <p class="Bullet2"><a name="IX_description_66"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Coordinate systems</span>&#160;contain information that should be used when interpreting or displaying the data. For example, the text strings &quot;cartesian&quot;, &quot;polar&quot; and &quot;spherical&quot; are recommended coordinate system descriptions.</p>
 <p class="Bullet2"><a name="IX_description_67"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Ranges</span>&#160;define the maximum and minimum values of a selected valid range. The range may cover the entire data set, values outside the data set, or a subset of values within a data set. Because the HDF library does not check or update the range attribute as data is added or removed from the file, the calling program may assign any values deemed appropriate as long as they are of the same data type as the SDS array.</p>
 <p class="Bullet2"><a name="IX_description_68"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Fill value</span>&#160;is the value used to fill the areas between non-contiguous writes to SDS arrays. For more information about fill values, refer to <a href="#XREF_14160_3_10_5_Fill_Values">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.10.5<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Bullet2"><a name="IX_description_69"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">Calibration</span>&#160;stores scale and offset values used to create calibrated data in SDS arrays. When data are calibrated, they are typically reduced from floats, double, or large integers into 8-bit or 16-bit integers and &quot;packed&quot; into an appropriately sized array. After the scale and offset values are applied, the packed array will return to its original form. </p>
 <p class="Body">Predefined attributes are useful because they establish conventions that applications can depend on and because they are understood by the HDF library without users having to define them. Pre&#173;defined attributes also ensure backward compatibility with earlier versions of the HDF library. They can be assigned only to data sets and dimensions. <a href="#XREF_14668_TABLE_3T">Table 3U</a>&#160;lists the predefined attributes and the types of object each attribute can be assigned to.</p>
 <p class="Figure"><a name="IX_list_of_with_labels_and"></a><span class="StepNumber">TABLE 3U<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_14668_TABLE_3T"></a>Predefined Attributes List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:391.27pt;" cellspacing="0" align="left">
  <tr style=" height : 26.00pt;">
  <td style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">HDF Data Object Type</p>
</td>
  <td style="width : 72.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Attribute Cate&#173;gory</p>
</td>
  <td style="width : 73.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Attribute Name</p>
</td>
  <td style="width : 179.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">SDS Array </p>
  <p class="FM_TableCategory">or </p>
  <p class="FM_TableCategory">Dimension</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Label</p>
</td>
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">long_name</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the array</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Unit</p>
</td>
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">units</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Units used for all dimensions and data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Format</p>
</td>
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">format</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Format for displaying dim scales and array values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="8" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">SDS Array Only</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Coordinate System</p>
</td>
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">coordsys</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Coordinate system used to interpret the SDS array</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Range</p>
</td>
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">valid_range</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Maximum and minimum values within a selected data range</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Fill Value</p>
</td>
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">__FillValue</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Value used to fill empty locations in an SDS array</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">Calibration</p>
</td>
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">scale_factor</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Value by which each array value is to be multiplied</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">scale_factor_err</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Error introduced by scaling SDS array data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">add_offset</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Value to which each array value is to be added</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">add_offset_err</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Error introduced by offsetting the SDS array data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 73.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">calibrated_nt</p>
</td>
  <td style="width : 179.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of the calibrated data</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body"><a name="IX_naming_conventions_for"></a>While the following netCDF naming conventions are not predefined in HDF, they are highly rec&#173;ommended to promote consistency of information-sharing among generic applications. Refer to the <span class="Title-in-text">netCDF User’s Guide for C</span>&#160;for further information. </p>
 <p class="Bullet2"><a name="IX_description_70"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">missing_value</span>: An attribute containing a value used to fill areas of an array not intended to contain either valid data or a fill value. The scope of this attribute is local to the array. An example of this would be a region where information is unavailable, as in a geographical grid containing ocean data. The part of the grid where there is land might not have any data associated with it and in such a case the <span class="VarName">missing_value</span>&#160;value could be supplied. The <span class="VarName">missing_value</span>&#160;attribute is different from the <span class="VarName">_FillValue</span>&#160;attribute in that fill values are intended to indicate data that was expected but did not appear, whereas missing values are used to indicate data that were never expected.</p>
 <p class="Bullet2"><a name="IX_description_71"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">title</span>: A global file attribute containing a description of the contents of a file.</p>
 <p class="Bullet2"><a name="IX_description_72"></a><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="Definition">history</span>: A global file attribute containing the name of a program and the arguments used to derive the file. Well-behaved generic filters (programs that take HDF or netCDF files as input and produce HDF or netCDF files as output) would be expected to automatically append their name and the parameters with which they were invoked to the history attribute of an input file.</p>
 <p class="Heading3"><a name="IX_accessing_a"></a>3.10.1<a name="XREF_36321_3_10_1_Accessing"></a>Accessing Predefined Attributes</p>
 <p class="Body">The SD interface provides two methods for accessing predefined attributes. The first method uses the general attribute routines for user-defined attributes described in <a href="#XREF_14370_3_9_User_defined">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.9<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>; the second employs routines specifically designed for each attribute and will be discussed in the fol&#173;lowing sections. Although the general attribute routines work well and are recommended in most cases, the specialized attribute routines are sometimes easier to use, especially when reading or writing related predefined attributes. This is true for two reasons. First, because predefined attributes are guaranteed unique names, the attribute index is unnecessary. Second, attributes with several components may be read as a group. For example, using the SD routine designed to read the predefined calibration attribute returns all five components with a single call, rather than five separate calls.</p>
 <p class="Body">There is one exception: unlike predefined data set attributes, predefined dimension attributes should be read or written using the specialized attribute routines only.</p>
 <p class="Body">The predefined attribute parameters are described in <a href="#XREF_18186_TABLE_3U">Table 3V</a>. Creating a predefined attribute with parameters different from these will produce unpredictable results when the attribute is read using the corresponding predefined-attribute routine.</p>
 <p class="Figure"><a name="IX_list_of_parameters"></a><span class="StepNumber">TABLE 3V<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_18186_TABLE_3U"></a>Predefined Attribute Definitions</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 26.00pt;">
  <td style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Category</p>
</td>
  <td style="width : 72.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Attribute Name</p>
</td>
  <td style="width : 72.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Data Type</p>
</td>
  <td style="width : 70.300pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Number of Val&#173;ues</p>
</td>
  <td style="width : 109.700pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Attribute Description</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Label</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">long_name</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_CHAR8</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">String length</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">String</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Unit</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">units</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_CHAR8</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">String length</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">String</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Format</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">format</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_CHAR8</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">String length</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">String</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Coordinate <br />System</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">coordsys</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_CHAR8</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">String length</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">String</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Range</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">valid_range</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">2</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Minimum and maximum values <br />in 2-element array</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Fill Value</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">_FillValue</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">1</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Fill value</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Calibration</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">scale_factor</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_FLOAT64</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">1</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Scale</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">scale_factor_err</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_FLOAT64</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">1</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Scale error</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">add_offset</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_FLOAT64</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">1</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Offset</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">add_offset_err</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_FLOAT64</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">1</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Offset error</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">calibrated_nt</p>
</td>
  <td style="width : 72.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">DFNT_INT32</p>
</td>
  <td style="width : 70.300pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">1</p>
</td>
  <td style="width : 109.700pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body">In addition to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadattr</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDfindattr</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDattrinfo </span>are also valid general attribute routines to use when reading a predefined attribute.<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; "> SDattrinfo</span>&#160;is always useful for determining the size of an attribute whose value contains a string. </p>
 <p class="Heading3"><a name="IX_description_73"></a>3.10.2<a name="XREF_36751_3_10_2_SDS_String"></a>SDS String Attributes</p>
 <p class="Body">This section describes the predefined string attributes of the SDSs and the next section describes those of the dimensions. Predefined string attributes of an SDS include the <span class="Definition">label</span>, <span class="Definition">unit</span>, <span class="Definition">format</span>, and <span class="Definition">coordinate system</span>.</p>
 <p class="Heading4"><a name="IX_writing_a_1"></a>3.10.2.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_28052_SDsetdatastrs"></a>Writing String Attributes of an SDS: SDsetdatastrs</p>
 <p class="Body"><a name="IX_description_74"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdatastrs</span>&#160;assigns the predefined string attributes label, unit, format, and coordinate system to an SDS array. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="letter-spacing : -0.08em; ">status = SDsetdatastrs(sds_id, label, unit, format, coord_system);</span></p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsdtstr(sds_id, label, unit, format, coord_system)</p>
 <p class="Body">If you do not wish to set an attribute, set the corresponding parameter to <span class="DefName">NULL</span>&#160;in C and an empty string in FORTRAN-77. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdatastrs</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its argu&#173;ments are further described in <a href="#XREF_16855_TABLE_3V">(See Table&nbsp;3W on page&nbsp;106)</a>. </p>
 <p class="Heading4"><a name="IX_reading_a_1"></a>3.10.2.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_29839_SDgetdatastrs"></a>Reading String Attributes of an SDS: SDgetdatastrs</p>
 <p class="Body"><a name="IX_description_75"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdatastrs</span>&#160;reads the predefined string attributes label, unit, format, and coordinate system from an SDS. These string attributes have previously been set by the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdatastrs</span>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdatastrs</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetdatastrs(sds_id, label, unit, format, coord_system, len);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="letter-spacing : -0.08em; ">status = sfgdtstr(sds_id, label, unit, format, coord_system, len)</span></p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdatastrs</span>&#160;stores the predefined attributes into the parameters <span class="VarName">label</span>, <span class="VarName">unit</span>, <span class="VarName">format</span>, and <span class="VarName">coord_system</span>, which are character string buffers. If a particular attribute has not been set by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdatastrs</span>, the first character of the corresponding returned string will be <span class="DefName">NULL</span>&#160;for C and <span class="DefName">0</span>&#160;for FORTRAN-77. Each string buffer is assumed to be at least <span class="VarName">len</span>&#160;characters long, including the space to hold the <span class="DefName">NULL</span>&#160;termination character. If you do not wish to get a predefined attribute of this SDS, set the corresponding parameter to <span class="DefName">NULL</span>&#160;in C and an empty string in FORTRAN-77. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdatastrs</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_16855_TABLE_3V">Table 3W</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_27"></a><a name="IX_parameter_list_26"></a><span class="StepNumber">TABLE 3W<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_16855_TABLE_3V"></a>SDsetdatastrs and SDgetdatastrs Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 45.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td colspan="2" style="width : 114.934pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 164.066pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdatastrs</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsdtstr)</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">label</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Label for the data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">unit</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Definition of the units</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">format</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Description of the data format</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">coord_system</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Description of the coordinate system</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdatastrs</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgdtstr)</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">label</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the label</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">unit</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the description of the units</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">format</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the description of the data format</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">coord_system</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the description of the coordinate system</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">len</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Minimum length of the string buffers</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_string_attributes_of"></a>3.10.3<a name="XREF_27706_3_10_3_String"></a>String Attributes of Dimensions</p>
 <p class="Body">Predefined string attributes of a dimension include <span class="Definition">label</span>, <span class="Definition">unit</span>, and <span class="Definition">format</span>. They adhere to the same definitions as those of the label, unit, and format strings for SDS attributes.</p>
 <p class="Heading4"><a name="IX_writing_a_2"></a>3.10.3.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_34270_SDsetdimstrs"></a>Writing a String Attribute of a Dimension: SDsetdimstrs</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimstrs</span>&#160;assigns the predefined string attributes label, unit, and format to an SDS dimension and its scales. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetdimstrs(dim_id, label, unit, format);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsdmstr(dim_id, label, unit, format)</p>
 <p class="Body">The argument <span class="VarName">dim_id</span>&#160;is the dimension identifier, returned by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimid</span>, and identifies the dimension to which the attributes will be assigned. If you do not wish to set an attribute, set the corresponding parameter to <span class="DefName">NULL</span> in C and an empty string in FORTRAN-77.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimstrs </span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_30855_TABLE_3W">Table 3X</a>.</p>
 <p class="Heading4"><a name="IX_reading_a_2"></a>3.10.3.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_33604_SDgetdimstrs"></a>Reading a String Attribute of a Dimension: SDgetdimstrs</p>
 <p class="Body"><a name="IX_description_76"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimstrs</span> reads the predefined string attributes label, unit, and format from an SDS dimen&#173;sion. These string attributes have previously been set by the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimstrs</span>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimstrs</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetdimstrs(dim_id, label, unit, format, len);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgdmstr(dim_id, label, unit, format, len)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimstrs</span>&#160;stores the predefined attributes of the dimension into the arguments <span class="VarName">label</span>, <span class="VarName">unit</span>, and <span class="VarName">format</span>, which are character string buffers. If a particular attribute has not been set by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdim&#173;strs</span>, the first character of the corresponding returned string will be <span class="DefName">NULL</span>&#160;for C and <span class="DefName">0</span> for FOR&#173;TRAN-77. Each string buffer is assumed to be at least <span class="VarName">len</span>&#160;characters long, including the space to hold the <span class="DefName">NULL</span> termination character. If you do not wish to get a predefined attribute of this dimen&#173;sion, set the corresponding parameter to <span class="DefName">NULL</span> in C and an empty string in FORTRAN-77.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetdimstrs</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_30855_TABLE_3W">Table 3X</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_29"></a><a name="IX_parameter_list_28"></a><span class="StepNumber">TABLE 3X<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_30855_TABLE_3W"></a>SDsetdimstrs and SDgetdimstrs Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 45.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td colspan="2" style="width : 114.934pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 164.066pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimstrs</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsdmstr)</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">label</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Label describing the specified dimension</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">unit</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Units to be used with the specified dimension</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">format</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Format to use when displaying the scale values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="5" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdimstrs</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgdmstr)</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_id</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Dimension identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">label</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the dimension label</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">unit</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the dimension unit</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">format</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char *</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the dimension format</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">len</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 164.066pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Maximum length of the string attributes</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_Range_attributes"></a>3.10.4<a name="XREF_26381_3_10_4_Range"></a>Range Attributes</p>
 <p class="Body">The attribute <span class="Definition">range</span>&#160;contains user-defined maximum and minimum values in a selected range. Since the HDF library does not check or update the range attribute as data is added or removed from the file, the calling program may assign any values deemed appropriate. Also, because the maximum and minimum values are supposed to relate to the data set, it is assumed that they are of the same data type as the data. </p>
 <p class="Heading4"><a name="IX_writing_a_3"></a>3.10.4.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_28522_SDsetrange"></a>Writing a Range Attribute: SDsetrange</p>
 <p class="Body"><a name="IX_description_77"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetrange </span>sets the maximum and minimum range values for the data set identified by <span class="VarName">sds_id</span>&#160;to the values provided by the parameters <span class="VarName">max</span>&#160;and <span class="VarName">min</span>. The syntax of the routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetrange(sds_id, max, min);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsrange(sds_id, max, min)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetrange</span>&#160;does not compute the maximum and minimum range values, it only stores the values as given. As a result, the maximum and minimum range values may not always reflect the actual maximum and minimum range values in the data set data. Recall that the type of max and min is assumed to be the same as that of the data set data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetrange</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_27269_TABLE_3X">Table 3Y</a>.</p>
 <p class="Heading4"><a name="IX_reading_a_3"></a>3.10.4.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_36056_SDgetrange"></a>Reading a Range Attribute: SDgetrange</p>
 <p class="Body"><a name="IX_description_78"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetrange </span>reads the maximum and minimum valid values of a data set. The syntax of this rou&#173;tine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetrange(sds_id, &amp;max, &amp;min);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgrange(sds_id, max, min)</p>
 <p class="Body">The maximum and minimum range values are stored in the parameters <span class="VarName">max</span>&#160;and <span class="VarName">min</span>, respectively, and must have previously been set by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetrange</span>. Recall that the type of <span class="VarName">max</span>&#160;and <span class="VarName">min</span>&#160;is assumed to be the same as that of the data set data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetrange</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_27269_TABLE_3X">Table 3Y</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_31"></a><a name="IX_parameter_list_30"></a><span class="StepNumber">TABLE 3Y<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_27269_TABLE_3X"></a>SDsetrange and SDgetrange Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:392.17pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 45.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td colspan="2" style="width : 144.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 136.500pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 86.533pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetrange</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsrange)</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 86.533pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">max</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 86.533pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;</p>
</td>
  <td style="width : 136.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Maximum value to be stored</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">min</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 86.533pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;</p>
</td>
  <td style="width : 136.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Minimum value to be stored</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetrange</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgrange)</p>
</td>
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 86.533pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 136.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">max</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 86.533pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;</p>
</td>
  <td style="width : 136.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the maximum value</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">min</p>
</td>
  <td style="width : 57.467pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 86.533pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid data type&gt;</p>
</td>
  <td style="width : 136.500pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the minimum value</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_Fill_value_attribute"></a>3.10.5<a name="XREF_14160_3_10_5_Fill_Values"></a>Fill Values and Fill Mode</p>
 <p class="Body"><a name="IX_description_79"></a><span class="Definition">A fill value</span>&#160;is the value used to fill the spaces between non-contiguous writes to SDS arrays; it can be set with <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillvalue</span>. If a fill value is set before writing data to an SDS, the entire array is initialized to the specified fill value. By default, any location not subsequently overwritten with SDS data will contain the fill value. </p>
 <p class="Body"><a name="IX_Not_a_Number"></a>A fill value must be of the same data type as the array to which it is written. To avoid conversion errors, use data-specific fill values instead of special architecture-specific values, such as infinity and <span class="Definition">Not-a-Number </span>or <span class="Definition">NaN</span>.</p>
 <p class="Body"><a name="IX_description_80"></a>A <span class="Definition">fill mode</span>&#160;specifies whether the fill value is to be written to all the SDSs in the file; it can be set with <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span>.</p>
 <p class="Body">Writing fill values to an SDS can involve more I/O overhead than is necessary, particularly in sit&#173;uations where the data set is to be contiguously filled with data before any read operation is made. In other words, writing fill values is only necessary when there is a possibility that the data set will be read before all gaps between writes are filled with data, i.e., before all elements in the array have been assigned values. Thus, for a file that has only data sets containing contiguous data, the fill mode should be set to <span class="DefName">SD_NOFILL</span>&#160;(or <span class="DefName">256</span>). Avoiding unnecessary filling can substantially increase the application performance.</p>
 <p class="Body">For a non-contiguous data set, the array elements that have no actual data values must be filled with a fill value before the data set is read. Thus, for a file that has a non-contiguous data set, the fill mode should be set to <span class="DefName">SD_FILL</span>&#160;(or <span class="DefName">0</span>) and a fill value will be written to the all data sets in the file.</p>
 <p class="Body">Note that, currently, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span>&#160;specifies the fill mode of all data sets in the file. Thus, either all data sets are in<span class="DefName">&#160;SD_FILL </span>mode or all data sets are in<span class="DefName">&#160;SD_NOFILL </span>mode. However, when a spe&#173;cific SDS needs to be written with a fill value while others in the file do not, the following proce&#173;dure can be used: set the fill mode to <span class="DefName">SD_FILL</span>, write data to the data set requiring fill values, then set the fill mode back to <span class="DefName">SD_NOFILL</span>. &#160;This procedure will produce one data set with fill values while the remaining data sets have no fill values.</p>
 <p class="Heading4"><a name="IX_writing_a_4"></a>3.10.5.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_19314_SDsetfillvalue"></a>Writing a Fill Value Attribute: SDsetfillvalue</p>
 <p class="Body"><a name="IX_description_81"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillvalue </span>assigns a new value to the fill value attribute for an SDS array. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetfillvalue(sds_id, fill_val);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfsfill(sds_id, fill_val)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfscfill(sds_id, fill_val)</p>
 <p class="Body">The argument <span class="VarName">fill_val</span>&#160;is the new fill value. It is recommended that you set the fill value before writing data to an SDS array, as calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillvalue</span>&#160;after data is written to an SDS array only changes the fill value attribute — it does not update the existing fill values. </p>
 <p class="Body">There are two FORTRAN-77 versions of this routine: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfsfill</span><span style="font-weight : bold; ">&#160;</span>and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfscfill</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfsfill</span><span style="font-weight : bold; ">&#160;</span>writes numeric fill value data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfscfill</span><span style="font-weight : bold; ">&#160;</span>writes character fill value data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillvalue</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_20926_TABLE_3Y">(See Table&nbsp;3Z on page&nbsp;110)</a>.</p>
 <p class="Heading4"><a name="IX_reading_a_4"></a>3.10.5.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_31868_SDgetfillvalue"></a>Reading a Fill Value Attribute: SDgetfillvalue</p>
 <p class="Body"><a name="IX_description_82"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetfillvalue</span>&#160;reads in the fill value of an SDS array as specified by a <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillvalue</span>&#160;call or its equivalent. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetfillvalue(sds_id, &amp;fill_val);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgfill(sds_id, fill_val)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgcfill(sds_id, fill_val)</p>
 <p class="Body">The fill value is stored in the argument <span class="VarName">fill_val</span>&#160;which is previously allocated based on the data type of the SDS data.</p>
 <p class="Body"><a name="IX_description_of_5"></a><a name="IX_description_of_4"></a>There are two FORTRAN-77 versions of this routine: <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfgfill</span><span style="font-weight : bold; ">&#160;</span>and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfgcfill</span>. The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfgfill</span><span style="font-weight : bold; ">&#160;</span>routine reads numeric fill value data and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">sfgcfill</span><span style="font-weight : bold; ">&#160;</span>reads character fill value data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetfillvalue</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) if a fill value is retrieved successfully, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise, including when the fill value has not been set. The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetfillvalue</span>&#160;are further described in <a href="#XREF_20926_TABLE_3Y">Table 3Z</a>.</p>
 <p class="Heading4">3.10.5.3<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_12863_SDsetfillmode"></a>Setting the Fill Mode for all SDSs in the Specified File: SDsetfillmode</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span>&#160;sets the fill mode for all data sets contained in the file identified by the parameter <span class="VarName">sd_id</span>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>old_fmode = SDsetfillmode(sd_id, fill_mode);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>old_fmode = sfsflmd(sd_id, fill_mode)</p>
 <p class="Body">The argument <span class="VarName">fill_mode</span>&#160;is the fill mode to be applied and can be set to either <span class="DefName">SD_FILL</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">SD_NOFILL</span>&#160;(or <span class="DefName">256</span>). <span class="DefName">SD_FILL</span>&#160;specifies that fill values will be written to all SDSs in the specified file by default. If <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span>&#160;is never called before <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillvalue</span>, <span class="DefName">SD_FILL</span>&#160;is the default fill mode. <span class="DefName">SD_NOFILL</span> specifies that, by default, fill values will not be written to all SDSs in the speci&#173;fied file. This can be overridden for a specific SDS by calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span>&#160;then writing data to this data set before closing the file.</p>
 <p class="Body">Note that whenever a file has been newly opened, or has been closed and then re-opened, the default <span class="DefName">SD_FILL</span>&#160;fill mode will be in effect until it is changed by a call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span>.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetfillmode</span>&#160;returns the fill mode value before it is reset or a value of <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The param&#173;eters of this routine are further described in <a href="#XREF_20926_TABLE_3Y">Table 3Z</a>.</p>
 <p class="Figure"><a name="IX_Fill_value_attribute_1"></a><a name="IX_parameter_list_34"></a><a name="IX_parameter_list_33"></a><a name="IX_parameter_list_32"></a><span class="StepNumber">TABLE 3Z<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_20926_TABLE_3Y"></a>SDsetfillvalue, SDgetfillvalue, and SDsetfillmode Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 147.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 126.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 94.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetfillvalue</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsfill/</p>
  <p class="CellFunction">sfscfill)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 94.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fill_val</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 94.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Fill value to be set</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetfillvalue</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgfill/</p>
  <p class="CellFunction">sfgcfill)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 94.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fill_val</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 94.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the fill value</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetfillmode</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfsflmd)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 94.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">fill_mode</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td style="width : 94.285pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Fill mode to be set</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_Calibration_attribute"></a>3.10.6<a name="XREF_41622_3_10_6_Calibration"></a>Calibration Attributes</p>
 <p class="Body"><a name="IX_description_83"></a>The <span class="Definition">calibration attributes</span>&#160;are designed to store calibration information associated with data set data. When data is calibrated, the values in an array can be represented using a smaller data type than the original. For instance, an array containing data of type <span class="VarName">float</span>&#160;could be stored as an array containing data of type 8- or 16-bit integer. Note that neither function performs any operation on the data set.</p>
 <p class="Heading4"><a name="IX_writing_1"></a>3.10.6.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_25997_SDsetcal"></a>Setting Calibration Information: SDsetcal</p>
 <p class="Body"><a name="IX_description_84"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcal</span>&#160;stores the scale factor, offset, scale factor error, offset error, and the data type of the uncalibrated data set for the specified data set. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetcal(sds_id, cal, cal_error, offset, off_err, data_type);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfscal(sds_id, cal, cal_error, offset, off_err, data_type)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcal</span>&#160;has six arguments; <span class="VarName">sds_id</span>, <span class="VarName">cal</span>, <span class="VarName">cal_error</span>, <span class="VarName">offset</span>, <span class="VarName">off_err</span>, and <span class="VarName">data_type</span>. The argument <span class="VarName">cal</span>&#160;represents a single value that when multiplied against every value in the calibrated data array reproduces the original data array (assuming an <span class="VarName">offset</span>&#160;of 0). The argument <span class="VarName">offset</span> represents a sin&#173;gle value that when subtracted from every value in the calibrated array reproduces the original data (assuming a <span class="VarName">cal </span>of 1). The values of the calibrated data array relate to the values of the origi&#173;nal data array according to the following equation:</p>
 <p class="FM_syntaxortop">orig_value = cal * (cal_value - offset)</p>
 <p class="Body">In addition to <span class="VarName">cal</span>&#160;and <span class="VarName">offset</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcal</span>&#160;also includes the scale and offset errors. The argument <span class="VarName">cal_err</span>&#160;contains the potential error of the calibrated data due to scaling; <span class="VarName">offset_err</span>&#160;contains the potential error for the calibrated data due to the offset. </p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcal</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Its parameters are further described in <a href="#XREF_12871_TABLE_3Z_SDsetcal">Table 3AA</a>.</p>
 <p class="Heading4"><a name="IX_reading"></a>3.10.6.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_11605_SDgetcal"></a>Reading Calibrated Data: SDgetcal</p>
 <p class="Body"><a name="IX_description_85"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcal</span>&#160;reads calibration attributes for an SDS array as previously written by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcal</span>. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetcal(sds_id, &amp;cal, &amp;cal_error, &amp;offset, &amp;offset_err, &amp;data_type);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="letter-spacing : -0.08em; "><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgcal(sds_id, cal, cal_error, offset, offset_err, data_type)</span></p>
 <p class="Body">Because the HDF library does not actually apply calibration information to the data, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcal</span>&#160;can be called anytime before or after the data is read. If a calibration record does not exist, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcal</span>&#160;returns <span class="DefName">FAIL</span>. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcal</span>&#160;takes six arguments: <span class="VarName">sds_id</span>, <span class="VarName">cal</span>, <span class="VarName">cal_error</span>, <span class="VarName">offset</span>, <span class="VarName">offset_err</span>, and <span class="VarName">data_type</span>. Refer to <a href="#XREF_25997_SDsetcal">Section 3.10.6.1</a> for the description of these arguments.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcal</span>&#160;returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetcal</span>&#160;are described in <a href="#XREF_12871_TABLE_3Z_SDsetcal">Table 3AA</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_36"></a><a name="IX_parameter_list_35"></a><span class="StepNumber">TABLE 3AA<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_12871_TABLE_3Z_SDsetcal"></a>SDsetcal and SDgetcal Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 66.672pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 50.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 110.915pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 162.685pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetcal</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfscal)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">cal</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Calibration factor</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">cal_error</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Calibration error</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Uncalibrated offset</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset_err</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Uncalibrated offset error</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of uncalibrated data</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 66.672pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetcal</p>
  <p class="CellParameter">[intn]</p>
  <p class="CellFunction">(sfgcal)</p>
</td>
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">cal</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64 *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Calibration factor</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">cal_error</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64 *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Calibration error</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64 *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Uncalibrated offset</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">offset_err</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">float64 *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">real*8</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Uncalibrated offset error</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 50.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">data_type</p>
</td>
  <td style="width : 53.315pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 162.685pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data type of uncalibrated data</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 16.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Calibrating Data.</p>
 <p class="Body">Suppose the values in the calibrated array <span class="VarName">cal_val</span> are the following integers:</p>
 <p class="FM_syntaxortop">cal_val[6] = {2, 4, 5, 11, 26, 81}</p>
 <p class="Body">By applying the calibration equation <span class="VarName">orig = cal * (cal_val - offset)</span>&#160;with <span class="VarName">cal = 0.50</span>&#160;and <span class="VarName">offset = -2000.0</span>, the calibrated array <span class="VarName">cal_val[]</span> returns to its original floating-point form:</p>
 <p class="FM_syntaxortop"><a name="IX_Predefined_attribute_1"></a><a name="IX_Calibration_attribute_1"></a>original_val[6] = {1001.0, 1002.0, 1002.5, 1005.5, 1013.0, 1040.5}</p>
 <p class="Heading2">3.11<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span>Convenient Operations Related to File and Environment</p>
 <p class="Body"><a name="IX_obtaining_information_4"></a>The routines covered in this section provide methods for obtaining file name, object’s type, length of object’s name, and number of opened files allowed.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetfilename</span>&#160;retrieves the name of the file. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnamelen</span>&#160;retrieves the length of an object’s name. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreset_maxopenfiles</span>&#160;resets the maximum number of files that can be opened at a time. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_maxopenfiles</span>&#160;retrieves current limits on opened files. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_numopenfiles</span>&#160;returns the number of files currently open.</p>
 <p class="Body">These routines are described individually in the following subsections.</p>
 <p class="Heading3"><a name="IX_obtaining_information_5"></a>3.11.1<a name="XREF_41612_SDgetfilename"></a>Obtaining the Name of a File: SDgetfilename</p>
 <p class="Body"><a name="IX_description_86"></a>Given an identifier to a file,<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">&#160;SDgetfilename</span>&#160;returns its name via parameter <span class="VarName">filename</span>. &#160;The user is repsonsible for allocating sufficient space to hold the file name. &#160;It can be at most <span class="DefName">H4_MAX_NC_NAME</span>&#160;characters in length. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnamelen</span>&#160;can be used to obtain the actual length of the name. &#160;The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetfilename</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetfilename(sd_id, filename);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgetfname(sd_id, filename)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetfilename</span>&#160;returns the length of the file name, without <span class="Subscript">'\0'</span>, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetfilename</span>&#160;are specified in <a href="#XREF_62006_TABLE_3AB">Table 3AB</a>.</p>
 <p class="Heading3"><a name="IX_obtaining_information_6"></a>3.11.2<a name="XREF_69218_SDgetnamelen"></a>Obtaining the Length of an HDF4 Object’s Name: SDgetnamelen</p>
 <p class="Body"><a name="IX_description_87"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnamelen </span>retrieves the length of an object’s name, given the object’s identifier, <span class="VarName">obj_id</span>. &#160;The object can be a file, a dataset, or a dimension.<span style="font-weight : bold; "> SDgetnamelen</span>&#160;stores the length in the parameter <span class="VarName">name_len</span>. &#160;The length does not include the '<span class="DefName">\0</span>' character.  The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetnamelen(obj_id, name_len);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgetnamelen(obj_id, name_len)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnamelen</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetnam&#173;elen</span>&#160;are specified in <a href="#XREF_62006_TABLE_3AB">Table 3AB</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_37"></a><span class="StepNumber">TABLE 3AB<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_62006_TABLE_3AB"></a>SDgetfilename and SDgetnamelen Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.55pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 78.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 54.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 112.393pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 146.160pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 78.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetfilename</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="FM_ReturnType" style="font-weight : bold;">(sfgetfname)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sd_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">SD interface identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td rowspan="2" style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">filename</p>
</td>
  <td rowspan="2" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">char*</p>
</td>
  <td rowspan="2" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">character*(*)</p>
</td>
  <td rowspan="2" style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Name of the file</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="6" style="width : 78.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetnamelen</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgetnamelen)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">obj_id</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">HDF4 object identifier</p>
</td>
</tr>
  <tr style=" height : 17.00pt;">
  <td rowspan="5" style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">name_len</p>
</td>
  <td rowspan="5" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">uint16*</p>
</td>
  <td rowspan="5" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td rowspan="5" style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Length of the name</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
 </table>
</td></tr>
 </table>
 <p class="Body">&nbsp;</p>
 <p class="Heading3">3.11.3<a name="XREF_88484_SDreset"></a>Resetting the Allowed Number of Opened Files: SDreset_maxopenfiles</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreset_maxopenfiles </span>resets the maximum number of files can be opened at the same time. &#160;The syntax of the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>curr_max = SDreset_maxopenfiles(req_max);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>curr_max = sfrmaxopenf(req_max)</p>
 <p class="Body">Prior to release 4.2.2, the maximum number of files that can be opened at the same time was lim&#173;ited to 32. &#160;In HDF 4.2.2 and later versions, when this limit is reached, the library will increase it to the system limit minus 3 to account for stdin, stdout, and stderr.</p>
 <p class="Body">This function can be called anytime to change the maximum number of open files allowed in HDF to <span class="VarName">req_max</span>. &#160;If <span class="VarName">req_max</span>&#160;is <span class="DefName">0</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreset_maxopenfiles</span>&#160;will simply return the current maximum number of open files allowed. &#160;If <span class="VarName">req_max</span>&#160;exceeds system limit, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreset_maxopenfiles</span>&#160;will reset the maximum number of open files to the system limit, and return that value.</p>
 <p class="Body">Furthermore, if the system maximum limit is reached, the library will push the error code <span class="DefName">DFE_TOOMANY</span>&#160;onto the error stack. &#160;User applications can detect this after an <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDstart</span> fails.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreset_maxopenfiles</span><span style="font-weight : bold; ">&#160;</span>returns the current maximum number of opened files allowed, or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). &#160;The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreset_maxopenfiles</span>&#160;are specified in <a href="#XREF_20129_TABLE_3AA">Table 3AC on page 114</a>.</p>
 <p class="Heading3">3.11.4<a name="XREF_66374_SDget_maxopenfiles"></a>Obtaining Current Limits on Opened Files: SDget_maxopenfiles</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_maxopenfiles</span> retrieves the current number of opened files allowed in HDF and the maxi&#173;mum number of opened files allowed on a system. &#160;The two parameters, curr_max and sys_limit, contain the two values, respectively. &#160;The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDget_maxopenfiles(curr_max, sys_limit);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgmaxopenf(cur_max, sys_limit)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_maxopenfiles</span><span style="font-weight : bold; ">&#160;</span>returns a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_maxopenfiles</span>&#160;are specified in <a href="#XREF_20129_TABLE_3AA">Table 3AC on page 114</a>.</p>
 <p class="Heading3">3.11.5<a name="XREF_75346_SDget_numopenfiles"></a>Obtaining Number of Opened Files: SDget_numopenfiles</p>
 <p class="Body"><a name="IX_description_88"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_numopenfiles</span> returns the number of files that are opened currently. The syntax of this rou&#173;tine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_opened = SDget_numopenfiles();</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>num_opened = sfgnumopenf(cur_num)</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_numopenfiles</span>&#160;returns the number of opened files or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDget_numopenfiles </span>&#160;are specified in <a href="#XREF_20129_TABLE_3AA">Table 3AC on page 114</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_38"></a><span class="StepNumber">TABLE 3AC<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_20129_TABLE_3AA"></a>SDreset_maxopenfiles, SDget_maxopenfiles, andSDget_numopenfiles Parameter Lists</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.55pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 78.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 54.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter</p>
</td>
  <td colspan="2" style="width : 112.393pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 146.160pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td rowspan="4" style="width : 78.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreset_maxopenfiles</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfrmaxopenf)</p>
</td>
  <td rowspan="4" style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">req_max</p>
</td>
  <td rowspan="4" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn</p>
</td>
  <td rowspan="4" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td rowspan="4" style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Requested maximum number of opened files</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 0.00pt;"></tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 78.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDget_maxopenfiles</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgmaxopenf)</p>
</td>
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">curr_max</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn* </p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Current number of open files allowed</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sys_limit</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">intn*</p>
</td>
  <td style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Maximum number of open files allowed on a sys&#173;tem</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td rowspan="2" style="width : 78.000pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDget_numopenfiles</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfgnumopenf)</p>
</td>
  <td rowspan="2" style="width : 54.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">curr_num</p>
</td>
  <td rowspan="2" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">N/A</p>
</td>
  <td rowspan="2" style="width : 56.197pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td rowspan="2" style="width : 146.160pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Current number of open files. &#160;C function has no parameter</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
 </table>
</td></tr>
 </table>
 <p class="Heading2"><a name="IX_chunked"></a>3.12<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_37811_3_11_Chunked_or"></a>Chunked (or Tiled) Scientific Data Sets</p>
 <p class="Body"><span style="font-weight : bold; ">NOTE:</span>&#160;It is strongly encouraged that HDF users who wish to use the SD chunking routines first read the section on SD chunking in <a href="../UG_Perform/UG_Perform.htm#XREF_34005_HDF_Performance">Chapter 14<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>, &quot;HDF Performance Issues&quot;</a>. In that section the con&#173;cepts of chunking are explained, as well as their use in relation to HDF. As the ability to work with chunked data has been added to HDF functionality for the purpose of addressing specific perfor&#173;mance-related issues, you should first have the necessary background knowledge to correctly determine how chunking will positively or adversely affect your application.</p>
 <p class="Body">This section will refer to both &quot;tiled&quot; and &quot;chunked&quot; SDSs as simply <span class="Definition">chunked SDSs</span>, as tiled SDSs are the two-dimensional case of chunked SDSs.</p>
 <p class="Heading3"><a name="IX_making_a_chunked_from_a"></a>3.12.1<a name="XREF_32968_SDsetchunk"></a>Making an SDS a Chunked SDS: SDsetchunk</p>
 <p class="Body"><a name="IX_description_89"></a>In HDF, an SDS must first be created as a generic SDS through the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>&#160;routine, then <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunk</span><span style="font-weight : bold; ">&#160;</span>is called to make that generic SDS a chunked SDS. Note that there are two restric&#173;tions that apply to chunked SDSs. The maximum number of chunks in a single HDF file is 65,535 and a chunked SDS cannot contain an unlimited dimension. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunk</span>&#160;sets the chunk size and the compression method for a data set. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunk</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetchunk(sds_id, c_def, flag);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfschnk(sds_id, dim_length, comp_type, comp_prm)</p>
 <p class="Body">The chunking information is provided in the parameters <span class="VarName">c_def</span>&#160;and <span class="VarName">flag</span>&#160;in C, and the parameters <span class="VarName">comp_type</span>&#160;and <span class="VarName">comp_prm</span> in FORTRAN-77.</p>
 <p class="FM_BodyBold">In C:</p>
 <p class="Body">The parameter <span class="VarName">c_def</span>&#160;has type <span class="DefName">HDF_CHUNK_DEF</span> which is defined as follows:</p>
 <p class="codebody"><a name="IX_definition_of"></a><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>typedef union hdf_chunk_def_u {</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>int32 chunk_lengths[MAX_VAR_DIMS]; </p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>struct {</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>int32 chunk_lengths[MAX_VAR_DIMS]; </p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>int32 comp_type;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>comp_info cinfo;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>} comp;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>struct {</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>int32 chunk_lengths[MAX_VAR_DIMS]; </p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>intn start_bit;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>intn bit_len;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>intn sign_ext;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>intn fill_one;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>} nbit;</p>
 <p class="codebody"><span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>} HDF_CHUNK_DEF</p>
 <p class="Body">Refer to the reference manual page for <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetcompress</span>&#160;for the definition of the structure <span class="VarName">comp_info</span>.</p>
 <p class="Body">The parameter <span class="VarName">flag</span>&#160;specifies the type of the data set, i.e., if the data set is chunked or chunked and compressed with either RLE, Skipping Huffman, GZIP, Szip, or NBIT compression methods. Valid values of <span class="VarName">flag</span>&#160;are <span class="DefName">HDF_CHUNK</span> for a chunked data set, (<span class="DefName">HDF_CHUNK | HDF_COMP</span>) for a chunked data set compressed with RLE, Skipping Huffman, GZIP, and Szip compression methods, and (<span class="DefName">HDF_CHUNK | HDF_NBIT</span>) for a chunked NBIT-compressed data set.</p>
 <p class="Body">There are three pieces of chunking and compression information which should be specified: chunking dimensions, compression type, and, if needed, compression parameters.</p>
 <p class="Body">If the data set is chunked, i.e., <span class="VarName">flag</span>&#160;value is <span class="DefName">HDF_CHUNK</span>, then the elements of the array <span class="VarName">chunk_lengths</span>&#160;in the union <span class="VarName">c_def</span> (<span class="VarName">c_def.chunk_lengths[]</span>) have to be initialized to the chunk dimension sizes.</p>
 <p class="Body">If the data set is chunked and compressed using RLE, Skipping Huffman, GZIP, or Szip methods (i.e., <span class="VarName">flag</span> value is set up to (<span class="DefName">HDF_CHUNK | HDF_COMP</span>)), then the elements of the array <span class="Subscript">chunk_lengths</span>&#160;of the structure <span class="VarName">comp</span>&#160;in the union <span class="VarName">c_def</span><span class="Subscript"> (c_def.comp.chunk_lengths[]</span>) have to be initialized to the chunk dimension sizes.</p>
 <p class="Body">If the data set is chunked and NBIT compression is applied (i.e., <span class="VarName">flag</span>&#160;values is set up to (<span class="DefName">HDF_CHUNK | HDF_NBIT</span>)), then the elements of the array <span class="Subscript">chunk_lengths</span>&#160;of the structure <span class="Subscript">nbit</span>&#160;in the union <span class="Subscript">c_def</span> (<span class="Subscript">c_def.nbit.chunk_lengths[]</span>) have to be initialized to the chunk dimension sizes.</p>
 <p class="Body">The values of <span class="DefName">HDF_CHUNK</span>, <span class="DefName">HDF_COMP</span>, and <span class="DefName">HDF_NBIT</span>&#160;are defined in the header file <span class="Subscript">hproto.h</span>.</p>
 <p class="Body">Compression types are passed in the field <span class="VarName">comp_type</span>&#160;of the structure <span class="VarName">cinfo</span>, which is an element of the structure <span class="Subscript">comp</span>&#160;in the union <span class="VarName">c_def</span> (<span class="Subscript">c_def.comp.cinfo.comp_type</span>). Valid compression types are: <span class="DefName">COMP_CODE_RLE</span>&#160;for RLE, <span class="DefName">COMP_CODE_SKPHUFF</span>&#160;for Skipping Huffman, <span class="DefName">COMP_CODE_DEFLATE</span>&#160;for GZIP compression.</p>
 <p class="Body">For Skipping Huffman, GZIP, and Szip compression methods, parameters are passed in corre&#173;sponding fields of the structure <span class="VarName">cinfo</span>. Specify skipping size for Skipping Huffman compression in the field <span class="Subscript">c_def.comp.cinfo.skphuff.skp_size</span>; this value cannot be less than 1. Specify deflate level for GZIP compression in the field <span class="Subscript">c_def.comp.cinfo.deflate_level</span>. Valid values of deflate levels are integers from 0 to 9 inclusive. &#160;Specify the Szip options mask and the number of pixels per block in a chunked and Szip-compressed dataset in the fields <span class="Subscript">c_info.szip.options_mask</span>&#160;and <span class="Subscript">c_info.szip.pixels_per_block</span>, respectively<span class="Subscript">.</span></p>
 <p class="Body">NBIT compression parameters are specified in the fields <span class="VarName">start_bit</span>, <span class="VarName">bit_len</span>, <span class="VarName">sign_ext</span>, and <span class="VarName">fill_one</span>&#160;in the structure <span class="VarName">nbit</span>&#160;of the union <span class="VarName">c_def</span>.</p>
 <p class="FM_BodyBold">In FORTRAN-77:</p>
 <p class="Body">The <span class="VarName">dim_length</span> array specifies the chunk dimensions.</p>
 <p class="Body">The <span class="VarName">comp_type</span> parameter specifies the compression type. Valid compression types and their val&#173;ues are defined in the hdf.inc file, and are listed below.</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_NONE</span>&#160;(or <span class="DefName">0</span>) for uncompressed data</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_RLE</span>&#160;(or <span class="DefName">1</span>) for data compressed using the RLE compression algorithm</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_NBIT</span>&#160;(or <span class="DefName">2</span>) for data compressed using the NBIT compression algorithm</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_SKPHUFF</span>&#160;(or <span class="DefName">3</span>) for data compressed using the Skipping Huffman com&#173;pression algorithm</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_DEFLATE</span>&#160;(or <span class="DefName">4</span>) for data compressed using the GZIP compression algo&#173;rithm</p>
 <p class="FM_List10pt"><span class="DefName">COMP_CODE_SZIP</span>&#160;(or <span class="DefName">5</span>) for data compressed using the Szip compression algorithm</p>
 <p class="Body">The parameter <span class="VarName">comp_prm(1) </span>specifies the skipping size for the Skipping Huffman compression method and the deflate level for the GZIP compression method.</p>
 <p class="Body">For Szip compression, the Szip options mask and the number of pixels per block in a chunked and Szip-compressed dataset must be specified in <span class="VarName">comp_prm(1)</span>&#160;and <span class="VarName">comp_prm(2)</span>, respectively.</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:4.00pt; padding-right:6.00pt; float:alignleft; margin-left:171.58pt; width:100%; max-width:207.00pt;" cellspacing="0" align="left">
  <tr style=" height : 13.00pt;">
  <td style="width : 81.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="VarName">comp_prm(1) </span>=</p>
</td>
  <td style="width : 126.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">value of <span class="Subscript">option_mask</span></p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 81.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="VarName">comp_prm(2) </span>=</p>
</td>
  <td style="width : 126.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">value of <span class="Subscript">pixels_per_block</span></p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body">For NBIT compression, the four elements of the array <span class="VarName">comp_prm</span>&#160;&#160;correspond to the four NBIT compression parameters listed in the structure <span class="VarName">nbit</span>. The array <span class="VarName">comp_prm</span>&#160;should be initialized as follows:</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:6.00pt; padding-top:4.00pt; padding-right:6.00pt; float:alignleft; margin-left:171.58pt; width:100%; max-width:180.00pt;" cellspacing="0" align="left">
  <tr style=" height : 13.00pt;">
  <td style="width : 81.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="VarName">comp_prm(1) </span>=</p>
</td>
  <td style="width : 99.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">value of <span class="Subscript">start_bit</span></p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 81.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="VarName">comp_prm(2) </span>=</p>
</td>
  <td style="width : 99.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">value of <span class="Subscript">bit_len</span></p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 81.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="VarName">comp_prm(3) </span>=</p>
</td>
  <td style="width : 99.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">value of <span class="Subscript">sign_ext</span></p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 81.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement"><span class="VarName">comp_prm(4) </span>=</p>
</td>
  <td style="width : 99.000pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableElement">value of <span class="Subscript">fill_one</span></p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body">Refer to the description of the union <span class="Subscript">HDF_CHUNK_DEF</span>&#160;and of the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetnbitdataset</span>&#160;for NBIT compression parameter definitions.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunk</span>&#160;returns either a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Refer to <a href="#XREF_28935_TABLE_3AA">Table 3AD</a>&#160;and <a href="#XREF_13739_TABLE_3AB_sfschnk">Table 3AE</a> for the descriptions of the parameters of both versions.</p>
 <p class="Figure"><a name="IX_parameter_list_40"></a><a name="IX_parameter_list_39"></a><span class="StepNumber">TABLE 3AD<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_28935_TABLE_3AA"></a>SDsetchunk Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td style="width : 74.414pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 206.172pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetchunk</p>
  <p class="FM_ReturnType">[intn]</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 206.172pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">c_def</p>
</td>
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">HDF_CHUNK_DEF</p>
</td>
  <td style="width : 206.172pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Union containing information on how the chunks are to be defined</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">flag</p>
</td>
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 206.172pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Flag determining the behavior of the routine</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><a name="IX_parameter_list_41"></a><span class="StepNumber">TABLE 3AE<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_13739_TABLE_3AB_sfschnk"></a>sfschnk Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_TableHead">&nbsp;</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td style="width : 74.414pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 206.172pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfschnk</p>
  <p class="CellFunction">&nbsp;</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 206.172pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_length</p>
</td>
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 206.172pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sizes of the chunk dimensions</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_type</p>
</td>
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 206.172pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compression type</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_prm</p>
</td>
  <td style="width : 74.414pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 206.172pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Array containing information needed by the compression algorithm</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_chunks_setting_the"></a>3.12.2<a name="XREF_30563_3_11_2_Setting_the"></a>Setting the Maximum Number of Chunks in the Cache: SDsetchunkcache</p>
 <p class="Body"><a name="IX_description_90"></a>To maximize the performance of the HDF library routines when working with chunked SDSs, the library maintains a separate area of memory specifically for cached data chunks. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunk&#173;cache</span>&#160;sets the maximum number of chunks of the specified SDS that are cached into this segment of memory. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunkcache</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDsetchunkcache(sds_id, maxcache, flag);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfscchnk(sds_id, maxcache, flag)</p>
 <p class="Body">When the chunk cache has been filled, any additional chunks written to cache memory are cached according to the Least-Recently-Used (LRU) algorithm. This means that the chunk that has resided in the cache the longest without being reread or rewritten will be written over with the new chunk.</p>
 <p class="Body">By default, when a generic SDS is made a chunked SDS, the parameter <span class="VarName">maxcache</span>&#160;&#160;is set to the number of chunks along the fastest changing dimension. If needed, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunkcache</span>&#160;can then be called again to reset the size of the chunk cache. </p>
 <p class="Body">Essentially, the value of <span class="VarName">maxcache</span> cannot be set to a value less than the number of chunks cur&#173;rently cached. If the chunk cache is <span style="font-style : italic; ">not</span>&#160;full, then the size of the chunk cache is reset to the new value of <span class="VarName">maxcache</span>&#160;only if it is greater than the current number of chunks cached. If the chunk cache has been completely filled with cached data, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunkcache</span>&#160;has already been called, and the value of the parameter <span class="VarName">maxcache</span>&#160;in the current call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunkcache</span>&#160;is larger than the value of <span class="VarName">maxcache</span>&#160;in the last call to <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunkcache</span>, then the value of <span class="VarName">maxcache</span>&#160;is reset to the new value.</p>
 <p class="Body">Currently the only allowed value of the parameter <span class="VarName">flag</span>&#160;is <span class="DefName">0</span>, which designates default operation. In the near future, the value <span class="DefName">HDF_CACHEALL</span>&#160;will be provided to specify that the entire SDS array is to be cached.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunkcache</span>&#160;returns the maximum number of chunks that can be cached (the value of the parameter <span class="VarName">maxcache</span>) if successful and <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) otherwise. The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunk&#173;cache</span>&#160;are further described in <a href="#XREF_11864_TABLE_3AC">Table 3AF</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_43"></a><a name="IX_parameter_list_42"></a><span class="StepNumber">TABLE 3AF<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_11864_TABLE_3AC"></a>SDsetchunkcache Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:372.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 70.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td colspan="2" style="width : 112.872pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 144.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 53.456pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 59.416pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 70.400pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetchunkcache</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfscchnk)</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 53.456pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 59.416pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">maxcache</p>
</td>
  <td style="width : 53.456pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 59.416pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Maximum number of chunks to cache</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">flag</p>
</td>
  <td style="width : 53.456pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 59.416pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 144.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Flag determining the default caching behavior</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_chunked_writing_to_a"></a>3.12.3<a name="XREF_12520_SDwritechunk_and"></a>Writing Data to Chunked SDSs: SDwritechunk and SDwritedata</p>
 <p class="Body"><a name="IX_writing_data_to_chunked"></a>Both <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span> can be used to write to a chunked SDS. Later in this chap&#173;ter, situations where <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;may be a more appropriate routine than <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span><span style="font-weight : bold; ">&#160;</span>will be discussed, but, for the most part, both routines achieve the same results. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;is discussed in <a href="#XREF_20018_SDwritedata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDwritechunk(sds_id, origin, datap);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfwchnk(sds_id, origin, datap)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfwcchnk(sds_id, origin, datap)</p>
 <p class="Body">The location of data in a chunked SDS can be specified in two ways. The first is the standard method used in the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;that access both chunked and non-chunked SDSs; this method refers to the starting location as an offset in elements from the origin of the SDS array itself. The second method is used by the routine <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;that only access chunked SDSs; this method refers to the origin of the chunk as an offset in chunks from the origin of the chunk array itself. The parameter <span class="VarName">origin</span> specifies this offset; it also may be considered as chunk’s coor&#173;dinates in the chunk array. <a href="#XREF_13546_FIGURE_3d_Chunk">Figure&nbsp;3d on page&nbsp;118</a> illustrates this method of chunk indexing in a 4-by-4 element SDS array with 2-by-2 element chunks.</p>
 <p class="Figure"><span class="StepNumber">FIGURE 3d<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_13546_FIGURE_3d_Chunk"></a>Chunk Indexing as an Offset in Chunks</p>
 <div align="center"><img alt="UG_SD00004.png" style=" width:100%; margin-left:30pt; max-width:485.856pt;" id="image3" src="UG_SD00004.png" />
 </div>
 <p class="Body"><a name="IX_description_91"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;is used when an entire chunk is to be written and requires the chunk offset to be known. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;is used when the write operation is to be done regardless of the chunking scheme used in the SDS. Also, as <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;is written specifically for chunked SDSs and does not have the overhead of the additional functionality supported by the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;routine, it is much faster than <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>. Note that attempting to use <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;for writing to a non-chunked data set will return a <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>).</p>
 <p class="Body">The parameter <span class="VarName">datap</span>&#160;must point to an array containing the entire chunk of data. In other words, the size of the array must be the same as the chunk size of the SDS to be written to, or an error condition will result.</p>
 <p class="Body">There are two FORTRAN-77 versions of this routine: <span style="font-weight : bold; ">sfwchnk </span>writes numeric data and <span style="font-weight : bold; ">sfwcchnk </span>writes character data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;returns either a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;are in <a href="#XREF_16657_TABLE_3AD">Table 3AG</a>. The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;are listed in <a href="#XREF_19628_TABLE_3D">(See Table&nbsp;3D on page&nbsp;33)</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_45"></a><a name="IX_parameter_list_44"></a><span class="StepNumber">TABLE 3AG<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_16657_TABLE_3AD"></a>SDwritechunk Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td colspan="2" style="width : 154.586pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 126.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 64.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDwritechunk</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfwchnk/sfwcchnk)</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 64.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">origin</p>
</td>
  <td style="width : 64.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Coordinates of the origin of the chunk to be written</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">datap</p>
</td>
  <td style="width : 64.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 90.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer containing the data to be written</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_chunked_reading_data"></a>3.12.4<a name="XREF_27905_SDreadchunk_and"></a>Reading Data from Chunked SDSs: SDreadchunk and SDreaddata</p>
 <p class="Body">As both <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>&#160;can be used to write data to a chunked SDS, both <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadchunk</span>&#160;can be used to read data from a chunked SDS. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;is discussed in <a href="#XREF_20018_SDwritedata">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.5.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>. The syntax of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadchunk</span> is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDreadchunk(sds_id, origin, datap);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfrchnk(sds_id, origin, datap)</p>
 <p class="FM_syntaxortop"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">OR</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfrcchnk(sds_id, origin, datap)</p>
 <p class="Body"><a name="IX_description_92"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadchunk</span>&#160;is used when an entire chunk of data is to be read. <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;is used when the read operation is to be done regardless of the chunking scheme used in the SDS. Also, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDread&#173;chunk</span>&#160;is written specifically for chunked SDSs and does not have the overhead of the additional functionality supported by the <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;routine. Therefore, it is much faster than <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>. Note that <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadchunk</span>&#160;will return <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>) when an attempt is made to read from a non-chunked data set.</p>
 <p class="Body">As with <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>, the parameter <span class="VarName">origin</span>&#160;specifies the coordinates of the chunk to be read, and the parameter <span class="VarName">datap</span>&#160;must point to an array containing enough space for an entire chunk of data. In other words, the size of the array must be the same as or greater than the chunk size of the SDS to be read, or an error condition will result.</p>
 <p class="Body">There are two FORTRAN-77 versions of this routine: <span style="font-weight : bold; ">sfrchnk</span>&#160;reads numeric data and <span style="font-weight : bold; ">sfrcchnk</span>&#160;reads character data.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadchunk</span>&#160;returns either a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDread&#173;chunk</span>&#160;are further described in <a href="#XREF_22398_TABLE_3AE">Table 3AH</a>. The parameters of <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;are listed in <a href="#XREF_33783_TABLE_3K">(See Table&nbsp;3K on page&nbsp;59)</a>.</p>
 <p class="Figure"><a name="IX_parameter_list_47"></a><a name="IX_parameter_list_46"></a><span class="StepNumber">TABLE 3AH<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_22398_TABLE_3AE"></a>SDreadchunk Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
  <p class="FM_TableHead">(FORTRAN-77)</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td colspan="2" style="width : 154.586pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 126.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 30.00pt;">
  <td style="width : 60.826pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 93.760pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreadchunk</p>
  <p class="FM_ReturnType">[intn]</p>
  <p class="CellFunction">(sfrchnk/sfrcchnk)</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 60.826pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 93.760pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">origin</p>
</td>
  <td style="width : 60.826pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 93.760pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Coordinates of the origin of the chunk to be read</p>
</td>
</tr>
  <tr style=" height : 22.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">datap</p>
</td>
  <td style="width : 60.826pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">VOIDP</p>
</td>
  <td style="width : 93.760pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">&lt;valid numeric data type&gt;(*)/</p>
  <p class="CellParameter">character*(*)</p>
</td>
  <td style="width : 126.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Buffer for the returned chunk data</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3"><a name="IX_chunked_obtaining"></a>3.12.5<a name="XREF_10144_SDgetchunkinfo"></a>Obtaining Information about a Chunked SDS: SDgetchunkinfo&#160;</p>
 <p class="Body"><a name="IX_description_93"></a><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetchunkinfo</span>&#160;is used to determine whether an SDS is chunked and how the chunk is defined. The syntax of this routine is as follows:</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">C:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = SDgetchunkinfo(sds_id, c_def, flag);</p>
 <p class="FM_1syntax"><span class="FM_syntaxLang" style="font-family : Courier New; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">FORTRAN:</span><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>status = sfgichnk(sds_id, dim_length, flag)</p>
 <p class="Body">Currently, only information about chunk dimensions is retrieved into the corresponding structure element <span class="VarName">c_def</span>&#160;for each type of compression in C, and into the array <span class="VarName">dim_length</span>&#160;in Fortran. No information on compression parameters is available in the structure <span class="VarName">comp</span>&#160;of the union <span class="DefName">HDF_CHUNK_DEF</span>. For specific information on <span class="VarName">c_def</span>, refer to <a href="#XREF_32968_SDsetchunk">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.12.1<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a>.</p>
 <p class="Body">The value returned in the parameter <span class="VarName">flag</span>&#160;indicates the data set type (i.e., whether the data set is not chunked, chunked, or chunked and compressed).</p>
 <p class="Body">If the data set is not chunked, the value of <span class="VarName">flag</span>&#160;will be <span class="DefName">HDF_NONE</span>&#160;(or <span class="DefName">-1</span>). If the data set is chunked, the value of <span class="VarName">flag</span>&#160;will be <span class="DefName">HDF_CHUNK</span>&#160;(or <span class="DefName">0</span>). If the data set is chunked and compressed with either RLE, Skipping Huffman, or GZIP compression algorithm, then the value of <span class="VarName">flag</span>&#160;will be <span class="DefName">HDF_CHUNK | HDF_COMP</span>&#160;(or <span class="DefName">1</span>). If the data set is chunked and compressed with NBIT compression, then the value of <span class="VarName">flag</span>&#160;will be <span class="DefName">HDF_CHUNK | HDF_NBIT</span>&#160;(or <span class="DefName">2</span>).</p>
 <p class="Body">If the chunk length for each dimension is not needed, <span class="DefName">NULL</span>&#160;can be passed in as the value of the parameter <span class="VarName">c_def</span> in C.</p>
 <p class="Body">Note that if the data set is empty, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetchunkinfo</span>&#160;will fail. &#160;Thus, application must first verify that the data set has been written with data, before calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetchunkinfo</span>. &#160;<span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcheckempty</span>&#160;in <a href="#XREF_39481_SDcheckempty">Section<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>3.7.10<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></a> determines whether the data set is empty.</p>
 <p class="Body"><span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetchunkinfo</span>&#160;returns either a value of <span class="DefName">SUCCEED</span>&#160;(or <span class="DefName">0</span>) or <span class="DefName">FAIL</span>&#160;(or <span class="DefName">-1</span>). Refer to <a href="#XREF_20980_TABLE_3AF">Table 3AI</a>&#160;and <a href="#XREF_42601_TABLE_3AG_sfgichnk">Table 3AJ</a> for the description of the parameters of both versions.</p>
 <p class="Figure"><a name="IX_parameter_list_49"></a><a name="IX_parameter_list_48"></a><span class="StepNumber">TABLE 3AI<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_20980_TABLE_3AF"></a>SDgetchunkinfo Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_ReturnType">[Return Type]</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td style="width : 82.586pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 198.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="3" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetchunkinfo</p>
  <p class="FM_ReturnType">[intn]</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">c_def</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">HDF_CHUNK_DEF *</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Union structure containing information about the chunks in the SDS</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">flag</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">int32 *</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Flag determining the behavior of the routine</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><a name="IX_parameter_list_50"></a><span class="StepNumber">TABLE 3AJ<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_42601_TABLE_3AG_sfgichnk"></a>sfgichnk Parameter List</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 64.686pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
  <p class="FM_TableHead">&nbsp;</p>
</td>
  <td rowspan="2" style="width : 45.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parame&#173;ter</p>
</td>
  <td style="width : 82.586pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Parameter Type</p>
</td>
  <td rowspan="2" style="width : 198.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 15.00pt;">
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 64.686pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">sfgichnk</p>
  <p class="CellFunction">&nbsp;</p>
</td>
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">sds_id</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Data set identifier</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">dim_length</p>
</td>
  <td style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer(*)</p>
</td>
  <td style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sizes of the chunk dimensions</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="2" style="width : 45.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">comp_type</p>
</td>
  <td rowspan="2" style="width : 82.586pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">integer</p>
</td>
  <td rowspan="2" style="width : 198.000pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Compression type</p>
</td>
</tr>
  <tr style=" height : 0.00pt;"></tr>
 </table>
</td></tr>
 </table>
 <p class="Figure"><span class="StepNumber">EXAMPLE 17.<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Writing and Reading a Chunked SDS.</p>
 <p class="Body">This example demonstrates the use of the routines <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetchunk/sfschnk</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata/sfwdata</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk/sfwchnk</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDgetchunkinfo/sfgichnk</span>, <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata/sfrdata</span>, and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadchunk/sfrchnk</span>&#160;to create a chunked data set, write data to it, get information about the data set, and read the data back. Note that the Fortran example uses transpose data to reflect the difference between C and Fortran internal storage.</p>
 <p class="FM_CodeCTitle">C:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode">#include &quot;mfhdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define FILE_NAME &#160;&#160;&#160;&#160;&quot;SDSchunked.hdf&quot;</p>
 <p class="FM_ExampleCode">#define SDS_NAME &#160;&#160;&#160;&#160;&#160;&quot;ChunkedData&quot;</p>
 <p class="FM_ExampleCode">#define RANK &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main()</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sd_id, sds_id, sds_index;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;flag, maxcache, new_maxcache;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes[2], origin[2];</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;HDF_CHUNK_DEF c_def, c_def_out; /* Chunking definitions */ </p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_flag, c_flags;</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;all_data[9][4];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;start[2], edges[2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;chunk_out[3][2];</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;row[2] = { 5, 5 };</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;column[3] = { 4, 4, 4 };</p>
 <p class="FM_ExampleCode"> &#160;&#160;int16 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fill_value = 0; &#160;&#160;/* Fill value */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;i,j;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Declare chunks data type and initialize some of them. </p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int16 chunk1[3][2] = { 1, 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1, 1,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1, 1 }; </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int16 chunk2[3][2] = { 2, 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2, 2,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2, 2 }; </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int16 chunk3[3][2] = { 3, 3,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3, 3,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3, 3 }; </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int16 chunk6[3][2] = { 6, 6,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6, 6,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;6, 6 };</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/********************* End of variable declaration ***********************/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Define chunk’s dimensions.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;In this example we do not use compression. </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To use chunking with RLE, Skipping Huffman, and GZIP</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;compression, initialize</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.comp.chunk_lengths[0] = 3;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.comp.chunk_lengths[1] = 2; </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;To use chunking with NBIT, initialize</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.nbit.chunk_lengths[0] = 3;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.nbit.chunk_lengths[1] = 2; </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;c_def.chunk_lengths[0] = 3;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;c_def.chunk_lengths[1] = 2;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Create the file and initialize SD interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_CREATE);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Create 9x4 SDS.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;dim_sizes[0] = 9;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;dim_sizes[1] = 4;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;sds_id = SDcreate (sd_id, SDS_NAME,DFNT_INT16, RANK, dim_sizes);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Fill the SDS array with the fill value.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDsetfillvalue (sds_id, (VOIDP)&amp;fill_value);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Create chunked SDS.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* In this example we do not use compression ( third</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* parameter of SDsetchunk is set to HDF_CHUNK).</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* To use RLE compresssion, set compression type and flag</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.comp.comp_type = COMP_CODE_RLE;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_flag = HDF_CHUNK | HDF_COMP;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* To use Skipping Huffman compression, set compression type, flag</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* and skipping size skp_size</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.comp.comp_type = COMP_CODE_SKPHUFF;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.comp.cinfo.skphuff.skp_size = value; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_flag = HDF_CHUNK | HDF_COMP;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* To use GZIP compression, set compression type, flag and</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* deflate level</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.comp.comp_type = COMP_CODE_DEFLATE;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.comp.cinfo.deflate.level = value; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_flag = HDF_CHUNK | HDF_COMP;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* To use NBIT compression, set compression flag and</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* compression parameters</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_flag = HDF_CHUNK | HDF_NBIT;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.nbit.start_bit = value1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.nbit.bit_len &#160;&#160;= value2; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.nbit.sign_ext &#160;= value3; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def.nbit.fill_one &#160;= value4; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;comp_flag = HDF_CHUNK;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDsetchunk (sds_id, c_def, comp_flag);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Set chunk cache to hold maximum of 3 chunks.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;maxcache = 3;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;flag = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;new_maxcache = SDsetchunkcache (sds_id, maxcache, flag);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Write chunks using SDwritechunk function.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Chunks can be written in any order.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Write the chunk with the coordinates (0,0).</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[0] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDwritechunk (sds_id, origin, (VOIDP) chunk1);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* &#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Write the chunk with the coordinates (1,0).</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[0] = 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDwritechunk (sds_id, origin, (VOIDP) chunk3);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* &#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* Write the chunk with the coordinates (0,1). </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[0] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[1] = 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDwritechunk (sds_id, origin, (VOIDP) chunk2);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Write chunk with the coordinates (1,2) using</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* SDwritedata function.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[0] = 6;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[1] = 2;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[0] = 3;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[1] = 2;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP) chunk6); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Fill second column in the chunk with the coordinates (1,1)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* using SDwritedata function.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[0] = 3;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[1] = 3;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[0] = 3;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[1] = 1;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP) column); </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Fill second row in the chunk with the coordinates (0,2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* using SDwritedata function.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[0] = 7;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[0] = 1;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[1] = 2;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;status = SDwritedata (sds_id, start, NULL, edges, (VOIDP) row); </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Reopen the file and access the first data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;sd_id = SDstart (FILE_NAME, DFACC_READ);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;sds_index = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;sds_id = SDselect (sd_id, sds_index);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Get information about the SDS. Only chunk lengths and compression</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* flag can be returned. Compression information is not available if</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* NBIT, Skipping Huffman, or GZIP compression is used.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDgetchunkinfo (sds_id, &amp;c_def_out, &amp;c_flags);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;if (c_flags == HDF_CHUNK )</p>
 <p class="FM_ExampleCode">       printf(&quot; SDS is chunked\nChunk’s dimensions %dx%d\n&quot;,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def_out.chunk_lengths[0],</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def_out.chunk_lengths[1]);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;else if (c_flags == (HDF_CHUNK | HDF_COMP))</p>
 <p class="FM_ExampleCode">         printf(&quot;SDS is chunked and compressed\nChunk’s dimensions %dx%d\n&quot;,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def_out.comp.chunk_lengths[0],</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def_out.comp.chunk_lengths[1]);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;else if (c_flags == (HDF_CHUNK | HDF_NBIT))</p>
 <p class="FM_ExampleCode">         printf (&quot;SDS is chunked (NBIT)\nChunk’s dimensions %dx%d\n&quot;,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def_out.nbit.chunk_lengths[0],</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;c_def_out.nbit.chunk_lengths[1]);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Read the entire data set using SDreaddata function.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[0] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;start[1] = 0;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[0] = 9;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;edges[1] = 4;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDreaddata (sds_id, start, NULL, edges, (VOIDP)all_data);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Print out what we have read.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* The following information should be displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* SDS is chunked </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Chunk’s dimensions 3x2</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1 1 2 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1 1 2 2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1 1 2 2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 3 0 4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 3 0 4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3 3 0 4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0 0 6 6</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5 5 6 6</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0 0 6 6</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;for (j=0; j&lt;9; j++) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i=0; i&lt;4; i++) printf (&quot; %d&quot;, all_data[j][i]);</p>
 <p class="FM_ExampleCode">         printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Read chunk with the coordinates (2,0) and display it.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[0] = 2;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;origin[1] = 0; &#160;&#160;&#160;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDreadchunk (sds_id, origin, chunk_out);</p>
 <p class="FM_ExampleCode">    printf (&quot; Chunk (2,0) \n&quot;);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;for (j=0; j&lt;3; j++) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i=0; i&lt;2; i++) printf (&quot; %d&quot;, chunk_out[j][i]);</p>
 <p class="FM_ExampleCode">         printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Read chunk with the coordinates (1,1) and display it.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;origin[0] = 1;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;origin[1] = 1; &#160;&#160;&#160;<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDreadchunk (sds_id, origin, chunk_out);</p>
 <p class="FM_ExampleCode">    printf (&quot; Chunk (1,1) \n&quot;);</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;for (j=0; j&lt;3; j++) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for (i=0; i&lt;2; i++) printf (&quot; %d&quot;, chunk_out[j][i]);</p>
 <p class="FM_ExampleCode">         printf (&quot;\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/* &#160;The following information is displayed:</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;Chunk (2,0) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;0 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;5 5</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;0 0</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;* &#160;&#160;Chunk (1,1) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;0 4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;0 4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* &#160;&#160;0 4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;/* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Terminate access to the data set.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDendaccess (sds_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;* Terminate access to the SD interface and close the file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;status = SDend (sd_id);</p>
 <p class="FM_ExampleCode">} &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_CodeFTitle">FORTRAN:<span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;chunk_examples</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*14 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*11 SDS_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;RANK</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(FILE_NAME = ’SDSchunked.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS_NAME &#160;= ’ChunkedData’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK &#160;&#160;&#160;&#160;&#160;= 2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;DFACC_CREATE, DFACC_READ, DFNT_INT16</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(DFACC_CREATE = 4,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFACC_READ &#160;&#160;= 1,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFNT_INT16 &#160;&#160;= 22)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;COMP_CODE_NONE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter &#160;&#160;(COMP_CODE_NONE = 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;This example does not use compression.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use RLE compression, declare:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;COMP_CODE_RLE</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;parameter &#160;&#160;(COMP_CODE_RLE = 1)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use NBIT compression, declare:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;COMP_CODE_NBIT</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;parameter &#160;&#160;(COMP_CODE_NBIT = 2)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use Skipping Huffman compression, declare:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;COMP_CODE_SKPHUFF</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;parameter &#160;&#160;(COMP_CODE_SKPHUFF = 3)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use GZIP compression, declare:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;integer &#160;&#160;&#160;&#160;&#160;COMP_CODE_DEFLATE</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;parameter &#160;&#160;(COMP_CODE_DEFLATE = 4)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer sfstart, sfcreate, sfendacc, sfend,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;sfselect, sfsfill, sfschnk, sfwchnk,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;sfrchnk, sfgichnk, sfwdata, sfrdata,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;sfscchnk</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer &#160;&#160;sd_id, sds_id, sds_index, status &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;dim_sizes(2), origin(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;fill_value, maxcache, new_maxcache, flag</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;start(2), edges(2), stride(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer*2 all_data(4,9)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer*2 row(3), column(2)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer*2 chunk_out(2,3)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer*2 chunk1(2,3),</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;chunk2(2,3),</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;chunk3(2,3),</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;chunk6(2,3)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;i, j</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Compression flag and parameters.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer comp_type, comp_flag, comp_prm(4)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Chunk’s dimensions.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer dim_length(2), dim_length_out(2)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize four chunks</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data chunk1 /6*1/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data chunk2 /6*2/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data chunk3 /6*3/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data chunk6 /6*6/</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize row and column arrays.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data row /3*4/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data column /2*5/</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Define chunk’s dimensions.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_length(1) = 2 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_length(2) = 3 </p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the file and initialize SD interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_CREATE)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create 4x9 SDS</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes(1) = 4 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;dim_sizes(2) = 9 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfcreate(sd_id, SDS_NAME, DFNT_INT16,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RANK, dim_sizes)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Fill SDS array with the fill value.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;fill_value = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfsfill( sds_id, fill_value)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create chunked SDS.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;In this example we do not use compression.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use RLE compression, initialize comp_type parameter</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;before the call to sfschnk function.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_type = COMP_CODE_RLE</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;To use NBIT, Skipping Huffman, or GZIP compression,</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;initialize comp_prm array and comp type parameter</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;before call to sfschnk function</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;NBIT:</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_prm(1) = value_of(sign_ext)</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_prm(2) = value_of(fill_one)</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_prm(3) = value_of(start_bit)</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_prm(4) = value_of(bit_len)</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_type &#160;&#160;= COMP_CODE_NBIT</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Skipping Huffman:</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_prm(1) = value_of(skp_size)</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_type &#160;&#160;= COMP_CODE_SKPHUFF</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;GZIP:</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_prm(1) = value_of(deflate_level) </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;comp_type &#160;&#160;= COMP_CODE_DEFLATE</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;comp_type = COMP_CODE_NONE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfschnk(sds_id, dim_length, comp_type, comp_prm)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Set chunk cache to hold maximum 2 chunks.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;flag = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;maxcache = 2</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;new_maxcache = sfscchnk(sds_id, maxcache, flag) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write chunks using SDwritechunk function.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Chunks can be written in any order.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write chunk with the coordinates (1,1).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;origin(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;origin(2) = 1</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfwchnk(sds_id, origin, chunk1) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write chunk with the coordinates (1,2).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(1) = 1 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(2) = 2 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfwchnk(sds_id, origin, chunk3) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write chunk with the coordinates (2,1).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(1) = 2 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(2) = 1 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfwchnk(sds_id, origin, chunk2) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write chunk with the coordinates (2,3).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(1) = 2 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(2) = 3 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = sfwchnk(sds_id, origin, chunk6) </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Fill second row in the chunk with the coordinates (2,2).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 3</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = 3</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(1) = 1 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(2) = 3 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, row)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Fill second column in the chunk with the coordinates (1,3).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(1) = 0 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;start(2) = 7 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(1) = 2 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;edges(2) = 1 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfwdata(sds_id, start, stride, edges, column)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file. &#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Reopen the file and access the first data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sd_id = sfstart(FILE_NAME, DFACC_READ)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_index = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;sds_id = sfselect(sd_id, sds_index)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get information about the SDS.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfgichnk(sds_id, dim_length_out, comp_flag)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (comp_flag .eq. 0) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’SDS is chunked’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (comp_flag .eq. 1) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’SDS is chunked and compressed’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (comp_flag .eq. 2) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’SDS is chunked and NBIT compressed’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Chunks dimensions are ’, dim_length_out(1),</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ ’ &#160;x’ ,dim_length_out(2)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read the whole SDS using sfrdata function and display</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;what we have read. The following information will be displayed:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;SDS is chunked</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Chunks dimensions are &#160;&#160;2 &#160;x &#160;3</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1 &#160;1 &#160;1 &#160;3 &#160;3 &#160;3 &#160;0 &#160;5 &#160;0</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1 &#160;1 &#160;1 &#160;3 &#160;3 &#160;3 &#160;0 &#160;5 &#160;0</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2 &#160;2 &#160;2 &#160;0 &#160;0 &#160;0 &#160;6 &#160;6 &#160;6</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2 &#160;2 &#160;2 &#160;4 &#160;4 &#160;4 &#160;6 &#160;6 &#160;6</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(1) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;start(2) = 0</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(1) = 4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;edges(2) = 9</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(1) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;stride(2) = 1</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrdata(sds_id, start, stride, edges, all_data)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Display the SDS.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 i = 1,4</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) (all_data(i,j), j=1,9)</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue &#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read chunks with the coordinates (2,2) and (1,3) and display.</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;The following information will be shown:</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Chunk (2,2)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;0 &#160;0</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4 &#160;4 &#160;4</p>
 <p class="FM_ExampleCode">C </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Chunk (1,3)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;5 &#160;0</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0 &#160;5 &#160;0</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;origin(1) = 2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;origin(2) = 2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrchnk(sds_id, origin, chunk_out)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Chunk (2,2)’</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 20 i = 1,2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) (chunk_out(i,j), j=1,3)</p>
 <p class="FM_ExampleCode">20 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(1) = 1 </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;origin(2) = 3 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfrchnk(sds_id, origin, chunk_out)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Chunk (1,3)’</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 30 i = 1,2</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) (chunk_out(i,j), j=1,3)</p>
 <p class="FM_ExampleCode">30 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the data set.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfendacc(sds_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the SD interface and close the file. &#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = sfend(sd_id)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;end </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="Heading2">3.13<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_13394_3_12_Ghost_Areas"></a>Ghost Areas </p>
 <p class="Body">In cases where the size of the SDS array is not an even multiple of the chunk size, regions of excess array space beyond the defined dimensions of the SDS will be created. Refer to the follow&#173;ing illustration.</p>
 <p class="Figure"><a name="IX_contents"></a><span class="StepNumber">FIGURE 3e<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>Array Locations Created Beyond the Defined Dimensions of an SDS</p>
 <div align="center"><img alt="UG_SD00005.png" style=" width:100%; margin-left:30pt; max-width:486.216pt;" id="image4" src="UG_SD00005.png" />
 </div>
 <p class="Body">These &quot;ghost areas&quot; can be accessed only by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreadchunk</span>&#160;and <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritechunk</span>; they cannot be accessed by either <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDreaddata</span>&#160;or <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDwritedata</span>. Therefore, storing data in these areas is not rec&#173;ommended. Future versions of the HDF library may not include the ability to write to these areas.</p>
 <p class="Body">If the fill value has been set, the values in these array locations will be initialized to the fill value. It is highly recommended that users set the fill value before writing to chunked SDSs so that gar&#173;bage values won’t be read from these locations.</p>
 <p class="Heading2"><a name="IX_netCDF"></a>3.14<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;</span><a name="XREF_20609_3_13_netCDF"></a>netCDF</p>
 <p class="Body"><a name="IX_HDF_support_of"></a>HDF supports the netCDF data model and interface developed at the Unidata Program Center (UPC). Like HDF, netCDF is an interface to a library of data access programs that store and retrieve data. The file format developed at the UPC to support netCDF uses XDR (eXternal Data Representation), a non-proprietary external data representation developed by Sun Microsystems for describing and encoding data. Full documentation on netCDF and the Unidata netCDF inter&#173;face is available at <span class="FM_URL" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.05em; ">http://www.unidata.ucar.edu/packages/netcdf/</span>.</p>
 <p class="Body">The netCDF data model is interchangeable with the SDS data model in so far as it is possible to use the netCDF calling interface to place an SDS into an HDF file and conversely the SDS inter&#173;face will read from an XDR-based netCDF file. Because the netCDF interface has not changed and netCDF files stored in XDR format are readable, existing netCDF programs and data are still usable, although programs will need to be relinked to the new library. However, there are impor&#173;tant conceptual differences between the HDF and the netCDF data model that must be understood to effectively use HDF in working with netCDF data objects and to understand enhancements to the interface that will be included in the future to make the two APIs much more similar.</p>
 <p class="Body">In the HDF model, when a multidimensional SDS is created by <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDcreate</span>, HDF data objects are also created that provide information about the individual dimensions — one for each dimension. Each SDS contains within its internal structure the array data as well as pointers to these dimen&#173;sions. Each dimension is stored in a structure that is in the HDF file but separate from the SDS array.</p>
 <p class="Body">If more than one SDS have the same dimension sizes, they may share dimensions by pointing to the same dimensions. This can be done in application programs by calling <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">SDsetdimname</span>&#160;to assign the same dimension name to all dimensions that are shared by several SDSs. For example, suppose you make the following sequence of calls for every SDS in a file:</p>
 <p class="FM_1syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dim_id = SDgetdimid(sds_id, 0);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ret = SDsetdimname(dim_id, &quot;Lat&quot;);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dim_id = SDgetdimid(sds_id, 1);</p>
 <p class="FM_syntax"><span style="font-family:Times New Roman; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ret = SDsetdimname(dim_id, &quot;Long&quot;);</p>
 <p class="Body">This will create a shared dimension named &quot;<span class="VarName">Lat</span>&quot; that is associated with every SDS as the first dimension and a dimension named &quot;<span class="VarName">Long</span>&quot; as the second dimension.</p>
 <p class="Body">This same result is obtained differently in netCDF. Note that a netCDF &quot;variable&quot; is roughly the same as an HDF SDS. The netCDF interface requires application programs to define all dimen&#173;sions, using <span class="VarName">ncdimdef</span>, before defining variables. Those defined dimensions are then used to define variables in <span class="VarName">ncvardef</span>. Each dimension is defined by a name and a size. All variables using the same dimension will have the same dimension name and dimension size.</p>
 <p class="Body">Although the HDF SDS interface will read from and write to <span style="font-style : italic; ">existing</span>&#160;XDR-based netCDF files, HDF cannot be used to <span style="font-style : italic; ">create </span>XDR-based netCDF files.</p>
 <p class="Body">There is currently no support for mixing HDF data objects that are not SDSs and netCDF data objects. For example, a raster image can exist in the same HDF file as a netCDF data object, but you must use one of the HDF raster image APIs to read the image and the HDF SD or netCDF interface to read the netCDF data object. The other HDF APIs are currently being modified to allow multifile access. Closer integration with the netCDF interface will probably be delayed until the end of that project.</p>
 <p class="Heading3"><a name="IX_HDF_interface_vs_netCDF"></a><a name="IX_netCDF_interface_vs_HDF"></a>3.14.1<a name="XREF_19660_3_13_1_HDF"></a>HDF Interface vs. netCDF Interface</p>
 <p class="Body">Existing netCDF applications can be used to read HDF files and existing HDF applications can be used to read XDR-based netCDF files. To read an HDF file using a netCDF application, the appli&#173;cation must be recompiled using the HDF library. For example, recompiling the netCDF utility <span class="VarName">ncdump</span> with HDF creates a utility that can dump scientific data sets from both HDF and XDR-based files. To read an XDR-based file using an HDF application, the application must be relinked to the HDF library.</p>
 <p class="Body">The current version of HDF contains several APIs that support essentially the same data model: </p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The multifile SD interface.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The netCDF or NC interface.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The single-file DFSD interface.</p>
 <p class="Bullet2"><span class="FM_BulletSymbol">•<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>The multifile GR interface.</p>
 <p class="Body">The first three models can create, read, and write SDSs in HDF files. Both the SD and NC inter&#173;faces can read from and write to XDR-based netCDF files, but they cannot create them. This interoperability means that a single program may contain both SD and NC function calls and thus transparently read and write scientific data sets to HDF or XDR-based files. </p>
 <p class="Body">The SD interface is the only HDF interface capable of accessing the XDR-based netCDF file for&#173;mat. The DFSD interface cannot access XDR-based files and can only access SDS arrays, dimen&#173;sion scales, and predefined attributes. A summary of file interoperability among the three interfaces is provided in <a href="#XREF_14728_TABLE_3AH_Summary">Table 3AK</a>.</p>
 <p class="Figure"><span class="StepNumber">TABLE 3AK<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_14728_TABLE_3AH_Summary"></a>Summary of HDF and XDR File Compatibility for the HDF and netCDF APIs</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:348.37pt;" cellspacing="0" align="left">
  <tr style=" height : 48.00pt;">
  <td style="width : 88.271pt; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="Body">&nbsp;</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Files Created by </p>
  <p class="FM_TableHead">DFSD inter&#173;face</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Files Created by </p>
  <p class="FM_TableHead">SD interface</p>
</td>
  <td colspan="2" style="width : 135.300pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Files Written by </p>
  <p class="FM_TableHead">NC Interface</p>
</td>
</tr>
  <tr style=" height : 37.00pt;">
  <td style="width : 88.271pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="Body">&nbsp;</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">HDF</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">HDF</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">HDF Library</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Unidata netCDF Library</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 88.271pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Accessed by DFSD</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">No</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 88.271pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Accessed by SD</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 88.271pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Accessed by NC</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td colspan="2" style="width : 62.400pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
  <td style="width : 67.650pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellParameter">Yes</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Body">A summary of NC function calls and their SD equivalents is presented in <a href="#XREF_39199_TABLE_3AI_NC">Table 3AL</a>. </p>
 <p class="Figure"><a name="IX_netCDF_1"></a><a name="IX_HDF_interface_vs_netCDF_1"></a><a name="IX_netCDF_interface_vs_HDF_1"></a><a name="IX_SD_scientific_data_set_3"></a><span class="StepNumber">TABLE 3AL<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><a name="XREF_39199_TABLE_3AI_NC"></a>NC Interface Routine Calls and their SD Equivalents</p>
 <table width="100%">
  <tr>
  <td>
 <table style=" border-spacing:0; padding-left:4.00pt; padding-top:4.00pt; padding-right:4.00pt; padding-bottom:2.00pt; float:alignleft; margin-left:95.33pt; width:100%; max-width:390.67pt;" cellspacing="0" align="left">
  <tr style=" height : 15.00pt;">
  <td rowspan="2" style="width : 63.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Purpose</p>
</td>
  <td colspan="2" style="width : 117.071pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Routine Name</p>
</td>
  <td rowspan="2" style="width : 75.599pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">SD</p>
  <p class="FM_TableHead">Equivalent</p>
</td>
  <td rowspan="2" style="width : 134.202pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">Description</p>
</td>
</tr>
  <tr style=" height : 26.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">C</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableHead">FORTRAN-77</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="9" style="width : 63.800pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Operations</p>
</td>
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">nccreate</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCCRE</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDstart</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Creates a file</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncopen</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCOPN</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDstart</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Opens a file</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncredef</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCREDF</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Applicable</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets open file into define mode</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncendef</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCENDF</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Applicable</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Leaves define mode</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncclose</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCCLOS</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDend</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Closes an open file</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncinquire</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCINQ</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDfileinfo</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Inquires about an open file</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncsync</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCSNC</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Applicable</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Synchronizes a file to disk</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncabort</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCABOR</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Applicable</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Backs out of recent definitions</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncsetfill</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCSFIL</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Sets fill mode for writes</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="4" style="width : 63.800pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Dimensions</p>
</td>
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncdimdef</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCDDEF</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetdimname</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Creates a dimension</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncdimid</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCDID</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetdimid</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns a dimension identifier from its name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncdiminq</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCDINQ</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDdiminfo</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Inquires about a dimension</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncdimrename</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCDREN</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Renames a dimension</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="9" style="width : 63.800pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Variables</p>
</td>
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvardef</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVDEF</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDcreate</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Creates a variable</p>
</td>
</tr>
  <tr style=" height : 19.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvarid</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVID</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDnametoindex and SDselect</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns a variable identifier from its name</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvarinq</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVINQ</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDgetinfo</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns information about a variable</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvarput1</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVPT1</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Writes a single data value</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvarget1</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVGT1</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reads a single data value</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvarput</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVPT</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDwritedata</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Writes a hyperslab of values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvarget</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVGT/NCVGTC</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreaddata</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Reads a hyperslab of values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncvarrename</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCVREN</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Renames a variable</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">nctypelen</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCTLEN</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">DFKNTsize</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns the number of bytes for a data type</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td rowspan="7" style="width : 63.800pt; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="FM_TableCategory">Attributes</p>
</td>
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncattput</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCAPT/NCAPTC</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDsetattr</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Creates an attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncattinq</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCAINQ</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDattrinfo</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns information about an attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncattcopy</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCACPY</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Copies attribute from one file to another</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncattget</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCAGT/NCAGTC</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDreadattr</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns attributes values</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncattname</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCANAM</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">SDattrinfo</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Returns name of attribute from its number</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncattrename</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCAREN </p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Renames an attribute</p>
</td>
</tr>
  <tr style=" height : 13.00pt;">
  <td style="width : 59.471pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">ncattdel</p>
</td>
  <td style="width : 57.600pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellFunction">NCADEL</p>
</td>
  <td style="width : 75.599pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Not Implemented</p>
</td>
  <td style="width : 134.202pt; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
  <p class="CellDescription">Deletes an attribute</p>
</td>
</tr>
 </table>
</td></tr>
 </table>
 <p class="Heading3">3.14.2ncdump and ncgen</p>
 <p class="Body">The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">ncdump</span> summary capability works on both HDF and netCDF files.</p>
 <p class="Body">The <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">ncgen</span> summary capability works only on netCDF files.</p>
 <p class="Heading4">3.14.2.1<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Using ncdump on HDF Files</p>
 <p class="Body">When used with an HDF file on some platforms (reported on SGI), <span class="FM_FunctionName" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 10.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">ncdump</span>&#160;may display signed 8-bit integer data (<span class="FM_Figure9ptBold" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">int8</span>, with the intended signed range of <span class="VarName">-127</span>&#160;through <span class="VarName">128</span>) as unsigned 8-bit inte&#173;ger data (<span class="FM_Figure9ptBold" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">uint8</span>, with the unsigned range <span class="VarName">0</span>&#160;through <span class="VarName">255</span>). &#160;This is due to the mapping of <span class="FM_Figure9ptBold" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">int8</span>&#160;and <span class="FM_Figure9ptBold" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">uint8</span>&#160;data types in HDF to a common data type, <span class="FM_Figure9ptBold" style="font-family : Times New Roman; font-style : normal; font-weight : bold; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : 0.00em; ">NC_BYTE</span>, in netCDF.</p>
 <p class="Heading4">3.14.2.2<span style='word-spacing:normal; font:6.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>New error code from ncdump</p>
 <p class="Body">Prior to 4.2.11, ncdump did not report failure in reading corrupted data even though the internal reading function failed, thus, ncdump appeared to succeed when data corruption exists. &#160;Starting in version 4.2.11, when corrupted data is encountered, ncdump will display the following message for the variable with corrupted data and proceed to the next variable or exit if there are no more variables to read:</p>
 <p class="codeExample"> &quot;Reading failed for variable &lt;<span style="font-style : italic; ">Variable name</span>&gt;, the data is possibly corrupted.&quot;</p>
 <p class="Body">&nbsp;</p>
 <p class="FM_Footnote"><a name="FNH_0"></a><a href="#FNB_0">1. &#160;</a><span class="Title-in-text">netCDF-3 User’s Guide for C</span>&#160;(June 5, 1997), Section 7, <span class="FM_URL" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.05em; ">http://www.uni&#173;data.ucar.edu/software/netcdf/docs/netcdf/</span>.</p>
 <p class="FM_Footnote"><a name="FNH_1"></a><a href="#FNB_1">2. &#160;</a><span class="Title-in-text">netCDF-3 User’s Guide for C</span>&#160;(June 5, 1997), Section 2, <span class="FM_URL" style="font-family : Courier New; font-style : normal; font-weight : normal; font-size  : 9.0pt; color   : #000000; text-decoration  : none  ;
		letter-spacing : -0.05em; ">http://www.uni&#173;data.ucar.edu/software/netcdf/docs/netcdf/</span>.</p>
</div>
				
				<div class="content_top_link">
					<a>&#160;</a> 
				</div>
				<div class="mobile_browseholder">
					<div class="brsBack">
						<a id="browseSeqBack1" class="wBSBackButton" href="../UG_Fundmtls/UG_Fundmtls.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButtonMobile" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonMobileHover" border="0" style="width:100%; max-width:56px" /></a> 
						 
					</div>
					<div class="brsNext">
						<a id="browseSeqNext1" class="wBSNextButton" href="../UG_Vdatas/UG_Vdatas.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButtonMobile" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonMobileHover" border="0" style="width:100%; max-width:48px" /></a> 
						 
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="buttonbar">
		<div class="buttonbarholder topic_page_holder">
			<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" 
				 title="Table of Contents">
				<a href="../../table_of_contents.htm">&#160;</a> 
			</div>
			<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" 
				 title="Index">
				<a href="../../index1.htm">&#160;</a> 
			</div>
			<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
				 title="Glossary">
				<a href="../../glossary.htm">&#160;</a> 
			</div>
			<div class="bar_search topic_page">
				<a href="../../searchresults.htm" title="Search">&#160;</a> 
			</div>
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
