
<!DOCTYPE HTML>
<html>
<head>
 <meta http-equiv="X-UA-Compatible" content="IE=edge" />
 <meta name="OriginalFile" content="C:\hdf\H4\releases\4.2.12\Doc\hdf4doc\UsrGuide\src\Examples_MAN.fm" />
 <meta name="Originator" content="ImportMif" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=100%, initial-scale=1" />
<meta name="generator" content="Adobe FrameMaker 12" />
<title>HDF User’s Guide - 4.2.12</title>
<link href="../../template/Theme1_Standard/main.css" type="text/css" rel="stylesheet" />
<link href="../../template/Theme1_Standard/jqueryui-custom.css" type="text/css" rel="stylesheet" />
 <link rel="stylesheet" href="Examples_MAN.css" type="text/css" />
 <link rel="StyleSheet" href="../../Responsive_HTML5_stylesheet.css" type="text/css" /><script type="text/javascript" language="JavaScript">//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]></script><style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadcsh.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/showhidecontrols.js"></script>
<script type="text/javascript" src="../../template/scripts/pageloader.js"></script>
<script type="text/javascript" src="../../template/scripts/toctree.js"></script>
<script type="text/javascript" src="../../template/scripts/toctreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/indextree.js"></script>
<script type="text/javascript" src="../../template/scripts/indextreeloader.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylist.js"></script>
<script type="text/javascript" src="../../template/scripts/glossarylistloader.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
<script type="text/javascript" src="../../template/scripts/searchfield.js"></script>
<script type="text/javascript" src="../../template/scripts/tabpanels.js"></script>
<script type="text/javascript" >
gTocPageHtml = "{%ICON%}<span  class=\"wTOCTreePageText\">{%LINK_NAME%}</span>";
gTocBookClosedHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocBookOpenHtml = "{%ICON%}<span  class=\"wTOCTreeCloseBookText\">{%LINK_NAME%}</span>";
gTocUrlHtml = "{%ICON%}<span  class=\"wTOCTreeLinkText\">{%LINK_NAME%}</span>";
gTocPageIconSrc = "../../template/Theme1_Standard/TOCTreePage.png";
gTocPageIconHoverSrc = "../../template/Theme1_Standard/TOCTreePageHover.png";
gTocPageIconSelSrc = "../../template/Theme1_Standard/TOCTreePageSelected.png";
gTocPageIconClass = "wTOCTreePageIcon";
gTocPageIconStyle = "";
gTocBookClosedIconSrc = "../../template/Theme1_Standard/TOCTreeCloseBook.png";
gTocBookClosedIconHoverSrc = "../../template/Theme1_Standard/TOCTreeCloseBookHover.png";
gTocBookClosedIconSelSrc = "../../template/Theme1_Standard/TOCTreeCloseBookSelected.png";
gTocBookClosedIconClass = "wTOCTreeCloseBookIcon";
gTocBookClosedIconStyle = "";
gTocBookOpenIconSrc = "../../template/Theme1_Standard/TOCTreeOpenBook.png";
gTocBookOpenIconHoverSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHover.png";
gTocBookOpenIconSelSrc = "../../template/Theme1_Standard/TOCTreeOpenBookHoverSelected.png";
gTocBookOpenIconClass = "wTOCTreeOpenBookIcon";
gTocBookOpenIconStyle = "";
gTocUrlIconSrc = "../../template/Theme1_Standard/TOCTreeLink.png";
gTocUrlIconHoverSrc = "../../template/Theme1_Standard/TOCTreeLinkHover.png";
gTocUrlIconSelSrc = "../../template/Theme1_Standard/TOCTreeLinkSelected.png";
gTocUrlIconClass = "wTOCTreeLinkIcon";
gTocUrlIconStyle = "";
</script>
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
</script>
<script type="text/javascript" >
gIdxKWHtml = "<span  class=\"wIdxKeywordText\">{%LINK_NAME%}</span>";
	gIdxLinkHtml = "<span  class=\"wIdxLinkText\">{%LINK_NAME%}</span>";
	gIdxCategoryHtml = "<span  class=\"wIdxAlphabetText\">{%LINK_NAME%}</span>";
</script>
<script type="text/javascript" >
gTopicId = "25.0_1";
</script>
<script type="text/javascript" >
gGloTermHtml = "<span  class=\"wGloTermText\">{%LINK_NAME%}</span>";
	gGloDefHtml = "<span  class=\"wGloDefinitionText\">{%LINK_NAME%}</span>";
	gGloCategoryHtml = "<span  class=\"wGloAlphabetText\">{%LINK_NAME%}</span>";
</script>
 <link rel="SHORTCUT ICON" href="../../Responsive HTML5_favicon.png" />
</head>

<body>
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

<div class="floatholder">
	<div class="phone_scrollarea overthrow">
		<div class="header">
			<div class="logo">
				<a href="../UG_Intro/UG_Intro.htm" class="homelink"><img src="../../template/Theme1_Standard/logo.png" alt="Logo" id="wLogoImage" style=" border:none; width:100%; max-width:90px;" border="0" /></a> 
				 
			</div>
			<div class="title">
				<a href="../UG_Intro/UG_Intro.htm" class="homelink"><span>HDF User’s Guide - 4.2.12</span></a> 
				 
			</div>
		</div>
		<div class="sidebar">
			<div data-showin="Always" class="wTabbedPanel" id="tabbedpanel">
				<ul class="wTabGroup" id="tab" data-tabid="tocTabButton" style="margin: 0px;">
					<li class="wTab" id="tocTabButton" data-contentid="tocTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/toc.png" class="normal" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButton" style=" border:none; width:100%; max-width:42px;" border="0" /><img src="../../template/Theme1_Standard/toc_hover.png" class="hover" alt="Table of Contents" title="Table of Contents" id="xmlEditorTOCSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
					<li class="wTab" id="idxTabButton" data-contentid="idxTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/index.png" class="normal" alt="Index" title="Index" id="xmlEditorIDXSidebarButton" style=" border:none; width:100%; max-width:48px;" border="0" /><img src="../../template/Theme1_Standard/index_hover.png" class="hover" alt="Index" title="Index" id="xmlEditorIDXSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
					<li class="wTab" id="gloTabButton" data-contentid="gloTabPane" onmouseout="onTabHoverOut(this, 'tab')" data-class="wTab" ontouchend="onTabHoverOut(this, 'tab')" onclick="selectTab(this, 'tab')" ontouchstart="onTabHover(this, 'tab')" data-classhover="wTabHover" style="display: inline;" ontouchmove="onTabHoverOut(this, 'tab')" data-classsel="wTabSelected" onmouseover="onTabHover(this, 'tab')"><img src="../../template/Theme1_Standard/glo.png" class="normal" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButton" style=" border:none; width:100%; max-width:48px;" border="0" /><img src="../../template/Theme1_Standard/glo_hover.png" class="hover" alt="Glossary" title="Glossary" id="xmlEditorGLOSidebarButtonHover" style=" border:none; width:100%; max-width:48px;" border="0" /></li>
				</ul>
				<div class="wTabContentGroup">
					<div id="tocTabPane" class="wTabContent">
						<div id="toc" class="wTOCTree" tabindex="632">
							
							
							
							
						</div>
					</div>
					<div id="idxTabPane" class="wTabContent">
						<div id="idx" class="wIndex">
							<input class="wIdxFilter" id="idxFilterBox" type="text" data-placeholder="Filter Keyword" onkeyup="filterIdx()"></input>
							
							
							
						</div>
					</div>
					<div id="gloTabPane" class="wTabContent">
						<div id="glo" class="wGlossary">
							<input class="wGloFilter" id="gloFilterBox" type="text" data-placeholder="Filter Term" onkeyup="filterGlo()"></input>
							
							
							
						</div>
					</div>
				</div>
			</div>
			<div class="closebutton buttonOpened">
				&#160; 
			</div>
		</div>
		<div class="content">
			<div class="desktop_functionholder">
				<div class="searchholder">
					<div class="wSearchField">
						<input id="searchBox" class="wSearchField" type="search" data-placeholder="-Search-" onkeydown="searchHelp(event, 'searchBox')" data-search="true" /><a class="wSearchLink" onclick="searchHelp(null, 'searchBox')" href="#"><img src="../../template/Theme1_Standard/Search.png" alt="" id="xmlEditwSearchLink" class="wSearchLink" border="0" style="width:100%; max-width:28px" /></a> 
						 
					</div>
				</div>
				<div class="brsNext">
					<a id="browseSeqNext" class="wBSNextButton" href="../Example_PAL/Example_PAL.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButton" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonHover" border="0" style="width:100%; max-width:48px" /></a> 
					 
				</div>
				<div class="print">
					<a href="javascript:window.print()" class="wPrintButton"><img src="../../template/Theme1_Standard/Print.png" alt="" class="wPrintButton normal" id="xmlEditorPrintButton" border="0" style="width:100%; max-width:48px" /><img src="../../template/Theme1_Standard/Print_hover.png" alt="" class="wPrintButton hover" id="xmlEditorPrintButtonHover" border="0" style="width:100%; max-width:48px" /></a> 
				</div>
				<div class="brsBack">
					<a id="browseSeqBack" class="wBSBackButton" href="../Example_Vg/Example_Vg.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButton" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonHover" border="0" style="width:100%; max-width:56px" /></a> 
					 
				</div>
			</div>
			<div class="contentholder">
				<div class="mobile_browseholder">
					<div class="brsBack">
						<a id="browseSeqBack0" class="wBSBackButton" href="../Example_Vg/Example_Vg.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton" border="0" style="width:100%; max-width:48px" /></a> 
					</div>
					<div class="brsNext">
						<a id="browseSeqNext0" class="wBSNextButton" href="../Example_PAL/Example_PAL.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton" border="0" style="width:100%; max-width:48px" /></a> 
					</div>
				</div>
				<a name="content_top_placeholder"></a> 
				<div class="wTopic" id="rh_default_topic_placeholder_id">

 <p class="FM_ExamplePage"><a name="XREF_20548_create_annotation_c"></a>create_annotation.c</p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&#160;&#160;&#160;&quot;General_HDFobjects.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VG_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;AN Vgroup&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_LABEL_TXT &quot;General HDF objects&quot;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_DESC_TXT &#160;&quot;This is an HDF file that contains general HDF objects&quot;</p>
 <p class="FM_ExampleCode">#define &#160;DATA_LABEL_TXT &quot;Common AN Vgroup&quot;</p>
 <p class="FM_ExampleCode">#define &#160;DATA_DESC_TXT &#160;&quot;This is a vgroup that is used to test data annotations&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( )</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;status_n; &#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;status_32, &#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, &#160;&#160;&#160;&#160;&#160;/* HDF file identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;an_id, &#160;&#160;&#160;&#160;&#160;&#160;&#160;/* AN interface identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_label_id, &#160;/* file label identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_desc_id, &#160;&#160;/* file description identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_label_id, &#160;/* data label identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;data_desc_id, &#160;&#160;/* data description identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vgroup_id;</p>
 <p class="FM_ExampleCode"> &#160;&#160;uint16 vgroup_tag, vgroup_ref;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_CREATE, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the AN interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;an_id = ANstart(file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the file label.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_label_id = ANcreatef(an_id, AN_FILE_LABEL);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Write the annotations to the file label.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_32 = ANwriteann(file_label_id, FILE_LABEL_TXT, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strlen (FILE_LABEL_TXT));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create file description.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_desc_id = ANcreatef(an_id, AN_FILE_DESC);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Write the annotation to the file description. &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_32 = ANwriteann(file_desc_id, FILE_DESC_TXT, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strlen (FILE_DESC_TXT));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create a vgroup in the V interface. &#160;Note that the vgroup’s ref number </p>
 <p class="FM_ExampleCode"> &#160;&#160;* is set to -1 for creating and the access mode is &quot;w&quot; for writing.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart(file_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;vgroup_id = Vattach(file_id, -1, &quot;w&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Vsetname (vgroup_id, VG_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Obtain the tag and ref number of the vgroup for subsequent</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* references. &#160;</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vgroup_tag = (uint16) VQuerytag (vgroup_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;vgroup_ref = (uint16) VQueryref (vgroup_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create the data label for the vgroup identified by its tag </p>
 <p class="FM_ExampleCode"> &#160;&#160;* and ref number.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;data_label_id = ANcreate(an_id, vgroup_tag, vgroup_ref, AN_DATA_LABEL);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Write the annotation text to the data label.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;status_32 = ANwriteann(data_label_id, DATA_LABEL_TXT, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;strlen(DATA_LABEL_TXT));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;* Create the data description for the vgroup identified by its tag </p>
 <p class="FM_ExampleCode"> &#160;&#160;* and ref number.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;data_desc_id = ANcreate(an_id, vgroup_tag, vgroup_ref, AN_DATA_DESC);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Write the annotation text to the data description.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = ANwriteann(data_desc_id, DATA_DESC_TXT, strlen(DATA_DESC_TXT));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Teminate access to the vgroup and to the V interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = Vdetach(vgroup_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vend(file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to each annotation explicitly.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = ANendaccess(file_label_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = ANendaccess(file_desc_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = ANendaccess(data_label_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = ANendaccess(data_desc_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the AN interface and close the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = ANend(an_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Hclose(file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExamplePage"><a name="XREF_33922_create_annotation_f"></a>create_annotation.f</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program create_annotation</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*22 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*9 &#160;VG_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*19 FILE_LABEL_TXT</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*53 FILE_DESC_TXT</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*16 DATA_LABEL_TXT</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*54 DATA_DESC_TXT</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;= ’General_HDFobjects.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VG_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;= ’AN Vgroup’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FILE_LABEL_TXT = ’General HDF objects’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATA_LABEL_TXT = ’Common AN Vgroup’,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;FILE_DESC_TXT &#160;= </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ ’This is an HDF file that contains general HDF objects’,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATA_DESC_TXT &#160;= </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ ’This is a vgroup that is used to test data annotations’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFACC_CREATE</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_CREATE = 4)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer AN_FILE_LABEL, AN_FILE_DESC, AN_DATA_LABEL, AN_DATA_DESC</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (AN_FILE_LABEL = 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AN_FILE_DESC &#160;= 3,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AN_DATA_LABEL = 0,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AN_DATA_DESC &#160;= 1)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer afstart, affcreate, afwriteann, afcreate,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;afendaccess, afend</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vfstart, vfatch, vfsnam, vqref, vqtag, vfdtch, vfend</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration ******************************************* </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file_id, an_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file_label_id, file_desc_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer data_label_id, data_desc_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vgroup_id, vgroup_tag, vgroup_ref</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_CREATE, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the AN interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;an_id = afstart(file_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the file label.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_label_id = affcreate(an_id, AN_FILE_LABEL)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the annotation to the file label.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afwriteann(file_label_id, FILE_LABEL_TXT,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;len(FILE_LABEL_TXT)) &#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create file description.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_desc_id = affcreate(an_id, AN_FILE_DESC)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the annotation to the file description.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afwriteann(file_desc_id, FILE_DESC_TXT,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;len(FILE_DESC_TXT))</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create a vgroup in the file. Note that the vgroup’s ref number is</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;set to -1 for creating and the access mode is ’w’ for writing.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status &#160;&#160;&#160;= vfstart(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vgroup_id = vfatch(file_id, -1, ’w’)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status &#160;&#160;&#160;= vfsnam(vgroup_id, VG_NAME) &#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Obtain the tag and reference number of the vgroup for subsequent</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;references.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vgroup_ref = vqref(vgroup_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vgroup_tag = vqtag(vgroup_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the data label for the vgroup identified by its tag and ref </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;number.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;data_label_id = afcreate(an_id, vgroup_tag, vgroup_ref,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AN_DATA_LABEL)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the annotation text to the data label.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = afwriteann(data_label_id, DATA_LABEL_TXT, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;len(DATA_LABEL_TXT))</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Create the data description for the vgroup identified by its tag and ref.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;data_desc_id = afcreate(an_id, vgroup_tag, vgroup_ref, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AN_DATA_DESC)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Write the annotation text to the data description.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afwriteann(data_desc_id, DATA_DESC_TXT,</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;len(DATA_DESC_TXT)) &#160;&#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;&#160;</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the vgroup and to the V interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfdtch(vgroup_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfend(file_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to each annotation explicitly.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afendaccess(file_label_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afendaccess(file_desc_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afendaccess(data_label_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afendaccess(data_desc_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the AN interface and close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afend(an_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;end </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExamplePage"><a name="XREF_31051_read_annotation_c"></a>read_annotation.c</p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&quot;General_HDFobjects.hdf&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( )</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn &#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32 */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, &#160;&#160;&#160;&#160;&#160;&#160;/* HDF file identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;an_id, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* AN interface identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ann_id, &#160;&#160;&#160;&#160;&#160;&#160;&#160;/* an annotation identifier */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;index, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* position of an annotation in all of the same type*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ann_length, &#160;&#160;&#160;/* length of the text in an annotation */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_file_labels, n_file_descs, n_data_labels, n_data_descs;</p>
 <p class="FM_ExampleCode"> &#160;&#160;char *ann_buf; &#160;&#160;&#160;&#160;&#160;&#160;/* buffer to hold the read annotation */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Open the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_READ, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the AN interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;an_id = ANstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the annotation information, e.g., the numbers of file labels, file</p>
 <p class="FM_ExampleCode"> &#160;&#160;* descriptions, data labels, and data descriptions.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = ANfileinfo (an_id, &amp;n_file_labels, &amp;n_file_descs,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;n_data_labels, &amp;n_data_descs);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the data labels. &#160;Note that this for loop can be used to</p>
 <p class="FM_ExampleCode"> &#160;&#160;* obtain the contents of each kind of annotation with the appropriate</p>
 <p class="FM_ExampleCode"> &#160;&#160;* number of annotations and the type of annotation, i.e., replace</p>
 <p class="FM_ExampleCode"> &#160;&#160;* n_data_labels with n_file_labels, n_file_descs, or n_data_descs, and</p>
 <p class="FM_ExampleCode"> &#160;&#160;* AN_DATA_LABEL with AN_FILE_LABEL, AN_FILE_DESC, or AN_DATA_DESC,</p>
 <p class="FM_ExampleCode"> &#160;&#160;* respectively.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;for (index = 0; index &lt; n_data_labels; index++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Get the identifier of the current data label.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ann_id = ANselect (an_id, index, AN_DATA_LABEL);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Get the length of the data label.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ann_length = ANannlen (ann_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Allocate space for the buffer to hold the data label text.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ann_buf = malloc ((ann_length+1) * sizeof (char));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Read and display the data label. &#160;Note that the size of the buffer,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* i.e., the third parameter, is 1 character more than the length of</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* the data label; that is for the null character. &#160;It is not the case</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;* when a description is retrieved because the description does not </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* necessarily end with a null character.</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;* </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status_32 = ANreadann (ann_id, ann_buf, ann_length+1);</p>
 <p class="FM_ExampleCode">      printf (&quot;Data label index: %d\n&quot;, index);</p>
 <p class="FM_ExampleCode">      printf (&quot;Data label contents: %s\n&quot;, ann_buf);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Terminate access to the current data label.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status_n = ANendaccess (ann_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Free the space allocated for the annotation buffer.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;free (ann_buf);</p>
 <p class="FM_ExampleCode"> &#160;&#160;}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the AN interface and close the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = ANend (an_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Hclose (file_id);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExamplePage"><a name="XREF_16074_read_annotation_f"></a>read_annotation.f</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program &#160;read_annotation</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*22 FILE_NAME</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME = ’General_HDFobjects.hdf’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;DFACC_READ</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_READ = 1)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;AN_DATA_LABEL</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (AN_DATA_LABEL = 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer afstart, affileinfo, afselect, afannlen, afreadann,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;afendaccess, afend</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file_id, an_id, ann_id</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer index, ann_length </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer n_file_labels, n_file_descs, n_data_labels, n_data_descs </p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;character*256 ann_buf </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for reading.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_READ, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the AN interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;an_id = afstart(file_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the annotation information, i.e., the number of file labels,</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;file descriptions, data labels, and data descriptions.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = affileinfo(an_id, n_file_labels, n_file_descs,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_data_labels, n_data_descs)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the data labels. Note that this DO loop can be used to obtain </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;the contents of each kind of annotation with the appropriate number</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;of annotations and the type of annotation, i.e., replace</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;n_data_labels with n_file_labels, n_files_descs, or n_data_descs, and</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;AN_DATA_LABEL with AN_FILE_LABEL, AN_FILE_DESC, or AN_DATA_DESC, </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;respectively.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 index = 0, n_data_labels-1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the identifier of the current data label.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ann_id = afselect(an_id, index, AN_DATA_LABEL)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the length of the data label.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ann_length = afannlen(ann_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Read and display the data label. The data label is read into buffer</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;ann_buf. One has to make sure that ann_buf has sufficient size to hold</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;the data label. Also note, that the third argument to afreadann is </p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;1 greater that the actual length of the data label (see comment to</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;C example).</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = afreadann(ann_id, ann_buf, ann_length+1) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Data label index: ’, index</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Data label contents: ’, ann_buf(1:ann_length) </p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the current data label.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = afendaccess(ann_id) &#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the AN interface and close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afend(an_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExamplePage"><a name="XREF_32393_get_annotation"></a>get_annotation_info.c</p>
 <p class="FM_ExampleCode">#include &quot;hdf.h&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">#define &#160;FILE_NAME &#160;&#160;&quot;General_HDFobjects.hdf&quot;</p>
 <p class="FM_ExampleCode">#define &#160;VG_NAME &#160;&#160;&#160;&#160;&quot;AN Vgroup&quot;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">main( )</p>
 <p class="FM_ExampleCode">{</p>
 <p class="FM_ExampleCode"> &#160;&#160;/************************* Variable declaration **************************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;intn &#160;&#160;status_n; &#160;&#160;&#160;&#160;&#160;/* returned status for functions returning an intn */</p>
 <p class="FM_ExampleCode"> &#160;&#160;int32 &#160;status_32, &#160;&#160;&#160;&#160;/* returned status for functions returning an int32*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;file_id, an_id, ann_id, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;n_annots, &#160;&#160;&#160;&#160;&#160;/* number of annotations */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*ann_list, &#160;&#160;&#160;&#160;&#160;/* list of annotation identifiers */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vgroup_ref, &#160;&#160;&#160;/* reference number of the vgroup */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;index; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* index of an annotation in the annotation list */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ann_type annot_type = AN_DATA_DESC; &#160;&#160;/* annotation to be obtained*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;uint16 ann_tag, ann_ref, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* tag/ref number of an annotation */</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;vgroup_tag = DFTAG_VG; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/* tag of the vgroup */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/********************** End of variable declaration **********************/</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Create the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;file_id = Hopen (FILE_NAME, DFACC_READ, 0);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the V interface.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Vstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the vgroup named VG_NAME.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;vgroup_ref = Vfind &#160;(file_id, VG_NAME);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Initialize the AN interface and obtain an interface id.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;an_id = ANstart (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get the number of object descriptions. &#160;Note that, since ANnumann takes</p>
 <p class="FM_ExampleCode"> &#160;&#160;* the tag and reference number as being of type unit16, vgroup_ref must be</p>
 <p class="FM_ExampleCode"> &#160;&#160;* safely cast to uint16 by checking for FAIL value first.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;if (vgroup_ref != FAIL)</p>
 <p class="FM_ExampleCode"> &#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_annots = ANnumann (an_id, annot_type, vgroup_tag, (uint16)vgroup_ref);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* Allocate space to hold the annotation identifiers.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ann_list = malloc (n_annots * sizeof (int32));</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;* Get the list of identifiers of the annotations attached to the </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* vgroup and of type annot_type.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;n_annots = ANannlist (an_id, annot_type, vgroup_tag, (uint16)vgroup_ref, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ann_list);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;* Get each annotation identifier from the list then display the </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;* tag/ref number pair of the corresponding annotation.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode">      printf (&quot;List of annotations of type AN_DATA_DESC:\n&quot;);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;for (index = 0; index &lt; n_annots; index++)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;{</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;/*</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* Get and display the ref number of the annotation from </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;* its identifier.</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;status_32 = ANid2tagref (ann_list[index], &amp;ann_tag, &amp;ann_ref);</p>
 <p class="FM_ExampleCode">         printf (&quot;Annotation index %d: tag = %s\nreference number= %d\n&quot;, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;index, ann_tag == DFTAG_DIA ? &quot;DFTAG_DIA (data description)&quot;:</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&quot;Incorrect&quot;, ann_ref);</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;} /* for */</p>
 <p class="FM_ExampleCode"> &#160;&#160;} /* for */</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get and display an annotation type from an annotation tag.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;annot_type = ANtag2atype (DFTAG_FID);</p>
 <p class="FM_ExampleCode">   printf (&quot;\nAnnotation type of DFTAG_FID (file label) is %s\n&quot;, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;annot_type == AN_FILE_LABEL ? &quot;AN_FILE_LABEL&quot;:&quot;Incorrect&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Get and display an annotation tag from an annotation type.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;ann_tag = ANatype2tag (AN_DATA_LABEL);</p>
 <p class="FM_ExampleCode">   printf (&quot;\nAnnotation tag of AN_DATA_LABEL is %s\n&quot;, </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ann_tag == DFTAG_DIL ? &quot;DFTAG_DIL (data label)&quot;:&quot;Incorrect&quot;);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Terminate access to the AN interface and close the HDF file.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_32 = ANend (an_id);</p>
 <p class="FM_ExampleCode"> &#160;&#160;status_n = Hclose (file_id);</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode"> &#160;&#160;/*</p>
 <p class="FM_ExampleCode"> &#160;&#160;* Free the space allocated for the annotation identifier list.</p>
 <p class="FM_ExampleCode"> &#160;&#160;*/</p>
 <p class="FM_ExampleCode"> &#160;&#160;free (ann_list);</p>
 <p class="FM_ExampleCode">}</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExamplePage"><a name="XREF_33005_get_annotation"></a>get_annotation_info.f</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;program annotation_info</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;implicit none</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Parameter declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*22 FILE_NAME</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;character*9 &#160;VG_NAME</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (FILE_NAME &#160;&#160;&#160;&#160;&#160;= ’General_HDFobjects.hdf’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VG_NAME &#160;&#160;&#160;&#160;&#160;&#160;&#160;= ’AN Vgroup’)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer &#160;&#160;&#160;DFACC_READ</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFACC_READ = 1)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer AN_FILE_LABEL, AN_DATA_LABEL, AN_DATA_DESC</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (AN_FILE_LABEL = 2,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AN_DATA_LABEL = 0,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;AN_DATA_DESC &#160;= 1)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFTAG_DIA, DFTAG_FID, DFTAG_DIL</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFTAG_DIA = 105,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFTAG_FID = 100,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DFTAG_DIL = 104)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer DFTAG_VG</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;parameter (DFTAG_VG = 1965)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Function declaration</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer hopen, hclose</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer afstart, afnumann, afannlist, afidtagref, aftagatype,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;afatypetag, afend</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer vfstart, vfind </p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** Variable declaration *******************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer status</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer file_id, an_id</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer n_annots, ann_index, annot_type, ann_tag, ann_ref</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;integer ann_list(10) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;integer vgroup_tag, vgroup_ref</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C**** End of variable declaration ************************************</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;annot_type = AN_DATA_DESC</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vgroup_tag = DFTAG_VG</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Open the HDF file for reading.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;file_id = hopen(FILE_NAME, DFACC_READ, 0)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the V interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = vfstart(file_id)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the group named VG_NAME.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;vgroup_ref = vfind(file_id, VG_NAME)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Initialize the AN interface.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;an_id = afstart(file_id)</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the number of object descriptions. </p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;if (vgroup_ref .eq. -1) goto 100 </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_annots = afnumann(an_id, annot_type, vgroup_tag, vgroup_ref)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get the list of identifiers of the annotations attached to the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;vgroup and of type annot_type. Identifiers are read into ann_list</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;buffer. One has to make sure that ann_list has the size big enough</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;to hold the list of identifiers.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;n_annots = afannlist(an_id, annot_type, vgroup_tag, vgroup_ref,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ann_list)</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get each annotation identifier from the list then display the</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;tag/ref number pair of the corresponding annotation.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’List of annotations of type AN_DATA_DESC’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;do 10 ann_index = 0, n_annots - 1</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get and display the ref number of the annotation from its</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;identifier.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;status = afidtagref(ann_list(ann_index+1), ann_tag, ann_ref) </p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’Annotation index: ’, ann_index</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (ann_tag .eq. DFTAG_DIA) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’tag = DFTAG_DIA (data description)’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;else</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’ tag = Incorrect’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;endif</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;write(*,*) ’reference number = ’, ann_ref</p>
 <p class="FM_ExampleCode">10 &#160;&#160;&#160;continue</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get and display an annotation type from an annotation tag.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;annot_type = aftagatype(DFTAG_FID)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (annot_type .eq. AN_FILE_LABEL) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Annotation type of DFTAG_FID (file label) is ’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;’AN_FILE_LABEL ’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;else</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Annotation type of DFTAG_FID (file label) is ’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;’Incorrect’</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;endif &#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Get and display an annotation tag from an annotation type.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;ann_tag = afatypetag(AN_DATA_LABEL)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;if (ann_tag .eq. DFTAG_DIL ) then</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Annotation tag of AN_DATA_LABEL is ’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;’DFTAG_DIL (data label)’</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;else</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;write(*,*) ’Annotation type of DFTAG_FID (file label) is ’,</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;+ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;’Incorrect’</p>
 <p class="FM_ExampleCode">&#160;&#160;&#160;&#160;&#160;&#160;endif &#160;&#160;</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">C &#160;&#160;&#160;&#160;Terminate access to the AN interface and close the HDF file.</p>
 <p class="FM_ExampleCode">C</p>
 <p class="FM_ExampleCode">100 &#160;&#160;continue</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = afend(an_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;status = hclose(file_id)</p>
 <p class="FM_ExampleCode"> &#160;&#160;&#160;&#160;&#160;end</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
 <p class="FM_ExampleCode">&nbsp;</p>
</div>
				
				<div class="content_top_link">
					<a>&#160;</a> 
				</div>
				<div class="mobile_browseholder">
					<div class="brsBack">
						<a id="browseSeqBack1" class="wBSBackButton" href="../Example_Vg/Example_Vg.htm"><img alt="" src="../../template/Theme1_Standard/BSBack.png" class="wBSBackButton normal" id="xmlEditorBSBackButtonMobile" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSBack_hover.png" class="wBSBackButton hover" id="xmlEditorBSBackButtonMobileHover" border="0" style="width:100%; max-width:56px" /></a> 
						 
					</div>
					<div class="brsNext">
						<a id="browseSeqNext1" class="wBSNextButton" href="../Example_PAL/Example_PAL.htm"><img alt="" src="../../template/Theme1_Standard/BSNext.png" class="wBSNextButton normal" id="xmlEditorBSNextButtonMobile" border="0" style="width:100%; max-width:48px" /><img alt="" src="../../template/Theme1_Standard/BSNext_hover.png" class="wBSNextButton hover" id="xmlEditorBSNextButtonMobileHover" border="0" style="width:100%; max-width:48px" /></a> 
						 
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="buttonbar">
		<div class="buttonbarholder topic_page_holder">
			<div class="bar_toc topic_page" id="xmlEditorButtonBarTOC" 
				 title="Table of Contents">
				<a href="../../table_of_contents.htm">&#160;</a> 
			</div>
			<div class="bar_index topic_page" id="xmlEditorButtonBarIDX" 
				 title="Index">
				<a href="../../index1.htm">&#160;</a> 
			</div>
			<div class="bar_glossary topic_page" id="xmlEditorButtonBarGLO" 
				 title="Glossary">
				<a href="../../glossary.htm">&#160;</a> 
			</div>
			<div class="bar_search topic_page">
				<a href="../../searchresults.htm" title="Search">&#160;</a> 
			</div>
		</div>
	</div>
</div>
<div id="localisation">
	<p id="localisation_toc"><span>Table of Contents</span></p>
	<p id="localisation_idx"><span>Index</span></p>
	<p id="localisation_glo"><span>Glossary</span></p>
	<p id="localisation_fts"><span>-Search-</span></p>
	<p id="localisation_back"><span>Back</span></p>
</div>
<script type="text/javascript" src="../../template/Theme1_Standard/jquery.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/jqueryui-custom.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/overthrow.sidescroller.min.js"></script>
<script type="text/javascript" src="../../template/Theme1_Standard/layout.js"></script>
<script type="text/javascript">//<![CDATA[
$(function(){
	addRhLoadCompleteEvent(setTopic);
});
//]]></script>
</body>
</html>
